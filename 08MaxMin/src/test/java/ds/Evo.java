/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 03 19:37:49 GMT 2016
 */

package ds;

import org.junit.Test;
import static org.junit.Assert.*;

//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

import ds.MaxMin4;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Evo {

  //Test case number: 0
  /*
   * 151 covered goals:
   * Goal 1. cap2.MaxMin4.maxMin4([III)[I: I11 Branch 1 IF_ICMPGT L5 - true
   * Goal 2. cap2.MaxMin4.maxMin4([III)[I: I11 Branch 1 IF_ICMPGT L5 - false
   * Goal 3. cap2.MaxMin4.maxMin4([III)[I: I20 Branch 2 IF_ICMPGE L6 - true
   * Goal 4. cap2.MaxMin4.maxMin4([III)[I: I101 Branch 3 IF_ICMPLE L15 - true
   * Goal 5. cap2.MaxMin4.maxMin4([III)[I: I116 Branch 4 IF_ICMPGE L16 - true
   * Goal 6. Branch cap2.MaxMin4.maxMin4([III)[I: I11 Branch 1 IF_ICMPGT L5 - true in context: cap2.MaxMin4:maxMin4([III)[I
   * Goal 7. maxMin4([III)[I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 8. cap2.MaxMin4.maxMin4([III)[I: Line 4
   * Goal 9. cap2.MaxMin4.maxMin4([III)[I: Line 5
   * Goal 10. cap2.MaxMin4.maxMin4([III)[I: Line 6
   * Goal 11. cap2.MaxMin4.maxMin4([III)[I: Line 7
   * Goal 12. cap2.MaxMin4.maxMin4([III)[I: Line 8
   * Goal 13. cap2.MaxMin4.maxMin4([III)[I: Line 10
   * Goal 14. cap2.MaxMin4.maxMin4([III)[I: Line 11
   * Goal 15. cap2.MaxMin4.maxMin4([III)[I: Line 12
   * Goal 16. cap2.MaxMin4.maxMin4([III)[I: Line 13
   * Goal 17. cap2.MaxMin4.maxMin4([III)[I: Line 14
   * Goal 18. cap2.MaxMin4.maxMin4([III)[I: Line 15
   * Goal 19. cap2.MaxMin4.maxMin4([III)[I: Line 16
   * Goal 20. cap2.MaxMin4.maxMin4([III)[I: Line 18
   * Goal 21. [METHOD] cap2.MaxMin4.maxMin4([III)[I
   * Goal 22. Weak Mutation 0: cap2.MaxMin4.maxMin4([III)[I:4 - ReplaceConstant - 2 -> 0
   * Goal 23. Weak Mutation 1: cap2.MaxMin4.maxMin4([III)[I:4 - ReplaceConstant - 2 -> 1
   * Goal 24. Weak Mutation 2: cap2.MaxMin4.maxMin4([III)[I:4 - ReplaceConstant - 2 -> -1
   * Goal 25. Weak Mutation 3: cap2.MaxMin4.maxMin4([III)[I:4 - ReplaceConstant - 2 -> 3
   * Goal 26. Weak Mutation 4: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceVariable lsup -> linf
   * Goal 27. Weak Mutation 5: cap2.MaxMin4.maxMin4([III)[I:5 - InsertUnaryOp Negation of lsup
   * Goal 28. Weak Mutation 6: cap2.MaxMin4.maxMin4([III)[I:5 - InsertUnaryOp IINC 1 lsup
   * Goal 29. Weak Mutation 7: cap2.MaxMin4.maxMin4([III)[I:5 - InsertUnaryOp IINC -1 lsup
   * Goal 30. Weak Mutation 8: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceVariable linf -> lsup
   * Goal 31. Weak Mutation 9: cap2.MaxMin4.maxMin4([III)[I:5 - InsertUnaryOp Negation of linf
   * Goal 32. Weak Mutation 10: cap2.MaxMin4.maxMin4([III)[I:5 - InsertUnaryOp IINC 1 linf
   * Goal 33. Weak Mutation 11: cap2.MaxMin4.maxMin4([III)[I:5 - InsertUnaryOp IINC -1 linf
   * Goal 34. Weak Mutation 12: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceArithmeticOperator - -> +
   * Goal 35. Weak Mutation 13: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceArithmeticOperator - -> %
   * Goal 36. Weak Mutation 14: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceArithmeticOperator - -> *
   * Goal 37. Weak Mutation 15: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceArithmeticOperator - -> /
   * Goal 38. Weak Mutation 16: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceConstant - 1 -> 0
   * Goal 39. Weak Mutation 17: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceComparisonOperator > -> ==
   * Goal 40. Weak Mutation 18: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceVariable v -> maxMin
   * Goal 41. Weak Mutation 19: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceVariable linf -> lsup
   * Goal 42. Weak Mutation 20: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp Negation of linf
   * Goal 43. Weak Mutation 21: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp IINC 1 linf
   * Goal 44. Weak Mutation 22: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp IINC -1 linf
   * Goal 45. Weak Mutation 23: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceVariable v -> maxMin
   * Goal 46. Weak Mutation 24: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceVariable lsup -> linf
   * Goal 47. Weak Mutation 25: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp Negation of lsup
   * Goal 48. Weak Mutation 26: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp IINC 1 lsup
   * Goal 49. Weak Mutation 27: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp IINC -1 lsup
   * Goal 50. Weak Mutation 29: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceComparisonOperator >= -> >
   * Goal 51. Weak Mutation 30: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceComparisonOperator >= -> ==
   * Goal 52. Weak Mutation 45: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceVariable maxMin -> v
   * Goal 53. Weak Mutation 46: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceConstant - 0 -> 1
   * Goal 54. Weak Mutation 47: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceVariable v -> maxMin
   * Goal 55. Weak Mutation 48: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceVariable linf -> lsup
   * Goal 56. Weak Mutation 49: cap2.MaxMin4.maxMin4([III)[I:7 - InsertUnaryOp Negation of linf
   * Goal 57. Weak Mutation 50: cap2.MaxMin4.maxMin4([III)[I:7 - InsertUnaryOp IINC 1 linf
   * Goal 58. Weak Mutation 51: cap2.MaxMin4.maxMin4([III)[I:7 - InsertUnaryOp IINC -1 linf
   * Goal 59. Weak Mutation 52: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceVariable maxMin -> v
   * Goal 60. Weak Mutation 53: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceConstant - 1 -> 0
   * Goal 61. Weak Mutation 54: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceVariable v -> maxMin
   * Goal 62. Weak Mutation 55: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceVariable lsup -> linf
   * Goal 63. Weak Mutation 56: cap2.MaxMin4.maxMin4([III)[I:7 - InsertUnaryOp Negation of lsup
   * Goal 64. Weak Mutation 57: cap2.MaxMin4.maxMin4([III)[I:7 - InsertUnaryOp IINC 1 lsup
   * Goal 65. Weak Mutation 58: cap2.MaxMin4.maxMin4([III)[I:7 - InsertUnaryOp IINC -1 lsup
   * Goal 66. Weak Mutation 59: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceVariable linf -> lsup
   * Goal 67. Weak Mutation 60: cap2.MaxMin4.maxMin4([III)[I:10 - InsertUnaryOp Negation of linf
   * Goal 68. Weak Mutation 61: cap2.MaxMin4.maxMin4([III)[I:10 - InsertUnaryOp IINC 1 linf
   * Goal 69. Weak Mutation 62: cap2.MaxMin4.maxMin4([III)[I:10 - InsertUnaryOp IINC -1 linf
   * Goal 70. Weak Mutation 63: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceVariable lsup -> linf
   * Goal 71. Weak Mutation 64: cap2.MaxMin4.maxMin4([III)[I:10 - InsertUnaryOp Negation of lsup
   * Goal 72. Weak Mutation 65: cap2.MaxMin4.maxMin4([III)[I:10 - InsertUnaryOp IINC 1 lsup
   * Goal 73. Weak Mutation 66: cap2.MaxMin4.maxMin4([III)[I:10 - InsertUnaryOp IINC -1 lsup
   * Goal 74. Weak Mutation 67: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator + -> %
   * Goal 75. Weak Mutation 68: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator + -> -
   * Goal 76. Weak Mutation 69: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator + -> *
   * Goal 77. Weak Mutation 70: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator + -> /
   * Goal 78. Weak Mutation 71: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceConstant - 2 -> 0
   * Goal 79. Weak Mutation 72: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceConstant - 2 -> 1
   * Goal 80. Weak Mutation 73: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceConstant - 2 -> -1
   * Goal 81. Weak Mutation 74: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceConstant - 2 -> 3
   * Goal 82. Weak Mutation 75: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator / -> +
   * Goal 83. Weak Mutation 76: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator / -> %
   * Goal 84. Weak Mutation 77: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator / -> -
   * Goal 85. Weak Mutation 78: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator / -> *
   * Goal 86. Weak Mutation 79: cap2.MaxMin4.maxMin4([III)[I:11 - ReplaceVariable v -> maxMin
   * Goal 87. Weak Mutation 80: cap2.MaxMin4.maxMin4([III)[I:11 - ReplaceVariable linf -> lsup
   * Goal 88. Weak Mutation 81: cap2.MaxMin4.maxMin4([III)[I:11 - ReplaceVariable linf -> meio
   * Goal 89. Weak Mutation 82: cap2.MaxMin4.maxMin4([III)[I:11 - InsertUnaryOp Negation of linf
   * Goal 90. Weak Mutation 83: cap2.MaxMin4.maxMin4([III)[I:11 - InsertUnaryOp IINC 1 linf
   * Goal 91. Weak Mutation 84: cap2.MaxMin4.maxMin4([III)[I:11 - InsertUnaryOp IINC -1 linf
   * Goal 92. Weak Mutation 85: cap2.MaxMin4.maxMin4([III)[I:11 - ReplaceVariable meio -> lsup
   * Goal 93. Weak Mutation 86: cap2.MaxMin4.maxMin4([III)[I:11 - ReplaceVariable meio -> linf
   * Goal 94. Weak Mutation 87: cap2.MaxMin4.maxMin4([III)[I:11 - InsertUnaryOp Negation of meio
   * Goal 95. Weak Mutation 88: cap2.MaxMin4.maxMin4([III)[I:11 - InsertUnaryOp IINC 1 meio
   * Goal 96. Weak Mutation 89: cap2.MaxMin4.maxMin4([III)[I:11 - InsertUnaryOp IINC -1 meio
   * Goal 97. Weak Mutation 90: cap2.MaxMin4.maxMin4([III)[I:12 - ReplaceVariable maxMin -> v
   * Goal 98. Weak Mutation 91: cap2.MaxMin4.maxMin4([III)[I:12 - ReplaceConstant - 0 -> 1
   * Goal 99. Weak Mutation 92: cap2.MaxMin4.maxMin4([III)[I:12 - ReplaceVariable maxMin -> v
   * Goal 100. Weak Mutation 93: cap2.MaxMin4.maxMin4([III)[I:12 - ReplaceConstant - 1 -> 0
   * Goal 101. Weak Mutation 94: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable v -> maxMin
   * Goal 102. Weak Mutation 95: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable meio -> lsup
   * Goal 103. Weak Mutation 96: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable meio -> min1
   * Goal 104. Weak Mutation 97: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable meio -> max1
   * Goal 105. Weak Mutation 98: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable meio -> linf
   * Goal 106. Weak Mutation 99: cap2.MaxMin4.maxMin4([III)[I:13 - InsertUnaryOp Negation of meio
   * Goal 107. Weak Mutation 100: cap2.MaxMin4.maxMin4([III)[I:13 - InsertUnaryOp IINC 1 meio
   * Goal 108. Weak Mutation 101: cap2.MaxMin4.maxMin4([III)[I:13 - InsertUnaryOp IINC -1 meio
   * Goal 109. Weak Mutation 102: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceConstant - 1 -> 0
   * Goal 110. Weak Mutation 103: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceArithmeticOperator + -> %
   * Goal 111. Weak Mutation 104: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceArithmeticOperator + -> -
   * Goal 112. Weak Mutation 105: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceArithmeticOperator + -> *
   * Goal 113. Weak Mutation 106: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceArithmeticOperator + -> /
   * Goal 114. Weak Mutation 107: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable lsup -> min1
   * Goal 115. Weak Mutation 108: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable lsup -> meio
   * Goal 116. Weak Mutation 109: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable lsup -> max1
   * Goal 117. Weak Mutation 110: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable lsup -> linf
   * Goal 118. Weak Mutation 111: cap2.MaxMin4.maxMin4([III)[I:13 - InsertUnaryOp Negation of lsup
   * Goal 119. Weak Mutation 112: cap2.MaxMin4.maxMin4([III)[I:13 - InsertUnaryOp IINC 1 lsup
   * Goal 120. Weak Mutation 113: cap2.MaxMin4.maxMin4([III)[I:13 - InsertUnaryOp IINC -1 lsup
   * Goal 121. Weak Mutation 114: cap2.MaxMin4.maxMin4([III)[I:14 - ReplaceVariable maxMin -> v
   * Goal 122. Weak Mutation 115: cap2.MaxMin4.maxMin4([III)[I:14 - ReplaceConstant - 0 -> 1
   * Goal 123. Weak Mutation 116: cap2.MaxMin4.maxMin4([III)[I:14 - ReplaceVariable maxMin -> v
   * Goal 124. Weak Mutation 117: cap2.MaxMin4.maxMin4([III)[I:14 - ReplaceConstant - 1 -> 0
   * Goal 125. Weak Mutation 118: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max1 -> lsup
   * Goal 126. Weak Mutation 122: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max1 -> meio
   * Goal 127. Weak Mutation 124: cap2.MaxMin4.maxMin4([III)[I:15 - InsertUnaryOp Negation of max1
   * Goal 128. Weak Mutation 125: cap2.MaxMin4.maxMin4([III)[I:15 - InsertUnaryOp IINC 1 max1
   * Goal 129. Weak Mutation 126: cap2.MaxMin4.maxMin4([III)[I:15 - InsertUnaryOp IINC -1 max1
   * Goal 130. Weak Mutation 127: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max2 -> lsup
   * Goal 131. Weak Mutation 131: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max2 -> meio
   * Goal 132. Weak Mutation 133: cap2.MaxMin4.maxMin4([III)[I:15 - InsertUnaryOp Negation of max2
   * Goal 133. Weak Mutation 134: cap2.MaxMin4.maxMin4([III)[I:15 - InsertUnaryOp IINC 1 max2
   * Goal 134. Weak Mutation 135: cap2.MaxMin4.maxMin4([III)[I:15 - InsertUnaryOp IINC -1 max2
   * Goal 135. Weak Mutation 137: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceComparisonOperator <= -> <
   * Goal 136. Weak Mutation 148: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable maxMin -> v
   * Goal 137. Weak Mutation 149: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceConstant - 0 -> 1
   * Goal 138. Weak Mutation 150: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max2 -> lsup
   * Goal 139. Weak Mutation 154: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max2 -> meio
   * Goal 140. Weak Mutation 156: cap2.MaxMin4.maxMin4([III)[I:15 - InsertUnaryOp Negation of max2
   * Goal 141. Weak Mutation 157: cap2.MaxMin4.maxMin4([III)[I:16 - ReplaceVariable min1 -> lsup
   * Goal 142. Weak Mutation 160: cap2.MaxMin4.maxMin4([III)[I:16 - ReplaceVariable min1 -> meio
   * Goal 143. Weak Mutation 163: cap2.MaxMin4.maxMin4([III)[I:16 - InsertUnaryOp Negation of min1
   * Goal 144. Weak Mutation 164: cap2.MaxMin4.maxMin4([III)[I:16 - InsertUnaryOp IINC 1 min1
   * Goal 145. Weak Mutation 165: cap2.MaxMin4.maxMin4([III)[I:16 - InsertUnaryOp IINC -1 min1
   * Goal 146. Weak Mutation 166: cap2.MaxMin4.maxMin4([III)[I:16 - ReplaceVariable min2 -> lsup
   * Goal 147. Weak Mutation 169: cap2.MaxMin4.maxMin4([III)[I:16 - ReplaceVariable min2 -> meio
   * Goal 148. Weak Mutation 172: cap2.MaxMin4.maxMin4([III)[I:16 - InsertUnaryOp Negation of min2
   * Goal 149. Weak Mutation 173: cap2.MaxMin4.maxMin4([III)[I:16 - InsertUnaryOp IINC 1 min2
   * Goal 150. Weak Mutation 174: cap2.MaxMin4.maxMin4([III)[I:16 - InsertUnaryOp IINC -1 min2
   * Goal 151. Weak Mutation 176: cap2.MaxMin4.maxMin4([III)[I:16 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[4] = (-2102);
      // Undeclared exception!
      try { 
        MaxMin4.maxMin4(intArray0, 0, 1421);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
    	  assertTrue(true);//assertThrownBy("cap2.MaxMin4", e);
      }
  }

  //Test case number: 1
  /*
   * 177 covered goals:
   * Goal 1. cap2.MaxMin4.maxMin4([III)[I: I11 Branch 1 IF_ICMPGT L5 - true
   * Goal 2. cap2.MaxMin4.maxMin4([III)[I: I11 Branch 1 IF_ICMPGT L5 - false
   * Goal 3. cap2.MaxMin4.maxMin4([III)[I: I20 Branch 2 IF_ICMPGE L6 - true
   * Goal 4. cap2.MaxMin4.maxMin4([III)[I: I20 Branch 2 IF_ICMPGE L6 - false
   * Goal 5. cap2.MaxMin4.maxMin4([III)[I: I101 Branch 3 IF_ICMPLE L15 - false
   * Goal 6. cap2.MaxMin4.maxMin4([III)[I: I116 Branch 4 IF_ICMPGE L16 - true
   * Goal 7. Branch cap2.MaxMin4.maxMin4([III)[I: I11 Branch 1 IF_ICMPGT L5 - true in context: cap2.MaxMin4:maxMin4([III)[I
   * Goal 8. maxMin4([III)[I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 9. cap2.MaxMin4.maxMin4([III)[I: Line 4
   * Goal 10. cap2.MaxMin4.maxMin4([III)[I: Line 5
   * Goal 11. cap2.MaxMin4.maxMin4([III)[I: Line 6
   * Goal 12. cap2.MaxMin4.maxMin4([III)[I: Line 7
   * Goal 13. cap2.MaxMin4.maxMin4([III)[I: Line 8
   * Goal 14. cap2.MaxMin4.maxMin4([III)[I: Line 10
   * Goal 15. cap2.MaxMin4.maxMin4([III)[I: Line 11
   * Goal 16. cap2.MaxMin4.maxMin4([III)[I: Line 12
   * Goal 17. cap2.MaxMin4.maxMin4([III)[I: Line 13
   * Goal 18. cap2.MaxMin4.maxMin4([III)[I: Line 14
   * Goal 19. cap2.MaxMin4.maxMin4([III)[I: Line 15
   * Goal 20. cap2.MaxMin4.maxMin4([III)[I: Line 16
   * Goal 21. cap2.MaxMin4.maxMin4([III)[I: Line 18
   * Goal 22. [METHOD] cap2.MaxMin4.maxMin4([III)[I
   * Goal 23. Weak Mutation 0: cap2.MaxMin4.maxMin4([III)[I:4 - ReplaceConstant - 2 -> 0
   * Goal 24. Weak Mutation 1: cap2.MaxMin4.maxMin4([III)[I:4 - ReplaceConstant - 2 -> 1
   * Goal 25. Weak Mutation 2: cap2.MaxMin4.maxMin4([III)[I:4 - ReplaceConstant - 2 -> -1
   * Goal 26. Weak Mutation 3: cap2.MaxMin4.maxMin4([III)[I:4 - ReplaceConstant - 2 -> 3
   * Goal 27. Weak Mutation 4: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceVariable lsup -> linf
   * Goal 28. Weak Mutation 5: cap2.MaxMin4.maxMin4([III)[I:5 - InsertUnaryOp Negation of lsup
   * Goal 29. Weak Mutation 6: cap2.MaxMin4.maxMin4([III)[I:5 - InsertUnaryOp IINC 1 lsup
   * Goal 30. Weak Mutation 7: cap2.MaxMin4.maxMin4([III)[I:5 - InsertUnaryOp IINC -1 lsup
   * Goal 31. Weak Mutation 8: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceVariable linf -> lsup
   * Goal 32. Weak Mutation 9: cap2.MaxMin4.maxMin4([III)[I:5 - InsertUnaryOp Negation of linf
   * Goal 33. Weak Mutation 10: cap2.MaxMin4.maxMin4([III)[I:5 - InsertUnaryOp IINC 1 linf
   * Goal 34. Weak Mutation 11: cap2.MaxMin4.maxMin4([III)[I:5 - InsertUnaryOp IINC -1 linf
   * Goal 35. Weak Mutation 12: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceArithmeticOperator - -> +
   * Goal 36. Weak Mutation 13: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceArithmeticOperator - -> %
   * Goal 37. Weak Mutation 14: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceArithmeticOperator - -> *
   * Goal 38. Weak Mutation 15: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceArithmeticOperator - -> /
   * Goal 39. Weak Mutation 16: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceConstant - 1 -> 0
   * Goal 40. Weak Mutation 17: cap2.MaxMin4.maxMin4([III)[I:5 - ReplaceComparisonOperator > -> ==
   * Goal 41. Weak Mutation 18: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceVariable v -> maxMin
   * Goal 42. Weak Mutation 19: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceVariable linf -> lsup
   * Goal 43. Weak Mutation 20: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp Negation of linf
   * Goal 44. Weak Mutation 21: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp IINC 1 linf
   * Goal 45. Weak Mutation 22: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp IINC -1 linf
   * Goal 46. Weak Mutation 23: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceVariable v -> maxMin
   * Goal 47. Weak Mutation 24: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceVariable lsup -> linf
   * Goal 48. Weak Mutation 25: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp Negation of lsup
   * Goal 49. Weak Mutation 26: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp IINC 1 lsup
   * Goal 50. Weak Mutation 27: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp IINC -1 lsup
   * Goal 51. Weak Mutation 28: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceComparisonOperator >= -> -1
   * Goal 52. Weak Mutation 29: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceComparisonOperator >= -> >
   * Goal 53. Weak Mutation 31: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceVariable maxMin -> v
   * Goal 54. Weak Mutation 32: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 33: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceVariable v -> maxMin
   * Goal 56. Weak Mutation 34: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceVariable lsup -> linf
   * Goal 57. Weak Mutation 35: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp Negation of lsup
   * Goal 58. Weak Mutation 36: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp IINC 1 lsup
   * Goal 59. Weak Mutation 37: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp IINC -1 lsup
   * Goal 60. Weak Mutation 38: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceVariable maxMin -> v
   * Goal 61. Weak Mutation 39: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceConstant - 1 -> 0
   * Goal 62. Weak Mutation 40: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceVariable v -> maxMin
   * Goal 63. Weak Mutation 41: cap2.MaxMin4.maxMin4([III)[I:6 - ReplaceVariable linf -> lsup
   * Goal 64. Weak Mutation 42: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp Negation of linf
   * Goal 65. Weak Mutation 43: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp IINC 1 linf
   * Goal 66. Weak Mutation 44: cap2.MaxMin4.maxMin4([III)[I:6 - InsertUnaryOp IINC -1 linf
   * Goal 67. Weak Mutation 45: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceVariable maxMin -> v
   * Goal 68. Weak Mutation 46: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceConstant - 0 -> 1
   * Goal 69. Weak Mutation 47: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceVariable v -> maxMin
   * Goal 70. Weak Mutation 48: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceVariable linf -> lsup
   * Goal 71. Weak Mutation 49: cap2.MaxMin4.maxMin4([III)[I:7 - InsertUnaryOp Negation of linf
   * Goal 72. Weak Mutation 50: cap2.MaxMin4.maxMin4([III)[I:7 - InsertUnaryOp IINC 1 linf
   * Goal 73. Weak Mutation 51: cap2.MaxMin4.maxMin4([III)[I:7 - InsertUnaryOp IINC -1 linf
   * Goal 74. Weak Mutation 52: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceVariable maxMin -> v
   * Goal 75. Weak Mutation 53: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceConstant - 1 -> 0
   * Goal 76. Weak Mutation 54: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceVariable v -> maxMin
   * Goal 77. Weak Mutation 55: cap2.MaxMin4.maxMin4([III)[I:7 - ReplaceVariable lsup -> linf
   * Goal 78. Weak Mutation 56: cap2.MaxMin4.maxMin4([III)[I:7 - InsertUnaryOp Negation of lsup
   * Goal 79. Weak Mutation 57: cap2.MaxMin4.maxMin4([III)[I:7 - InsertUnaryOp IINC 1 lsup
   * Goal 80. Weak Mutation 58: cap2.MaxMin4.maxMin4([III)[I:7 - InsertUnaryOp IINC -1 lsup
   * Goal 81. Weak Mutation 59: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceVariable linf -> lsup
   * Goal 82. Weak Mutation 60: cap2.MaxMin4.maxMin4([III)[I:10 - InsertUnaryOp Negation of linf
   * Goal 83. Weak Mutation 61: cap2.MaxMin4.maxMin4([III)[I:10 - InsertUnaryOp IINC 1 linf
   * Goal 84. Weak Mutation 62: cap2.MaxMin4.maxMin4([III)[I:10 - InsertUnaryOp IINC -1 linf
   * Goal 85. Weak Mutation 63: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceVariable lsup -> linf
   * Goal 86. Weak Mutation 64: cap2.MaxMin4.maxMin4([III)[I:10 - InsertUnaryOp Negation of lsup
   * Goal 87. Weak Mutation 65: cap2.MaxMin4.maxMin4([III)[I:10 - InsertUnaryOp IINC 1 lsup
   * Goal 88. Weak Mutation 66: cap2.MaxMin4.maxMin4([III)[I:10 - InsertUnaryOp IINC -1 lsup
   * Goal 89. Weak Mutation 67: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator + -> %
   * Goal 90. Weak Mutation 68: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator + -> -
   * Goal 91. Weak Mutation 69: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator + -> *
   * Goal 92. Weak Mutation 70: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator + -> /
   * Goal 93. Weak Mutation 71: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceConstant - 2 -> 0
   * Goal 94. Weak Mutation 72: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceConstant - 2 -> 1
   * Goal 95. Weak Mutation 73: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceConstant - 2 -> -1
   * Goal 96. Weak Mutation 74: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceConstant - 2 -> 3
   * Goal 97. Weak Mutation 75: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator / -> +
   * Goal 98. Weak Mutation 76: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator / -> %
   * Goal 99. Weak Mutation 77: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator / -> -
   * Goal 100. Weak Mutation 78: cap2.MaxMin4.maxMin4([III)[I:10 - ReplaceArithmeticOperator / -> *
   * Goal 101. Weak Mutation 79: cap2.MaxMin4.maxMin4([III)[I:11 - ReplaceVariable v -> maxMin
   * Goal 102. Weak Mutation 80: cap2.MaxMin4.maxMin4([III)[I:11 - ReplaceVariable linf -> lsup
   * Goal 103. Weak Mutation 81: cap2.MaxMin4.maxMin4([III)[I:11 - ReplaceVariable linf -> meio
   * Goal 104. Weak Mutation 82: cap2.MaxMin4.maxMin4([III)[I:11 - InsertUnaryOp Negation of linf
   * Goal 105. Weak Mutation 83: cap2.MaxMin4.maxMin4([III)[I:11 - InsertUnaryOp IINC 1 linf
   * Goal 106. Weak Mutation 84: cap2.MaxMin4.maxMin4([III)[I:11 - InsertUnaryOp IINC -1 linf
   * Goal 107. Weak Mutation 85: cap2.MaxMin4.maxMin4([III)[I:11 - ReplaceVariable meio -> lsup
   * Goal 108. Weak Mutation 86: cap2.MaxMin4.maxMin4([III)[I:11 - ReplaceVariable meio -> linf
   * Goal 109. Weak Mutation 87: cap2.MaxMin4.maxMin4([III)[I:11 - InsertUnaryOp Negation of meio
   * Goal 110. Weak Mutation 88: cap2.MaxMin4.maxMin4([III)[I:11 - InsertUnaryOp IINC 1 meio
   * Goal 111. Weak Mutation 89: cap2.MaxMin4.maxMin4([III)[I:11 - InsertUnaryOp IINC -1 meio
   * Goal 112. Weak Mutation 90: cap2.MaxMin4.maxMin4([III)[I:12 - ReplaceVariable maxMin -> v
   * Goal 113. Weak Mutation 91: cap2.MaxMin4.maxMin4([III)[I:12 - ReplaceConstant - 0 -> 1
   * Goal 114. Weak Mutation 92: cap2.MaxMin4.maxMin4([III)[I:12 - ReplaceVariable maxMin -> v
   * Goal 115. Weak Mutation 93: cap2.MaxMin4.maxMin4([III)[I:12 - ReplaceConstant - 1 -> 0
   * Goal 116. Weak Mutation 94: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable v -> maxMin
   * Goal 117. Weak Mutation 95: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable meio -> lsup
   * Goal 118. Weak Mutation 96: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable meio -> min1
   * Goal 119. Weak Mutation 97: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable meio -> max1
   * Goal 120. Weak Mutation 98: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable meio -> linf
   * Goal 121. Weak Mutation 99: cap2.MaxMin4.maxMin4([III)[I:13 - InsertUnaryOp Negation of meio
   * Goal 122. Weak Mutation 100: cap2.MaxMin4.maxMin4([III)[I:13 - InsertUnaryOp IINC 1 meio
   * Goal 123. Weak Mutation 101: cap2.MaxMin4.maxMin4([III)[I:13 - InsertUnaryOp IINC -1 meio
   * Goal 124. Weak Mutation 102: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceConstant - 1 -> 0
   * Goal 125. Weak Mutation 103: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceArithmeticOperator + -> %
   * Goal 126. Weak Mutation 104: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceArithmeticOperator + -> -
   * Goal 127. Weak Mutation 105: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceArithmeticOperator + -> *
   * Goal 128. Weak Mutation 106: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceArithmeticOperator + -> /
   * Goal 129. Weak Mutation 107: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable lsup -> min1
   * Goal 130. Weak Mutation 108: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable lsup -> meio
   * Goal 131. Weak Mutation 109: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable lsup -> max1
   * Goal 132. Weak Mutation 110: cap2.MaxMin4.maxMin4([III)[I:13 - ReplaceVariable lsup -> linf
   * Goal 133. Weak Mutation 111: cap2.MaxMin4.maxMin4([III)[I:13 - InsertUnaryOp Negation of lsup
   * Goal 134. Weak Mutation 112: cap2.MaxMin4.maxMin4([III)[I:13 - InsertUnaryOp IINC 1 lsup
   * Goal 135. Weak Mutation 113: cap2.MaxMin4.maxMin4([III)[I:13 - InsertUnaryOp IINC -1 lsup
   * Goal 136. Weak Mutation 114: cap2.MaxMin4.maxMin4([III)[I:14 - ReplaceVariable maxMin -> v
   * Goal 137. Weak Mutation 115: cap2.MaxMin4.maxMin4([III)[I:14 - ReplaceConstant - 0 -> 1
   * Goal 138. Weak Mutation 116: cap2.MaxMin4.maxMin4([III)[I:14 - ReplaceVariable maxMin -> v
   * Goal 139. Weak Mutation 117: cap2.MaxMin4.maxMin4([III)[I:14 - ReplaceConstant - 1 -> 0
   * Goal 140. Weak Mutation 118: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max1 -> lsup
   * Goal 141. Weak Mutation 119: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max1 -> min2
   * Goal 142. Weak Mutation 120: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max1 -> linf
   * Goal 143. Weak Mutation 121: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max1 -> min1
   * Goal 144. Weak Mutation 122: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max1 -> meio
   * Goal 145. Weak Mutation 123: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max1 -> max2
   * Goal 146. Weak Mutation 124: cap2.MaxMin4.maxMin4([III)[I:15 - InsertUnaryOp Negation of max1
   * Goal 147. Weak Mutation 125: cap2.MaxMin4.maxMin4([III)[I:15 - InsertUnaryOp IINC 1 max1
   * Goal 148. Weak Mutation 126: cap2.MaxMin4.maxMin4([III)[I:15 - InsertUnaryOp IINC -1 max1
   * Goal 149. Weak Mutation 127: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max2 -> lsup
   * Goal 150. Weak Mutation 131: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max2 -> meio
   * Goal 151. Weak Mutation 132: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max2 -> max1
   * Goal 152. Weak Mutation 133: cap2.MaxMin4.maxMin4([III)[I:15 - InsertUnaryOp Negation of max2
   * Goal 153. Weak Mutation 134: cap2.MaxMin4.maxMin4([III)[I:15 - InsertUnaryOp IINC 1 max2
   * Goal 154. Weak Mutation 135: cap2.MaxMin4.maxMin4([III)[I:15 - InsertUnaryOp IINC -1 max2
   * Goal 155. Weak Mutation 136: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceComparisonOperator <= -> -1
   * Goal 156. Weak Mutation 139: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable maxMin -> v
   * Goal 157. Weak Mutation 140: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceConstant - 0 -> 1
   * Goal 158. Weak Mutation 141: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max1 -> lsup
   * Goal 159. Weak Mutation 142: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max1 -> min2
   * Goal 160. Weak Mutation 143: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max1 -> linf
   * Goal 161. Weak Mutation 144: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max1 -> min1
   * Goal 162. Weak Mutation 145: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max1 -> meio
   * Goal 163. Weak Mutation 146: cap2.MaxMin4.maxMin4([III)[I:15 - ReplaceVariable max1 -> max2
   * Goal 164. Weak Mutation 147: cap2.MaxMin4.maxMin4([III)[I:15 - InsertUnaryOp Negation of max1
   * Goal 165. Weak Mutation 157: cap2.MaxMin4.maxMin4([III)[I:16 - ReplaceVariable min1 -> lsup
   * Goal 166. Weak Mutation 160: cap2.MaxMin4.maxMin4([III)[I:16 - ReplaceVariable min1 -> meio
   * Goal 167. Weak Mutation 162: cap2.MaxMin4.maxMin4([III)[I:16 - ReplaceVariable min1 -> max1
   * Goal 168. Weak Mutation 163: cap2.MaxMin4.maxMin4([III)[I:16 - InsertUnaryOp Negation of min1
   * Goal 169. Weak Mutation 164: cap2.MaxMin4.maxMin4([III)[I:16 - InsertUnaryOp IINC 1 min1
   * Goal 170. Weak Mutation 165: cap2.MaxMin4.maxMin4([III)[I:16 - InsertUnaryOp IINC -1 min1
   * Goal 171. Weak Mutation 166: cap2.MaxMin4.maxMin4([III)[I:16 - ReplaceVariable min2 -> lsup
   * Goal 172. Weak Mutation 169: cap2.MaxMin4.maxMin4([III)[I:16 - ReplaceVariable min2 -> meio
   * Goal 173. Weak Mutation 171: cap2.MaxMin4.maxMin4([III)[I:16 - ReplaceVariable min2 -> max1
   * Goal 174. Weak Mutation 172: cap2.MaxMin4.maxMin4([III)[I:16 - InsertUnaryOp Negation of min2
   * Goal 175. Weak Mutation 173: cap2.MaxMin4.maxMin4([III)[I:16 - InsertUnaryOp IINC 1 min2
   * Goal 176. Weak Mutation 174: cap2.MaxMin4.maxMin4([III)[I:16 - InsertUnaryOp IINC -1 min2
   * Goal 177. Weak Mutation 176: cap2.MaxMin4.maxMin4([III)[I:16 - ReplaceComparisonOperator >= -> >
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[1] = 6;
      // Undeclared exception!
      try { 
        MaxMin4.maxMin4(intArray0, 0, 1421);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
    	 assertTrue(true);//assertThrownBy("cap2.MaxMin4", e);
      }
  }

  //Test case number: 2
  /*
   * 4 covered goals:
   * Goal 1. cap2.MaxMin4.<init>()V: root-Branch
   * Goal 2. Branch cap2.MaxMin4.<init>()V: root-Branch in context: cap2.MaxMin4:<init>()V
   * Goal 3. [METHOD] cap2.MaxMin4.<init>()V
   * Goal 4. [METHODNOEX] cap2.MaxMin4.<init>()V
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MaxMin4 maxMin4_0 = new MaxMin4();
  }
}
