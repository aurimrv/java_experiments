/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 03 20:49:16 GMT 2016
 */

package ds;

import org.junit.Test;
import static org.junit.Assert.*;

import ds.ArvoreBinaria;
import ds.Item;
import ds.MeuItem;

//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Evo {

  //Test case number: 0
  /*
   * 28 covered goals:
   * Goal 1. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;: root-Branch
   * Goal 2. cap5.ArvoreBinaria.<init>()V: root-Branch
   * Goal 3. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch
   * Goal 4. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: I3 Branch 2 IFNONNULL L17 - true
   * Goal 5. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 5 IFNONNULL L24 - false
   * Goal 6. Branch cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch in context: cap5.ArvoreBinaria:insere(Lcap4/Item;)V
   * Goal 7. Branch cap5.ArvoreBinaria.<init>()V: root-Branch in context: cap5.ArvoreBinaria:<init>()V
   * Goal 8. Branch cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;: root-Branch in context: cap5.ArvoreBinaria:pesquisa(Lcap4/Item;)Lcap4/Item;
   * Goal 9. pesquisa(Lcap4/Item;)Lcap4/Item;_java.lang.NullPointerException_IMPLICIT
   * Goal 10. cap5.ArvoreBinaria.<init>()V: Line 51
   * Goal 11. cap5.ArvoreBinaria.<init>()V: Line 52
   * Goal 12. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 59
   * Goal 13. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 60
   * Goal 14. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 24
   * Goal 15. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 25
   * Goal 16. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 26
   * Goal 17. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 27
   * Goal 18. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 31
   * Goal 19. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;: Line 55
   * Goal 20. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: Line 17
   * Goal 21. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: Line 18
   * Goal 22. [METHOD] cap5.ArvoreBinaria.<init>()V
   * Goal 23. [METHOD] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 24. [METHOD] cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;
   * Goal 25. [METHODNOEX] cap5.ArvoreBinaria.<init>()V
   * Goal 26. [METHODNOEX] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 27. Weak Mutation 2: cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;:17 - ReplaceComparisonOperator != null -> = null
   * Goal 28. Weak Mutation 9: cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:24 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArvoreBinaria arvoreBinaria0 = new ArvoreBinaria();
      MeuItem meuItem0 = new MeuItem((-1));
      arvoreBinaria0.insere(meuItem0);
      // Undeclared exception!
      try { 
        arvoreBinaria0.pesquisa((Item) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
    	  assertTrue(true);//assertThrownBy("cap5.ArvoreBinaria", e);
      }
  }

  //Test case number: 1
  /*
   * 48 covered goals:
   * Goal 1. cap5.ArvoreBinaria.retira(Lcap4/Item;)V: root-Branch
   * Goal 2. cap5.ArvoreBinaria.<init>()V: root-Branch
   * Goal 3. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch
   * Goal 4. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 5 IFNONNULL L24 - true
   * Goal 5. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 5 IFNONNULL L24 - false
   * Goal 6. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I31 Branch 6 IFGE L28 - true
   * Goal 7. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I46 Branch 7 IFLE L29 - false
   * Goal 8. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 9 IFNONNULL L39 - true
   * Goal 9. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I14 Branch 10 IFGE L40 - true
   * Goal 10. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I29 Branch 11 IFLE L41 - true
   * Goal 11. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I42 Branch 12 IFNONNULL L43 - true
   * Goal 12. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I51 Branch 13 IFNONNULL L44 - false
   * Goal 13. Branch cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch in context: cap5.ArvoreBinaria:insere(Lcap4/Item;)V
   * Goal 14. Branch cap5.ArvoreBinaria.retira(Lcap4/Item;)V: root-Branch in context: cap5.ArvoreBinaria:retira(Lcap4/Item;)V
   * Goal 15. Branch cap5.ArvoreBinaria.<init>()V: root-Branch in context: cap5.ArvoreBinaria:<init>()V
   * Goal 16. cap5.ArvoreBinaria.<init>()V: Line 51
   * Goal 17. cap5.ArvoreBinaria.<init>()V: Line 52
   * Goal 18. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 59
   * Goal 19. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 60
   * Goal 20. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 24
   * Goal 21. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 25
   * Goal 22. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 26
   * Goal 23. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 27
   * Goal 24. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 28
   * Goal 25. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 29
   * Goal 26. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 31
   * Goal 27. cap5.ArvoreBinaria.retira(Lcap4/Item;)V: Line 63
   * Goal 28. cap5.ArvoreBinaria.retira(Lcap4/Item;)V: Line 64
   * Goal 29. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 39
   * Goal 30. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 40
   * Goal 31. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 41
   * Goal 32. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 43
   * Goal 33. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 44
   * Goal 34. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 47
   * Goal 35. [METHOD] cap5.ArvoreBinaria.<init>()V
   * Goal 36. [METHOD] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 37. [METHOD] cap5.ArvoreBinaria.retira(Lcap4/Item;)V
   * Goal 38. [METHODNOEX] cap5.ArvoreBinaria.<init>()V
   * Goal 39. [METHODNOEX] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 40. [METHODNOEX] cap5.ArvoreBinaria.retira(Lcap4/Item;)V
   * Goal 41. Weak Mutation 9: cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:24 - ReplaceComparisonOperator != null -> = null
   * Goal 42. Weak Mutation 11: cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:28 - ReplaceComparisonOperator >= -> ==
   * Goal 43. Weak Mutation 13: cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:29 - ReplaceComparisonOperator <= -> -1
   * Goal 44. Weak Mutation 26: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:39 - ReplaceComparisonOperator != null -> = null
   * Goal 45. Weak Mutation 30: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:40 - ReplaceComparisonOperator >= -> >
   * Goal 46. Weak Mutation 33: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:41 - ReplaceComparisonOperator <= -> <
   * Goal 47. Weak Mutation 34: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:43 - ReplaceComparisonOperator != null -> = null
   * Goal 48. Weak Mutation 35: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:44 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArvoreBinaria arvoreBinaria0 = new ArvoreBinaria();
      MeuItem meuItem0 = new MeuItem((-1));
      MeuItem meuItem1 = new MeuItem((-1879));
      arvoreBinaria0.insere(meuItem1);
      arvoreBinaria0.insere(meuItem0);
      arvoreBinaria0.retira(meuItem1);
      assertNotSame(meuItem1, meuItem0);
  }

  //Test case number: 2
  /*
   * 37 covered goals:
   * Goal 1. cap5.ArvoreBinaria.retira(Lcap4/Item;)V: root-Branch
   * Goal 2. cap5.ArvoreBinaria.<init>()V: root-Branch
   * Goal 3. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch
   * Goal 4. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 5 IFNONNULL L24 - false
   * Goal 5. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 9 IFNONNULL L39 - true
   * Goal 6. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 9 IFNONNULL L39 - false
   * Goal 7. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I14 Branch 10 IFGE L40 - true
   * Goal 8. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I29 Branch 11 IFLE L41 - false
   * Goal 9. Branch cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch in context: cap5.ArvoreBinaria:insere(Lcap4/Item;)V
   * Goal 10. Branch cap5.ArvoreBinaria.retira(Lcap4/Item;)V: root-Branch in context: cap5.ArvoreBinaria:retira(Lcap4/Item;)V
   * Goal 11. Branch cap5.ArvoreBinaria.<init>()V: root-Branch in context: cap5.ArvoreBinaria:<init>()V
   * Goal 12. cap5.ArvoreBinaria.<init>()V: Line 51
   * Goal 13. cap5.ArvoreBinaria.<init>()V: Line 52
   * Goal 14. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 59
   * Goal 15. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 60
   * Goal 16. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 24
   * Goal 17. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 25
   * Goal 18. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 26
   * Goal 19. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 27
   * Goal 20. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 31
   * Goal 21. cap5.ArvoreBinaria.retira(Lcap4/Item;)V: Line 63
   * Goal 22. cap5.ArvoreBinaria.retira(Lcap4/Item;)V: Line 64
   * Goal 23. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 39
   * Goal 24. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 40
   * Goal 25. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 41
   * Goal 26. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 47
   * Goal 27. [METHOD] cap5.ArvoreBinaria.<init>()V
   * Goal 28. [METHOD] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 29. [METHOD] cap5.ArvoreBinaria.retira(Lcap4/Item;)V
   * Goal 30. [METHODNOEX] cap5.ArvoreBinaria.<init>()V
   * Goal 31. [METHODNOEX] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 32. [METHODNOEX] cap5.ArvoreBinaria.retira(Lcap4/Item;)V
   * Goal 33. Weak Mutation 9: cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:24 - ReplaceComparisonOperator != null -> = null
   * Goal 34. Weak Mutation 26: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:39 - ReplaceComparisonOperator != null -> = null
   * Goal 35. Weak Mutation 27: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:39 - ReplaceConstant - Erro: Registro nao encontrado -> 
   * Goal 36. Weak Mutation 29: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:40 - ReplaceComparisonOperator >= -> ==
   * Goal 37. Weak Mutation 31: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:41 - ReplaceComparisonOperator <= -> -1
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArvoreBinaria arvoreBinaria0 = new ArvoreBinaria();
      MeuItem meuItem0 = new MeuItem((-1));
      MeuItem meuItem1 = new MeuItem(0);
      arvoreBinaria0.insere(meuItem0);
      arvoreBinaria0.retira(meuItem1);
      assertNotSame(meuItem1, meuItem0);
  }

  //Test case number: 3
  /*
   * 34 covered goals:
   * Goal 1. cap5.ArvoreBinaria.retira(Lcap4/Item;)V: root-Branch
   * Goal 2. cap5.ArvoreBinaria.<init>()V: root-Branch
   * Goal 3. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch
   * Goal 4. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 5 IFNONNULL L24 - false
   * Goal 5. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 9 IFNONNULL L39 - true
   * Goal 6. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 9 IFNONNULL L39 - false
   * Goal 7. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I14 Branch 10 IFGE L40 - false
   * Goal 8. Branch cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch in context: cap5.ArvoreBinaria:insere(Lcap4/Item;)V
   * Goal 9. Branch cap5.ArvoreBinaria.retira(Lcap4/Item;)V: root-Branch in context: cap5.ArvoreBinaria:retira(Lcap4/Item;)V
   * Goal 10. Branch cap5.ArvoreBinaria.<init>()V: root-Branch in context: cap5.ArvoreBinaria:<init>()V
   * Goal 11. cap5.ArvoreBinaria.<init>()V: Line 51
   * Goal 12. cap5.ArvoreBinaria.<init>()V: Line 52
   * Goal 13. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 59
   * Goal 14. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 60
   * Goal 15. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 24
   * Goal 16. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 25
   * Goal 17. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 26
   * Goal 18. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 27
   * Goal 19. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 31
   * Goal 20. cap5.ArvoreBinaria.retira(Lcap4/Item;)V: Line 63
   * Goal 21. cap5.ArvoreBinaria.retira(Lcap4/Item;)V: Line 64
   * Goal 22. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 39
   * Goal 23. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 40
   * Goal 24. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 47
   * Goal 25. [METHOD] cap5.ArvoreBinaria.<init>()V
   * Goal 26. [METHOD] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 27. [METHOD] cap5.ArvoreBinaria.retira(Lcap4/Item;)V
   * Goal 28. [METHODNOEX] cap5.ArvoreBinaria.<init>()V
   * Goal 29. [METHODNOEX] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 30. [METHODNOEX] cap5.ArvoreBinaria.retira(Lcap4/Item;)V
   * Goal 31. Weak Mutation 9: cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:24 - ReplaceComparisonOperator != null -> = null
   * Goal 32. Weak Mutation 26: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:39 - ReplaceComparisonOperator != null -> = null
   * Goal 33. Weak Mutation 27: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:39 - ReplaceConstant - Erro: Registro nao encontrado -> 
   * Goal 34. Weak Mutation 28: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:40 - ReplaceComparisonOperator >= -> -1
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArvoreBinaria arvoreBinaria0 = new ArvoreBinaria();
      MeuItem meuItem0 = new MeuItem((-546));
      MeuItem meuItem1 = new MeuItem(111);
      arvoreBinaria0.insere(meuItem1);
      arvoreBinaria0.retira(meuItem0);
      assertNotSame(meuItem0, meuItem1);
  }

  //Test case number: 4
  /*
   * 38 covered goals:
   * Goal 1. cap5.ArvoreBinaria.retira(Lcap4/Item;)V: root-Branch
   * Goal 2. cap5.ArvoreBinaria.<init>()V: root-Branch
   * Goal 3. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch
   * Goal 4. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 5 IFNONNULL L24 - false
   * Goal 5. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 9 IFNONNULL L39 - true
   * Goal 6. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I14 Branch 10 IFGE L40 - true
   * Goal 7. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I29 Branch 11 IFLE L41 - true
   * Goal 8. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I42 Branch 12 IFNONNULL L43 - false
   * Goal 9. Branch cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch in context: cap5.ArvoreBinaria:insere(Lcap4/Item;)V
   * Goal 10. Branch cap5.ArvoreBinaria.retira(Lcap4/Item;)V: root-Branch in context: cap5.ArvoreBinaria:retira(Lcap4/Item;)V
   * Goal 11. Branch cap5.ArvoreBinaria.<init>()V: root-Branch in context: cap5.ArvoreBinaria:<init>()V
   * Goal 12. cap5.ArvoreBinaria.<init>()V: Line 51
   * Goal 13. cap5.ArvoreBinaria.<init>()V: Line 52
   * Goal 14. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 59
   * Goal 15. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 60
   * Goal 16. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 24
   * Goal 17. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 25
   * Goal 18. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 26
   * Goal 19. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 27
   * Goal 20. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 31
   * Goal 21. cap5.ArvoreBinaria.retira(Lcap4/Item;)V: Line 63
   * Goal 22. cap5.ArvoreBinaria.retira(Lcap4/Item;)V: Line 64
   * Goal 23. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 39
   * Goal 24. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 40
   * Goal 25. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 41
   * Goal 26. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 43
   * Goal 27. cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 47
   * Goal 28. [METHOD] cap5.ArvoreBinaria.<init>()V
   * Goal 29. [METHOD] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 30. [METHOD] cap5.ArvoreBinaria.retira(Lcap4/Item;)V
   * Goal 31. [METHODNOEX] cap5.ArvoreBinaria.<init>()V
   * Goal 32. [METHODNOEX] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 33. [METHODNOEX] cap5.ArvoreBinaria.retira(Lcap4/Item;)V
   * Goal 34. Weak Mutation 9: cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:24 - ReplaceComparisonOperator != null -> = null
   * Goal 35. Weak Mutation 26: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:39 - ReplaceComparisonOperator != null -> = null
   * Goal 36. Weak Mutation 30: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:40 - ReplaceComparisonOperator >= -> >
   * Goal 37. Weak Mutation 33: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:41 - ReplaceComparisonOperator <= -> <
   * Goal 38. Weak Mutation 34: cap5.ArvoreBinaria.retira(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:43 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArvoreBinaria arvoreBinaria0 = new ArvoreBinaria();
      MeuItem meuItem0 = new MeuItem((-1879));
      arvoreBinaria0.insere(meuItem0);
      arvoreBinaria0.retira(meuItem0);
      assertEquals(4, meuItem0.tamanho());
  }

  //Test case number: 5
  /*
   * 35 covered goals:
   * Goal 1. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;: root-Branch
   * Goal 2. cap5.ArvoreBinaria.<init>()V: root-Branch
   * Goal 3. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch
   * Goal 4. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: I3 Branch 2 IFNONNULL L17 - true
   * Goal 5. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: I3 Branch 2 IFNONNULL L17 - false
   * Goal 6. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: I12 Branch 3 IFGE L18 - true
   * Goal 7. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: I25 Branch 4 IFLE L19 - false
   * Goal 8. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 5 IFNONNULL L24 - false
   * Goal 9. Branch cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch in context: cap5.ArvoreBinaria:insere(Lcap4/Item;)V
   * Goal 10. Branch cap5.ArvoreBinaria.<init>()V: root-Branch in context: cap5.ArvoreBinaria:<init>()V
   * Goal 11. Branch cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;: root-Branch in context: cap5.ArvoreBinaria:pesquisa(Lcap4/Item;)Lcap4/Item;
   * Goal 12. [Output]: cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;:Null
   * Goal 13. cap5.ArvoreBinaria.<init>()V: Line 51
   * Goal 14. cap5.ArvoreBinaria.<init>()V: Line 52
   * Goal 15. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 59
   * Goal 16. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 60
   * Goal 17. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 24
   * Goal 18. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 25
   * Goal 19. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 26
   * Goal 20. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 27
   * Goal 21. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 31
   * Goal 22. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;: Line 55
   * Goal 23. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: Line 17
   * Goal 24. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: Line 18
   * Goal 25. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: Line 19
   * Goal 26. [METHOD] cap5.ArvoreBinaria.<init>()V
   * Goal 27. [METHOD] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 28. [METHOD] cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;
   * Goal 29. [METHODNOEX] cap5.ArvoreBinaria.<init>()V
   * Goal 30. [METHODNOEX] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 31. [METHODNOEX] cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;
   * Goal 32. Weak Mutation 2: cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;:17 - ReplaceComparisonOperator != null -> = null
   * Goal 33. Weak Mutation 4: cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;:18 - ReplaceComparisonOperator >= -> ==
   * Goal 34. Weak Mutation 6: cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;:19 - ReplaceComparisonOperator <= -> -1
   * Goal 35. Weak Mutation 9: cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:24 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArvoreBinaria arvoreBinaria0 = new ArvoreBinaria();
      MeuItem meuItem0 = new MeuItem((-1));
      arvoreBinaria0.insere(meuItem0);
      MeuItem meuItem1 = new MeuItem(0);
      MeuItem meuItem2 = (MeuItem)arvoreBinaria0.pesquisa(meuItem1);
      assertNull(meuItem2);
  }

  //Test case number: 6
  /*
   * 32 covered goals:
   * Goal 1. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;: root-Branch
   * Goal 2. cap5.ArvoreBinaria.<init>()V: root-Branch
   * Goal 3. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch
   * Goal 4. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: I3 Branch 2 IFNONNULL L17 - true
   * Goal 5. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: I3 Branch 2 IFNONNULL L17 - false
   * Goal 6. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: I12 Branch 3 IFGE L18 - false
   * Goal 7. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 5 IFNONNULL L24 - false
   * Goal 8. Branch cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch in context: cap5.ArvoreBinaria:insere(Lcap4/Item;)V
   * Goal 9. Branch cap5.ArvoreBinaria.<init>()V: root-Branch in context: cap5.ArvoreBinaria:<init>()V
   * Goal 10. Branch cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;: root-Branch in context: cap5.ArvoreBinaria:pesquisa(Lcap4/Item;)Lcap4/Item;
   * Goal 11. [Output]: cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;:Null
   * Goal 12. cap5.ArvoreBinaria.<init>()V: Line 51
   * Goal 13. cap5.ArvoreBinaria.<init>()V: Line 52
   * Goal 14. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 59
   * Goal 15. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 60
   * Goal 16. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 24
   * Goal 17. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 25
   * Goal 18. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 26
   * Goal 19. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 27
   * Goal 20. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 31
   * Goal 21. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;: Line 55
   * Goal 22. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: Line 17
   * Goal 23. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: Line 18
   * Goal 24. [METHOD] cap5.ArvoreBinaria.<init>()V
   * Goal 25. [METHOD] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 26. [METHOD] cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;
   * Goal 27. [METHODNOEX] cap5.ArvoreBinaria.<init>()V
   * Goal 28. [METHODNOEX] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 29. [METHODNOEX] cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;
   * Goal 30. Weak Mutation 2: cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;:17 - ReplaceComparisonOperator != null -> = null
   * Goal 31. Weak Mutation 3: cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;:18 - ReplaceComparisonOperator >= -> -1
   * Goal 32. Weak Mutation 9: cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:24 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ArvoreBinaria arvoreBinaria0 = new ArvoreBinaria();
      MeuItem meuItem0 = new MeuItem((-1));
      arvoreBinaria0.insere(meuItem0);
      MeuItem meuItem1 = new MeuItem((-580));
      MeuItem meuItem2 = (MeuItem)arvoreBinaria0.pesquisa(meuItem1);
      assertNull(meuItem2);
  }

  //Test case number: 7
  /*
   * 35 covered goals:
   * Goal 1. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;: root-Branch
   * Goal 2. cap5.ArvoreBinaria.<init>()V: root-Branch
   * Goal 3. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch
   * Goal 4. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: I3 Branch 2 IFNONNULL L17 - true
   * Goal 5. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: I12 Branch 3 IFGE L18 - true
   * Goal 6. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: I25 Branch 4 IFLE L19 - true
   * Goal 7. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 5 IFNONNULL L24 - false
   * Goal 8. Branch cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch in context: cap5.ArvoreBinaria:insere(Lcap4/Item;)V
   * Goal 9. Branch cap5.ArvoreBinaria.<init>()V: root-Branch in context: cap5.ArvoreBinaria:<init>()V
   * Goal 10. Branch cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;: root-Branch in context: cap5.ArvoreBinaria:pesquisa(Lcap4/Item;)Lcap4/Item;
   * Goal 11. [Output]: cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;:NonNull
   * Goal 12. cap5.ArvoreBinaria.<init>()V: Line 51
   * Goal 13. cap5.ArvoreBinaria.<init>()V: Line 52
   * Goal 14. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 59
   * Goal 15. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 60
   * Goal 16. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 24
   * Goal 17. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 25
   * Goal 18. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 26
   * Goal 19. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 27
   * Goal 20. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 31
   * Goal 21. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;: Line 55
   * Goal 22. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: Line 17
   * Goal 23. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: Line 18
   * Goal 24. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: Line 19
   * Goal 25. cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;: Line 20
   * Goal 26. [METHOD] cap5.ArvoreBinaria.<init>()V
   * Goal 27. [METHOD] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 28. [METHOD] cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;
   * Goal 29. [METHODNOEX] cap5.ArvoreBinaria.<init>()V
   * Goal 30. [METHODNOEX] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 31. [METHODNOEX] cap5.ArvoreBinaria.pesquisa(Lcap4/Item;)Lcap4/Item;
   * Goal 32. Weak Mutation 2: cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;:17 - ReplaceComparisonOperator != null -> = null
   * Goal 33. Weak Mutation 5: cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;:18 - ReplaceComparisonOperator >= -> >
   * Goal 34. Weak Mutation 8: cap5.ArvoreBinaria.pesquisa(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap4/Item;:19 - ReplaceComparisonOperator <= -> <
   * Goal 35. Weak Mutation 9: cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:24 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ArvoreBinaria arvoreBinaria0 = new ArvoreBinaria();
      MeuItem meuItem0 = new MeuItem((-1));
      arvoreBinaria0.insere(meuItem0);
      MeuItem meuItem1 = (MeuItem)arvoreBinaria0.pesquisa(meuItem0);
      assertEquals(4, meuItem1.tamanho());
  }

  //Test case number: 8
  /*
   * 15 covered goals:
   * Goal 1. cap5.ArvoreBinaria.<init>()V: root-Branch
   * Goal 2. cap5.ArvoreBinaria.testa()V: root-Branch
   * Goal 3. cap5.ArvoreBinaria.testa(Lcap5/ArvoreBinaria$No;)V: I3 Branch 14 IFNONNULL L68 - false
   * Goal 4. Branch cap5.ArvoreBinaria.<init>()V: root-Branch in context: cap5.ArvoreBinaria:<init>()V
   * Goal 5. Branch cap5.ArvoreBinaria.testa()V: root-Branch in context: cap5.ArvoreBinaria:testa()V
   * Goal 6. cap5.ArvoreBinaria.<init>()V: Line 51
   * Goal 7. cap5.ArvoreBinaria.<init>()V: Line 52
   * Goal 8. cap5.ArvoreBinaria.testa()V: Line 85
   * Goal 9. cap5.ArvoreBinaria.testa()V: Line 86
   * Goal 10. cap5.ArvoreBinaria.testa(Lcap5/ArvoreBinaria$No;)V: Line 68
   * Goal 11. [METHOD] cap5.ArvoreBinaria.<init>()V
   * Goal 12. [METHOD] cap5.ArvoreBinaria.testa()V
   * Goal 13. [METHODNOEX] cap5.ArvoreBinaria.<init>()V
   * Goal 14. [METHODNOEX] cap5.ArvoreBinaria.testa()V
   * Goal 15. Weak Mutation 36: cap5.ArvoreBinaria.testa(Lcap5/ArvoreBinaria$No;)V:68 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ArvoreBinaria arvoreBinaria0 = new ArvoreBinaria();
      arvoreBinaria0.testa();
  }

  //Test case number: 9
  /*
   * 28 covered goals:
   * Goal 1. cap5.ArvoreBinaria.<init>()V: root-Branch
   * Goal 2. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch
   * Goal 3. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 5 IFNONNULL L24 - true
   * Goal 4. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I3 Branch 5 IFNONNULL L24 - false
   * Goal 5. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I31 Branch 6 IFGE L28 - true
   * Goal 6. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: I46 Branch 7 IFLE L29 - true
   * Goal 7. Branch cap5.ArvoreBinaria.insere(Lcap4/Item;)V: root-Branch in context: cap5.ArvoreBinaria:insere(Lcap4/Item;)V
   * Goal 8. Branch cap5.ArvoreBinaria.<init>()V: root-Branch in context: cap5.ArvoreBinaria:<init>()V
   * Goal 9. cap5.ArvoreBinaria.<init>()V: Line 51
   * Goal 10. cap5.ArvoreBinaria.<init>()V: Line 52
   * Goal 11. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 59
   * Goal 12. cap5.ArvoreBinaria.insere(Lcap4/Item;)V: Line 60
   * Goal 13. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 24
   * Goal 14. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 25
   * Goal 15. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 26
   * Goal 16. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 27
   * Goal 17. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 28
   * Goal 18. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 29
   * Goal 19. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 30
   * Goal 20. cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;: Line 31
   * Goal 21. [METHOD] cap5.ArvoreBinaria.<init>()V
   * Goal 22. [METHOD] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 23. [METHODNOEX] cap5.ArvoreBinaria.<init>()V
   * Goal 24. [METHODNOEX] cap5.ArvoreBinaria.insere(Lcap4/Item;)V
   * Goal 25. Weak Mutation 9: cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:24 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 12: cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:28 - ReplaceComparisonOperator >= -> >
   * Goal 27. Weak Mutation 15: cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:29 - ReplaceComparisonOperator <= -> <
   * Goal 28. Weak Mutation 16: cap5.ArvoreBinaria.insere(Lcap4/Item;Lcap5/ArvoreBinaria$No;)Lcap5/ArvoreBinaria$No;:30 - ReplaceConstant - Erro: Registro ja existente -> 
   */

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ArvoreBinaria arvoreBinaria0 = new ArvoreBinaria();
      MeuItem meuItem0 = new MeuItem((-1879));
      arvoreBinaria0.insere(meuItem0);
      arvoreBinaria0.insere(meuItem0);
      assertEquals(4, meuItem0.tamanho());
  }
}
