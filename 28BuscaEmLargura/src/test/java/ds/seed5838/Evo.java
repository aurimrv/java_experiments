/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 04 21:09:55 GMT 2020
 */

package ds.seed5838;

import org.junit.Test;
import static org.junit.Assert.*;
import ds.Grafo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Evo extends Grafo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Grafo grafo0 = new Grafo(1);
      grafo0.insereAresta(0, 1, 1);
      grafo0.imprime();
      assertEquals(1, grafo0.numVertices());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Grafo grafo0 = new Grafo(1);
      grafo0.insereAresta(0, 1, 0);
      Grafo.Aresta grafo_Aresta0 = grafo0.proxAdj(0);
      assertEquals(0, grafo_Aresta0.peso());
      assertEquals(1, grafo_Aresta0.v2());
      assertEquals(0, grafo_Aresta0.v1());
      assertEquals(1, grafo0.numVertices());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Grafo grafo0 = new Grafo(239);
      grafo0.primeiroListaAdj(0);
      assertEquals(239, grafo0.numVertices());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Grafo grafo0 = new Grafo(1);
      grafo0.insereAresta(0, 1, 1);
      boolean boolean0 = grafo0.existeAresta(0, 1);
      assertEquals(1, grafo0.numVertices());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Grafo grafo0 = new Grafo(1);
      boolean boolean0 = grafo0.existeAresta(0, 0);
      assertEquals(1, grafo0.numVertices());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Grafo grafo0 = new Grafo(4052);
      grafo0.insereAresta(1438, 1438, (-1));
      Grafo.Aresta grafo_Aresta0 = grafo0.retiraAresta(1438, 1438);
      assertEquals(4052, grafo0.numVertices());
      assertEquals(1438, grafo_Aresta0.v1());
      assertEquals(1438, grafo_Aresta0.v2());
      assertEquals((-1), grafo_Aresta0.peso());
      assertNotNull(grafo_Aresta0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Grafo grafo0 = new Grafo(4052);
      grafo0.insereAresta(1438, 1438, (-1));
      Grafo.Aresta grafo_Aresta0 = grafo0.retiraAresta(1438, 4052);
      assertEquals(4052, grafo0.numVertices());
      assertNull(grafo_Aresta0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Grafo grafo0 = new Grafo(1688);
      int int0 = grafo0.numVertices();
      assertEquals(1688, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Grafo grafo0 = new Grafo(2084);
      grafo0.insereAresta(10, 0, (-1));
      Grafo grafo1 = grafo0.grafoTransposto();
      assertEquals(2084, grafo0.numVertices());
      assertEquals(2084, grafo1.numVertices());
      assertNotSame(grafo1, grafo0);
  }
}
