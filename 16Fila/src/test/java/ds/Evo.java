/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 03 20:03:23 GMT 2016
 */

package ds;

import org.junit.Test;
import static org.junit.Assert.*;

//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

import ds.Fila;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Evo {

  //Test case number: 0
  /*
   * 32 covered goals:
   * Goal 1. cap3.autoreferencia.Fila.<init>()V: root-Branch
   * Goal 2. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: root-Branch
   * Goal 3. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: I8 Branch 1 IFEQ L23 - true
   * Goal 4. cap3.autoreferencia.Fila.vazia()Z: I6 Branch 2 IF_ACMPNE L31 - true
   * Goal 5. Branch cap3.autoreferencia.Fila.<init>()V: root-Branch in context: cap3.autoreferencia.Fila:<init>()V
   * Goal 6. Branch cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: root-Branch in context: cap3.autoreferencia.Fila:enfileira(Ljava/lang/Object;)V
   * Goal 7. Branch cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: I8 Branch 1 IFEQ L23 - true in context: cap3.autoreferencia.Fila:desenfileira()Ljava/lang/Object;
   * Goal 8. [Output]: cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;:Null
   * Goal 9. cap3.autoreferencia.Fila.<init>()V: Line 11
   * Goal 10. cap3.autoreferencia.Fila.<init>()V: Line 12
   * Goal 11. cap3.autoreferencia.Fila.<init>()V: Line 13
   * Goal 12. cap3.autoreferencia.Fila.<init>()V: Line 14
   * Goal 13. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: Line 22
   * Goal 14. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: Line 23
   * Goal 15. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: Line 25
   * Goal 16. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: Line 26
   * Goal 17. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: Line 27
   * Goal 18. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 16
   * Goal 19. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 17
   * Goal 20. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 18
   * Goal 21. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 19
   * Goal 22. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 20
   * Goal 23. cap3.autoreferencia.Fila.vazia()Z: Line 31
   * Goal 24. [METHOD] cap3.autoreferencia.Fila.<init>()V
   * Goal 25. [METHOD] cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;
   * Goal 26. [METHOD] cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V
   * Goal 27. [METHODNOEX] cap3.autoreferencia.Fila.<init>()V
   * Goal 28. [METHODNOEX] cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;
   * Goal 29. [METHODNOEX] cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V
   * Goal 30. Weak Mutation 0: cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;:23 - ReplaceComparisonOperator == -> !=
   * Goal 31. Weak Mutation 3: cap3.autoreferencia.Fila.vazia()Z:31 - ReplaceComparisonOperator != -> ==
   * Goal 32. Weak Mutation 5: cap3.autoreferencia.Fila.vazia()Z:31 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Fila fila0 = new Fila();
      fila0.enfileira((Object) null);
      Object object0 = fila0.desenfileira();
      assertNull(object0);
  }

  //Test case number: 1
  /*
   * 38 covered goals:
   * Goal 1. cap3.autoreferencia.Fila.<init>()V: root-Branch
   * Goal 2. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: root-Branch
   * Goal 3. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: I8 Branch 1 IFEQ L23 - true
   * Goal 4. cap3.autoreferencia.Fila.vazia()Z: I6 Branch 2 IF_ACMPNE L31 - true
   * Goal 5. cap3.autoreferencia.Fila.vazia()Z: I6 Branch 2 IF_ACMPNE L31 - false
   * Goal 6. Branch cap3.autoreferencia.Fila.<init>()V: root-Branch in context: cap3.autoreferencia.Fila:<init>()V
   * Goal 7. Branch cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: root-Branch in context: cap3.autoreferencia.Fila:enfileira(Ljava/lang/Object;)V
   * Goal 8. Branch cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: I8 Branch 1 IFEQ L23 - true in context: cap3.autoreferencia.Fila:desenfileira()Ljava/lang/Object;
   * Goal 9. Branch cap3.autoreferencia.Fila.vazia()Z: I6 Branch 2 IF_ACMPNE L31 - false in context: cap3.autoreferencia.Fila:vazia()Z
   * Goal 10. [Output]: cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;:NonNull
   * Goal 11. [Output]: cap3.autoreferencia.Fila.vazia()Z:True
   * Goal 12. cap3.autoreferencia.Fila.<init>()V: Line 11
   * Goal 13. cap3.autoreferencia.Fila.<init>()V: Line 12
   * Goal 14. cap3.autoreferencia.Fila.<init>()V: Line 13
   * Goal 15. cap3.autoreferencia.Fila.<init>()V: Line 14
   * Goal 16. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: Line 22
   * Goal 17. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: Line 23
   * Goal 18. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: Line 25
   * Goal 19. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: Line 26
   * Goal 20. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: Line 27
   * Goal 21. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 16
   * Goal 22. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 17
   * Goal 23. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 18
   * Goal 24. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 19
   * Goal 25. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 20
   * Goal 26. cap3.autoreferencia.Fila.vazia()Z: Line 31
   * Goal 27. [METHOD] cap3.autoreferencia.Fila.<init>()V
   * Goal 28. [METHOD] cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;
   * Goal 29. [METHOD] cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V
   * Goal 30. [METHOD] cap3.autoreferencia.Fila.vazia()Z
   * Goal 31. [METHODNOEX] cap3.autoreferencia.Fila.<init>()V
   * Goal 32. [METHODNOEX] cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;
   * Goal 33. [METHODNOEX] cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V
   * Goal 34. [METHODNOEX] cap3.autoreferencia.Fila.vazia()Z
   * Goal 35. Weak Mutation 0: cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;:23 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 3: cap3.autoreferencia.Fila.vazia()Z:31 - ReplaceComparisonOperator != -> ==
   * Goal 37. Weak Mutation 4: cap3.autoreferencia.Fila.vazia()Z:31 - ReplaceConstant - 1 -> 0
   * Goal 38. Weak Mutation 5: cap3.autoreferencia.Fila.vazia()Z:31 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Fila fila0 = new Fila();
      Object object0 = new Object();
      fila0.enfileira(object0);
      fila0.enfileira(fila0);
      assertFalse(fila0.vazia());
      
      fila0.desenfileira();
      fila0.desenfileira();
      boolean boolean0 = fila0.vazia();
      assertTrue(boolean0);
  }

  //Test case number: 2
  /*
   * 25 covered goals:
   * Goal 1. cap3.autoreferencia.Fila.<init>()V: root-Branch
   * Goal 2. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: root-Branch
   * Goal 3. cap3.autoreferencia.Fila.vazia()Z: I6 Branch 2 IF_ACMPNE L31 - true
   * Goal 4. Branch cap3.autoreferencia.Fila.<init>()V: root-Branch in context: cap3.autoreferencia.Fila:<init>()V
   * Goal 5. Branch cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: root-Branch in context: cap3.autoreferencia.Fila:enfileira(Ljava/lang/Object;)V
   * Goal 6. Branch cap3.autoreferencia.Fila.vazia()Z: I6 Branch 2 IF_ACMPNE L31 - true in context: cap3.autoreferencia.Fila:vazia()Z
   * Goal 7. [Output]: cap3.autoreferencia.Fila.vazia()Z:False
   * Goal 8. cap3.autoreferencia.Fila.<init>()V: Line 11
   * Goal 9. cap3.autoreferencia.Fila.<init>()V: Line 12
   * Goal 10. cap3.autoreferencia.Fila.<init>()V: Line 13
   * Goal 11. cap3.autoreferencia.Fila.<init>()V: Line 14
   * Goal 12. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 16
   * Goal 13. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 17
   * Goal 14. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 18
   * Goal 15. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 19
   * Goal 16. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 20
   * Goal 17. cap3.autoreferencia.Fila.vazia()Z: Line 31
   * Goal 18. [METHOD] cap3.autoreferencia.Fila.<init>()V
   * Goal 19. [METHOD] cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V
   * Goal 20. [METHOD] cap3.autoreferencia.Fila.vazia()Z
   * Goal 21. [METHODNOEX] cap3.autoreferencia.Fila.<init>()V
   * Goal 22. [METHODNOEX] cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V
   * Goal 23. [METHODNOEX] cap3.autoreferencia.Fila.vazia()Z
   * Goal 24. Weak Mutation 3: cap3.autoreferencia.Fila.vazia()Z:31 - ReplaceComparisonOperator != -> ==
   * Goal 25. Weak Mutation 5: cap3.autoreferencia.Fila.vazia()Z:31 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Fila fila0 = new Fila();
      Object object0 = new Object();
      fila0.enfileira(object0);
      boolean boolean0 = fila0.vazia();
      assertFalse(boolean0);
  }

  //Test case number: 3
  /*
   * 32 covered goals:
   * Goal 1. cap3.autoreferencia.Fila.<init>()V: root-Branch
   * Goal 2. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: root-Branch
   * Goal 3. cap3.autoreferencia.Fila.imprime()V: I38 Branch 3 IFNONNULL L35 - true
   * Goal 4. cap3.autoreferencia.Fila.imprime()V: I38 Branch 3 IFNONNULL L35 - false
   * Goal 5. Branch cap3.autoreferencia.Fila.<init>()V: root-Branch in context: cap3.autoreferencia.Fila:<init>()V
   * Goal 6. Branch cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: root-Branch in context: cap3.autoreferencia.Fila:enfileira(Ljava/lang/Object;)V
   * Goal 7. Branch cap3.autoreferencia.Fila.imprime()V: I38 Branch 3 IFNONNULL L35 - false in context: cap3.autoreferencia.Fila:imprime()V
   * Goal 8. Branch cap3.autoreferencia.Fila.imprime()V: I38 Branch 3 IFNONNULL L35 - true in context: cap3.autoreferencia.Fila:imprime()V
   * Goal 9. cap3.autoreferencia.Fila.<init>()V: Line 11
   * Goal 10. cap3.autoreferencia.Fila.<init>()V: Line 12
   * Goal 11. cap3.autoreferencia.Fila.<init>()V: Line 13
   * Goal 12. cap3.autoreferencia.Fila.<init>()V: Line 14
   * Goal 13. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 16
   * Goal 14. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 17
   * Goal 15. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 18
   * Goal 16. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 19
   * Goal 17. cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V: Line 20
   * Goal 18. cap3.autoreferencia.Fila.imprime()V: Line 34
   * Goal 19. cap3.autoreferencia.Fila.imprime()V: Line 35
   * Goal 20. cap3.autoreferencia.Fila.imprime()V: Line 36
   * Goal 21. cap3.autoreferencia.Fila.imprime()V: Line 37
   * Goal 22. cap3.autoreferencia.Fila.imprime()V: Line 39
   * Goal 23. cap3.autoreferencia.Fila.imprime()V: Line 40
   * Goal 24. [METHOD] cap3.autoreferencia.Fila.<init>()V
   * Goal 25. [METHOD] cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V
   * Goal 26. [METHOD] cap3.autoreferencia.Fila.imprime()V
   * Goal 27. [METHODNOEX] cap3.autoreferencia.Fila.<init>()V
   * Goal 28. [METHODNOEX] cap3.autoreferencia.Fila.enfileira(Ljava/lang/Object;)V
   * Goal 29. [METHODNOEX] cap3.autoreferencia.Fila.imprime()V
   * Goal 30. Weak Mutation 8: cap3.autoreferencia.Fila.imprime()V:35 - ReplaceComparisonOperator != null -> = null
   * Goal 31. Weak Mutation 6: cap3.autoreferencia.Fila.imprime()V:36 - ReplaceConstant -   -> 
   * Goal 32. Weak Mutation 7: cap3.autoreferencia.Fila.imprime()V:36 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Fila fila0 = new Fila();
      Object object0 = new Object();
      fila0.enfileira(object0);
      fila0.imprime();
      assertFalse(fila0.vazia());
  }

  //Test case number: 4
  /*
   * 22 covered goals:
   * Goal 1. cap3.autoreferencia.Fila.<init>()V: root-Branch
   * Goal 2. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: I8 Branch 1 IFEQ L23 - false
   * Goal 3. cap3.autoreferencia.Fila.vazia()Z: I6 Branch 2 IF_ACMPNE L31 - false
   * Goal 4. Branch cap3.autoreferencia.Fila.<init>()V: root-Branch in context: cap3.autoreferencia.Fila:<init>()V
   * Goal 5. Branch cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: I8 Branch 1 IFEQ L23 - false in context: cap3.autoreferencia.Fila:desenfileira()Ljava/lang/Object;
   * Goal 6. desenfileira()Ljava/lang/Object;_java.lang.Exception_DECLARED
   * Goal 7. cap3.autoreferencia.Fila.<init>()V: Line 11
   * Goal 8. cap3.autoreferencia.Fila.<init>()V: Line 12
   * Goal 9. cap3.autoreferencia.Fila.<init>()V: Line 13
   * Goal 10. cap3.autoreferencia.Fila.<init>()V: Line 14
   * Goal 11. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: Line 22
   * Goal 12. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: Line 23
   * Goal 13. cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;: Line 24
   * Goal 14. cap3.autoreferencia.Fila.vazia()Z: Line 31
   * Goal 15. [METHOD] cap3.autoreferencia.Fila.<init>()V
   * Goal 16. [METHOD] cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;
   * Goal 17. [METHODNOEX] cap3.autoreferencia.Fila.<init>()V
   * Goal 18. Weak Mutation 0: cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;:23 - ReplaceComparisonOperator == -> !=
   * Goal 19. Weak Mutation 1: cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;:24 - ReplaceConstant - Erro: A fila esta vazia -> 
   * Goal 20. Weak Mutation 2: cap3.autoreferencia.Fila.desenfileira()Ljava/lang/Object;:24 - ReplaceComparisonOperator == -> !=
   * Goal 21. Weak Mutation 3: cap3.autoreferencia.Fila.vazia()Z:31 - ReplaceComparisonOperator != -> ==
   * Goal 22. Weak Mutation 4: cap3.autoreferencia.Fila.vazia()Z:31 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Fila fila0 = new Fila();
      try { 
        fila0.desenfileira();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Erro: A fila esta vazia
         //
    	  assertTrue(true);//assertThrownBy("cap3.autoreferencia.Fila", e);
      }
  }
}
