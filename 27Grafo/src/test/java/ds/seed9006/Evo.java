/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 04 21:05:24 GMT 2020
 */

package ds.seed9006;

import org.junit.Test;
import static org.junit.Assert.*;
import ds.Grafo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Evo extends Grafo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Grafo grafo0 = new Grafo(240);
      grafo0.insereAresta(0, 2016, 0);
      grafo0.imprime();
      assertEquals(240, grafo0.numVertices());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Grafo grafo0 = new Grafo(1165);
      grafo0.insereAresta(0, 0, (-449));
      Grafo.Aresta grafo_Aresta0 = grafo0.retiraAresta(0, 0);
      assertEquals(0, grafo_Aresta0.v1());
      assertEquals(0, grafo_Aresta0.v2());
      assertNotNull(grafo_Aresta0);
      assertEquals((-449), grafo_Aresta0.peso());
      assertEquals(1165, grafo0.numVertices());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Grafo grafo0 = new Grafo(1165);
      grafo0.insereAresta(0, 0, (-435));
      Grafo.Aresta grafo_Aresta0 = grafo0.proxAdj(0);
      assertNotNull(grafo_Aresta0);
      assertEquals(1165, grafo0.numVertices());
      assertEquals(0, grafo_Aresta0.v2());
      assertEquals((-435), grafo_Aresta0.peso());
      assertEquals(0, grafo_Aresta0.v1());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Grafo grafo0 = new Grafo(1165);
      grafo0.primeiroListaAdj(0);
      assertEquals(1165, grafo0.numVertices());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Grafo grafo0 = new Grafo(240);
      boolean boolean0 = grafo0.existeAresta(0, 0);
      assertEquals(240, grafo0.numVertices());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Grafo grafo0 = new Grafo(240);
      grafo0.insereAresta(0, 0, 0);
      boolean boolean0 = grafo0.existeAresta(0, 0);
      assertEquals(240, grafo0.numVertices());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Grafo grafo0 = new Grafo(1165);
      grafo0.insereAresta(0, 0, (-449));
      Grafo.Aresta grafo_Aresta0 = grafo0.retiraAresta(0, 41);
      assertNull(grafo_Aresta0);
      assertEquals(1165, grafo0.numVertices());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Grafo grafo0 = new Grafo(212);
      int int0 = grafo0.numVertices();
      assertEquals(212, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Grafo grafo0 = new Grafo(1165);
      grafo0.insereAresta(0, 0, (-449));
      Grafo grafo1 = grafo0.grafoTransposto();
      assertEquals(1165, grafo0.numVertices());
      assertNotSame(grafo1, grafo0);
      assertEquals(1165, grafo1.numVertices());
  }
}
