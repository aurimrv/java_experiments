/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 04 21:04:26 GMT 2020
 */

package ds.seed6733;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ds.Grafo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Evo extends Grafo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Grafo grafo0 = new Grafo(1003);
      grafo0.insereAresta(937, 0, 937);
      grafo0.imprime();
      assertEquals(1003, grafo0.numVertices());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Grafo grafo0 = new Grafo(1003);
      grafo0.insereAresta(983, 1, 983);
      Grafo.Aresta grafo_Aresta0 = grafo0.retiraAresta(983, 1);
      assertEquals(1, grafo_Aresta0.v2());
      assertEquals(1003, grafo0.numVertices());
      assertEquals(983, grafo_Aresta0.v1());
      assertNotNull(grafo_Aresta0);
      assertEquals(983, grafo_Aresta0.peso());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Grafo grafo0 = new Grafo(1003);
      grafo0.insereAresta(937, 0, 937);
      Grafo grafo1 = grafo0.grafoTransposto();
      Grafo.Aresta grafo_Aresta0 = grafo1.retiraAresta(0, 2325);
      assertNull(grafo_Aresta0);
      assertEquals(1003, grafo1.numVertices());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Grafo grafo0 = new Grafo(1003);
      grafo0.insereAresta(968, 0, 968);
      Grafo grafo1 = grafo0.grafoTransposto();
      grafo1.insereAresta(0, 1003, 968);
      // Undeclared exception!
      try { 
        grafo1.grafoTransposto();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1003
         //
         verifyException("ds.Grafo", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Grafo grafo0 = new Grafo(1003);
      grafo0.primeiroListaAdj(0);
      assertEquals(1003, grafo0.numVertices());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Grafo grafo0 = new Grafo(1003);
      grafo0.insereAresta(937, 0, 937);
      Grafo grafo1 = grafo0.grafoTransposto();
      boolean boolean0 = grafo1.existeAresta(0, 937);
      assertEquals(1003, grafo1.numVertices());
      assertEquals(1003, grafo0.numVertices());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Grafo grafo0 = new Grafo(1597);
      int int0 = grafo0.numVertices();
      assertEquals(1597, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Grafo grafo0 = new Grafo(1003);
      grafo0.insereAresta(968, 0, 968);
      Grafo grafo1 = grafo0.grafoTransposto();
      boolean boolean0 = grafo1.existeAresta(0, 1003);
      assertFalse(boolean0);
      assertEquals(1003, grafo1.numVertices());
  }
}
