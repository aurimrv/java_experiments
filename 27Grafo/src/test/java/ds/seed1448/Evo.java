/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 04 21:01:03 GMT 2020
 */

package ds.seed1448;

import org.junit.Test;
import static org.junit.Assert.*;
import ds.Grafo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Evo extends Grafo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Grafo grafo0 = new Grafo(2581);
      grafo0.insereAresta(1315, 1960, 2581);
      grafo0.imprime();
      assertEquals(2581, grafo0.numVertices());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Grafo grafo0 = new Grafo(2585);
      grafo0.insereAresta(1315, 1960, 2585);
      Grafo.Aresta grafo_Aresta0 = grafo0.retiraAresta(1315, 1960);
      assertEquals(1315, grafo_Aresta0.v1());
      assertEquals(2585, grafo0.numVertices());
      assertEquals(2585, grafo_Aresta0.peso());
      assertNotNull(grafo_Aresta0);
      assertEquals(1960, grafo_Aresta0.v2());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Grafo grafo0 = new Grafo(2585);
      grafo0.insereAresta(1315, 1315, 1947);
      grafo0.insereAresta(1315, 1947, 2585);
      Grafo grafo1 = grafo0.grafoTransposto();
      assertEquals(2585, grafo1.numVertices());
      assertNotSame(grafo1, grafo0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Grafo grafo0 = new Grafo(1);
      grafo0.primeiroListaAdj(0);
      assertEquals(1, grafo0.numVertices());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Grafo grafo0 = new Grafo(2585);
      boolean boolean0 = grafo0.existeAresta(1947, 2006);
      assertEquals(2585, grafo0.numVertices());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Grafo grafo0 = new Grafo(2581);
      grafo0.insereAresta(1315, 1960, 2581);
      Grafo.Aresta grafo_Aresta0 = grafo0.retiraAresta(1315, 1315);
      assertNull(grafo_Aresta0);
      assertEquals(2581, grafo0.numVertices());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Grafo grafo0 = new Grafo(1745);
      int int0 = grafo0.numVertices();
      assertEquals(1745, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Grafo grafo0 = new Grafo(2581);
      grafo0.insereAresta(1315, 1960, 2581);
      Grafo grafo1 = grafo0.grafoTransposto();
      boolean boolean0 = grafo1.existeAresta(1960, 1315);
      assertEquals(2581, grafo1.numVertices());
      assertEquals(2581, grafo0.numVertices());
      assertTrue(boolean0);
  }
}
