/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 03 21:18:21 GMT 2016
 */

package ds;

import org.junit.Test;
import static org.junit.Assert.*;

//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

import ds.Grafo;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Evo {

  //Test case number: 0
  /*
   * 27 covered goals:
   * Goal 1. cap7.listaadj.autoreferencia.Grafo.<init>(I)V: I32 Branch 2 IF_ICMPLT L25 - false
   * Goal 2. Branch cap7.listaadj.autoreferencia.Grafo.<init>(I)V: I32 Branch 2 IF_ICMPLT L25 - false in context: cap7.listaadj.autoreferencia.Grafo:<init>(I)V
   * Goal 3. proxAdj(I)Lcap7/listaadj/autoreferencia/Grafo$Aresta;_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 4. cap7.listaadj.autoreferencia.Grafo.<init>(I)V: Line 24
   * Goal 5. cap7.listaadj.autoreferencia.Grafo.<init>(I)V: Line 25
   * Goal 6. cap7.listaadj.autoreferencia.Grafo.<init>(I)V: Line 26
   * Goal 7. cap7.listaadj.autoreferencia.Grafo.proxAdj(I)Lcap7/listaadj/autoreferencia/Grafo$Aresta;: Line 47
   * Goal 8. [METHOD] cap7.listaadj.autoreferencia.Grafo.<init>(I)V
   * Goal 9. [METHOD] cap7.listaadj.autoreferencia.Grafo.proxAdj(I)Lcap7/listaadj/autoreferencia/Grafo$Aresta;
   * Goal 10. [METHODNOEX] cap7.listaadj.autoreferencia.Grafo.<init>(I)V
   * Goal 11. Weak Mutation 50: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:24 - InsertUnaryOp Negation of numVertices
   * Goal 12. Weak Mutation 51: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:24 - InsertUnaryOp IINC 1 numVertices
   * Goal 13. Weak Mutation 52: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:24 - InsertUnaryOp IINC -1 numVertices
   * Goal 14. Weak Mutation 53: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:24 - InsertUnaryOp Negation of numVertices
   * Goal 15. Weak Mutation 54: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:24 - InsertUnaryOp IINC 1 numVertices
   * Goal 16. Weak Mutation 55: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:24 - InsertUnaryOp IINC -1 numVertices
   * Goal 17. Weak Mutation 56: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - ReplaceConstant - 0 -> 1
   * Goal 18. Weak Mutation 63: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - InsertUnaryOp Negation of i
   * Goal 19. Weak Mutation 64: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - InsertUnaryOp IINC 1 i
   * Goal 20. Weak Mutation 65: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - InsertUnaryOp IINC -1 i
   * Goal 21. Weak Mutation 66: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - InsertUnaryOp Negation
   * Goal 22. Weak Mutation 67: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - InsertUnaryOp +1
   * Goal 23. Weak Mutation 68: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - InsertUnaryOp -1
   * Goal 24. Weak Mutation 71: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - ReplaceComparisonOperator < -> <=
   * Goal 25. Weak Mutation 115: cap7.listaadj.autoreferencia.Grafo.proxAdj(I)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:47 - InsertUnaryOp Negation of v
   * Goal 26. Weak Mutation 116: cap7.listaadj.autoreferencia.Grafo.proxAdj(I)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:47 - InsertUnaryOp IINC 1 v
   * Goal 27. Weak Mutation 117: cap7.listaadj.autoreferencia.Grafo.proxAdj(I)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:47 - InsertUnaryOp IINC -1 v
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Grafo grafo0 = new Grafo(0);
      // Undeclared exception!
      try { 
        grafo0.proxAdj((-1964));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1964
         //
    	  assertTrue(true);//assertThrownBy("cap7.listaadj.autoreferencia.Grafo", e);
      }
  }

  //Test case number: 1
  /*
   * 41 covered goals:
   * Goal 1. cap7.listaadj.autoreferencia.Grafo.<init>(I)V: I32 Branch 2 IF_ICMPLT L25 - false
   * Goal 2. cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;: I56 Branch 11 IF_ICMPLT L68 - false
   * Goal 3. Branch cap7.listaadj.autoreferencia.Grafo.<init>(I)V: I32 Branch 2 IF_ICMPLT L25 - false in context: cap7.listaadj.autoreferencia.Grafo:<init>(I)V
   * Goal 4. Branch cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;: I56 Branch 11 IF_ICMPLT L68 - false in context: cap7.listaadj.autoreferencia.Grafo:grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;
   * Goal 5. [Output]: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:NonNull:cap7.listaadj.autoreferencia.Grafo:numVertices()I:Zero
   * Goal 6. cap7.listaadj.autoreferencia.Grafo.<init>(I)V: Line 24
   * Goal 7. cap7.listaadj.autoreferencia.Grafo.<init>(I)V: Line 25
   * Goal 8. cap7.listaadj.autoreferencia.Grafo.<init>(I)V: Line 26
   * Goal 9. cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;: Line 67
   * Goal 10. cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;: Line 68
   * Goal 11. cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;: Line 76
   * Goal 12. [METHOD] cap7.listaadj.autoreferencia.Grafo.<init>(I)V
   * Goal 13. [METHOD] cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;
   * Goal 14. [METHODNOEX] cap7.listaadj.autoreferencia.Grafo.<init>(I)V
   * Goal 15. [METHODNOEX] cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;
   * Goal 16. Weak Mutation 50: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:24 - InsertUnaryOp Negation of numVertices
   * Goal 17. Weak Mutation 51: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:24 - InsertUnaryOp IINC 1 numVertices
   * Goal 18. Weak Mutation 52: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:24 - InsertUnaryOp IINC -1 numVertices
   * Goal 19. Weak Mutation 53: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:24 - InsertUnaryOp Negation of numVertices
   * Goal 20. Weak Mutation 54: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:24 - InsertUnaryOp IINC 1 numVertices
   * Goal 21. Weak Mutation 55: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:24 - InsertUnaryOp IINC -1 numVertices
   * Goal 22. Weak Mutation 56: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 63: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - InsertUnaryOp Negation of i
   * Goal 24. Weak Mutation 64: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - InsertUnaryOp IINC 1 i
   * Goal 25. Weak Mutation 65: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - InsertUnaryOp IINC -1 i
   * Goal 26. Weak Mutation 66: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 67: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 68: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - InsertUnaryOp -1
   * Goal 29. Weak Mutation 71: cap7.listaadj.autoreferencia.Grafo.<init>(I)V:25 - ReplaceComparisonOperator < -> <=
   * Goal 30. Weak Mutation 185: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:67 - InsertUnaryOp Negation
   * Goal 31. Weak Mutation 186: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:67 - InsertUnaryOp +1
   * Goal 32. Weak Mutation 187: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:67 - InsertUnaryOp -1
   * Goal 33. Weak Mutation 188: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:68 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 201: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:68 - InsertUnaryOp Negation of v
   * Goal 35. Weak Mutation 202: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:68 - InsertUnaryOp IINC 1 v
   * Goal 36. Weak Mutation 203: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:68 - InsertUnaryOp IINC -1 v
   * Goal 37. Weak Mutation 204: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:68 - InsertUnaryOp Negation
   * Goal 38. Weak Mutation 205: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:68 - InsertUnaryOp +1
   * Goal 39. Weak Mutation 206: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:68 - InsertUnaryOp -1
   * Goal 40. Weak Mutation 209: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:68 - ReplaceComparisonOperator < -> <=
   * Goal 41. Weak Mutation 210: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:76 - ReplaceVariable grafoT -> this
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Grafo grafo0 = new Grafo(0);
      Grafo grafo1 = grafo0.grafoTransposto();
      assertEquals(0, grafo1.numVertices());
      assertNotSame(grafo1, grafo0);
      assertEquals(0, grafo0.numVertices());
  }
}
