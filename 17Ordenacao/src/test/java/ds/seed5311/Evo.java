/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 04 19:54:25 GMT 2020
 */

package ds.seed5311;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ds.Item;
import ds.MeuItem;
import ds.Ordenacao;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Evo extends Ordenacao_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Item[] itemArray0 = new Item[6];
      MeuItem meuItem0 = new MeuItem(0);
      itemArray0[1] = (Item) meuItem0;
      itemArray0[2] = (Item) meuItem0;
      itemArray0[3] = (Item) meuItem0;
      itemArray0[4] = (Item) meuItem0;
      itemArray0[5] = (Item) meuItem0;
      // Undeclared exception!
      try { 
        Ordenacao.heapsort(itemArray0, 1481);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1481
         //
         verifyException("ds.Ordenacao", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Item[] itemArray0 = new Item[0];
      Ordenacao.heapsort(itemArray0, (-1775));
      assertEquals(0, itemArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Item[] itemArray0 = new Item[7];
      MeuItem meuItem0 = new MeuItem(1);
      itemArray0[1] = (Item) meuItem0;
      itemArray0[2] = (Item) meuItem0;
      MeuItem meuItem1 = new MeuItem((-997));
      itemArray0[3] = (Item) meuItem1;
      itemArray0[5] = (Item) meuItem0;
      // Undeclared exception!
      try { 
        Ordenacao.shellsort(itemArray0, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Item[] itemArray0 = new Item[0];
      Ordenacao.shellsort(itemArray0, (-1775));
      assertEquals(0, itemArray0.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Item[] itemArray0 = new Item[4];
      MeuItem meuItem0 = new MeuItem(3258);
      itemArray0[1] = (Item) meuItem0;
      MeuItem meuItem1 = new MeuItem(0);
      itemArray0[2] = (Item) meuItem1;
      // Undeclared exception!
      try { 
        Ordenacao.insercao(itemArray0, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ds.Ordenacao", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Item[] itemArray0 = new Item[1];
      Ordenacao.insercao(itemArray0, (-289));
      assertEquals(1, itemArray0.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Item[] itemArray0 = new Item[6];
      MeuItem meuItem0 = new MeuItem(738);
      itemArray0[1] = (Item) meuItem0;
      itemArray0[2] = (Item) meuItem0;
      MeuItem meuItem1 = new MeuItem(3);
      itemArray0[3] = (Item) meuItem1;
      Ordenacao.selecao(itemArray0, 3);
      assertEquals(6, itemArray0.length);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Item[] itemArray0 = new Item[6];
      MeuItem meuItem0 = new MeuItem(0);
      itemArray0[1] = (Item) meuItem0;
      MeuItem meuItem1 = new MeuItem(4);
      itemArray0[2] = (Item) meuItem1;
      itemArray0[3] = (Item) meuItem0;
      itemArray0[4] = (Item) meuItem1;
      Ordenacao.quicksort(itemArray0, 4);
      assertEquals(6, itemArray0.length);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Item[] itemArray0 = new Item[6];
      MeuItem meuItem0 = new MeuItem(0);
      itemArray0[1] = (Item) meuItem0;
      itemArray0[2] = (Item) meuItem0;
      MeuItem meuItem1 = new MeuItem(29);
      itemArray0[3] = (Item) meuItem1;
      itemArray0[4] = (Item) meuItem0;
      Ordenacao.quicksort(itemArray0, 4);
      assertEquals(6, itemArray0.length);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Ordenacao ordenacao0 = new Ordenacao();
  }
}
