/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 07 02:55:05 GMT 2016
 */

package ds;

import org.junit.Test;
import static org.junit.Assert.*;

//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

import ds.Lista;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Evo {

  //Test case number: 0
  /*
   * 82 covered goals:
   * Goal 1. cap3.arranjo.Lista.<init>()V: root-Branch
   * Goal 2. cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L12 - true
   * Goal 3. cap3.arranjo.Lista.imprime()V: I31 Branch 3 IF_ICMPLT L20 - true
   * Goal 4. cap3.arranjo.Lista.imprime()V: I31 Branch 3 IF_ICMPLT L20 - false
   * Goal 5. Branch cap3.arranjo.Lista.<init>()V: root-Branch in context: cap3.arranjo.Lista:<init>()V
   * Goal 6. Branch cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L12 - true in context: cap3.arranjo.Lista:insere(Ljava/lang/Object;)V
   * Goal 7. Branch cap3.arranjo.Lista.imprime()V: I31 Branch 3 IF_ICMPLT L20 - false in context: cap3.arranjo.Lista:imprime()V
   * Goal 8. Branch cap3.arranjo.Lista.imprime()V: I31 Branch 3 IF_ICMPLT L20 - true in context: cap3.arranjo.Lista:imprime()V
   * Goal 9. cap3.arranjo.Lista.<init>()V: Line 7
   * Goal 10. cap3.arranjo.Lista.<init>()V: Line 8
   * Goal 11. cap3.arranjo.Lista.<init>()V: Line 9
   * Goal 12. cap3.arranjo.Lista.imprime()V: Line 20
   * Goal 13. cap3.arranjo.Lista.imprime()V: Line 21
   * Goal 14. cap3.arranjo.Lista.imprime()V: Line 22
   * Goal 15. cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: Line 12
   * Goal 16. cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: Line 14
   * Goal 17. cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: Line 15
   * Goal 18. [METHOD] cap3.arranjo.Lista.<init>()V
   * Goal 19. [METHOD] cap3.arranjo.Lista.imprime()V
   * Goal 20. [METHOD] cap3.arranjo.Lista.insere(Ljava/lang/Object;)V
   * Goal 21. [METHODNOEX] cap3.arranjo.Lista.<init>()V
   * Goal 22. [METHODNOEX] cap3.arranjo.Lista.imprime()V
   * Goal 23. [METHODNOEX] cap3.arranjo.Lista.insere(Ljava/lang/Object;)V
   * Goal 24. Weak Mutation 0: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 0
   * Goal 25. Weak Mutation 1: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 1
   * Goal 26. Weak Mutation 2: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> -1
   * Goal 27. Weak Mutation 3: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 999
   * Goal 28. Weak Mutation 4: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 1001
   * Goal 29. Weak Mutation 5: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> 0
   * Goal 30. Weak Mutation 6: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> 1
   * Goal 31. Weak Mutation 7: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> -2
   * Goal 32. Weak Mutation 8: cap3.arranjo.Lista.<init>()V:8 - ReplaceConstant - 0 -> 1
   * Goal 33. Weak Mutation 10: cap3.arranjo.Lista.<init>()V:8 - ReplaceVariable primeiro -> pos
   * Goal 34. Weak Mutation 11: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp Negation
   * Goal 35. Weak Mutation 12: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp +1
   * Goal 36. Weak Mutation 13: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp -1
   * Goal 37. Weak Mutation 14: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - ReplaceVariable ultimo -> primeiro
   * Goal 38. Weak Mutation 15: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - ReplaceVariable ultimo -> pos
   * Goal 39. Weak Mutation 16: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - InsertUnaryOp Negation
   * Goal 40. Weak Mutation 17: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - InsertUnaryOp +1
   * Goal 41. Weak Mutation 18: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - InsertUnaryOp -1
   * Goal 42. Weak Mutation 20: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - ReplaceComparisonOperator < -> -2
   * Goal 43. Weak Mutation 24: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceVariable ultimo -> primeiro
   * Goal 44. Weak Mutation 25: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceVariable ultimo -> pos
   * Goal 45. Weak Mutation 26: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - InsertUnaryOp Negation
   * Goal 46. Weak Mutation 27: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - InsertUnaryOp +1
   * Goal 47. Weak Mutation 28: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - InsertUnaryOp -1
   * Goal 48. Weak Mutation 29: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceVariable ultimo -> primeiro
   * Goal 49. Weak Mutation 30: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceVariable ultimo -> pos
   * Goal 50. Weak Mutation 31: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 32: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - InsertUnaryOp +1
   * Goal 52. Weak Mutation 33: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - InsertUnaryOp -1
   * Goal 53. Weak Mutation 34: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceConstant - 1 -> 0
   * Goal 54. Weak Mutation 35: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceArithmeticOperator + -> %
   * Goal 55. Weak Mutation 36: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceArithmeticOperator + -> -
   * Goal 56. Weak Mutation 37: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceArithmeticOperator + -> *
   * Goal 57. Weak Mutation 38: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceArithmeticOperator + -> /
   * Goal 58. Weak Mutation 54: cap3.arranjo.Lista.imprime()V:20 - ReplaceVariable primeiro -> ultimo
   * Goal 59. Weak Mutation 55: cap3.arranjo.Lista.imprime()V:20 - ReplaceVariable primeiro -> pos
   * Goal 60. Weak Mutation 56: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp Negation
   * Goal 61. Weak Mutation 57: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp +1
   * Goal 62. Weak Mutation 58: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp -1
   * Goal 63. Weak Mutation 66: cap3.arranjo.Lista.imprime()V:20 - ReplaceVariable aux -> primeiro
   * Goal 64. Weak Mutation 67: cap3.arranjo.Lista.imprime()V:20 - ReplaceVariable aux -> ultimo
   * Goal 65. Weak Mutation 68: cap3.arranjo.Lista.imprime()V:20 - ReplaceVariable aux -> pos
   * Goal 66. Weak Mutation 69: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp Negation of aux
   * Goal 67. Weak Mutation 70: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp IINC 1 aux
   * Goal 68. Weak Mutation 71: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp IINC -1 aux
   * Goal 69. Weak Mutation 72: cap3.arranjo.Lista.imprime()V:20 - ReplaceVariable ultimo -> primeiro
   * Goal 70. Weak Mutation 73: cap3.arranjo.Lista.imprime()V:20 - ReplaceVariable ultimo -> pos
   * Goal 71. Weak Mutation 74: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp Negation
   * Goal 72. Weak Mutation 75: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp +1
   * Goal 73. Weak Mutation 76: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp -1
   * Goal 74. Weak Mutation 78: cap3.arranjo.Lista.imprime()V:20 - ReplaceComparisonOperator < -> -2
   * Goal 75. Weak Mutation 79: cap3.arranjo.Lista.imprime()V:20 - ReplaceComparisonOperator < -> <=
   * Goal 76. Weak Mutation 59: cap3.arranjo.Lista.imprime()V:21 - ReplaceVariable aux -> primeiro
   * Goal 77. Weak Mutation 60: cap3.arranjo.Lista.imprime()V:21 - ReplaceVariable aux -> ultimo
   * Goal 78. Weak Mutation 61: cap3.arranjo.Lista.imprime()V:21 - ReplaceVariable aux -> pos
   * Goal 79. Weak Mutation 62: cap3.arranjo.Lista.imprime()V:21 - InsertUnaryOp Negation of aux
   * Goal 80. Weak Mutation 63: cap3.arranjo.Lista.imprime()V:21 - InsertUnaryOp IINC 1 aux
   * Goal 81. Weak Mutation 64: cap3.arranjo.Lista.imprime()V:21 - InsertUnaryOp IINC -1 aux
   * Goal 82. Weak Mutation 65: cap3.arranjo.Lista.imprime()V:21 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Lista lista0 = new Lista();
      lista0.insere(lista0.primeiro);
      lista0.insere(lista0.item);
      lista0.imprime();
      assertEquals(2, lista0.ultimo);
  }

  //Test case number: 1
  /*
   * 42 covered goals:
   * Goal 1. cap3.arranjo.Lista.<init>()V: root-Branch
   * Goal 2. cap3.arranjo.Lista.imprime()V: I31 Branch 3 IF_ICMPLT L20 - false
   * Goal 3. Branch cap3.arranjo.Lista.<init>()V: root-Branch in context: cap3.arranjo.Lista:<init>()V
   * Goal 4. Branch cap3.arranjo.Lista.imprime()V: I31 Branch 3 IF_ICMPLT L20 - false in context: cap3.arranjo.Lista:imprime()V
   * Goal 5. cap3.arranjo.Lista.<init>()V: Line 7
   * Goal 6. cap3.arranjo.Lista.<init>()V: Line 8
   * Goal 7. cap3.arranjo.Lista.<init>()V: Line 9
   * Goal 8. cap3.arranjo.Lista.imprime()V: Line 20
   * Goal 9. cap3.arranjo.Lista.imprime()V: Line 22
   * Goal 10. [METHOD] cap3.arranjo.Lista.<init>()V
   * Goal 11. [METHOD] cap3.arranjo.Lista.imprime()V
   * Goal 12. [METHODNOEX] cap3.arranjo.Lista.<init>()V
   * Goal 13. [METHODNOEX] cap3.arranjo.Lista.imprime()V
   * Goal 14. Weak Mutation 0: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 0
   * Goal 15. Weak Mutation 1: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 1
   * Goal 16. Weak Mutation 2: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> -1
   * Goal 17. Weak Mutation 3: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 999
   * Goal 18. Weak Mutation 4: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 1001
   * Goal 19. Weak Mutation 5: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> 0
   * Goal 20. Weak Mutation 6: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> 1
   * Goal 21. Weak Mutation 7: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> -2
   * Goal 22. Weak Mutation 8: cap3.arranjo.Lista.<init>()V:8 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 10: cap3.arranjo.Lista.<init>()V:8 - ReplaceVariable primeiro -> pos
   * Goal 24. Weak Mutation 11: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp Negation
   * Goal 25. Weak Mutation 12: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp +1
   * Goal 26. Weak Mutation 13: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp -1
   * Goal 27. Weak Mutation 54: cap3.arranjo.Lista.imprime()V:20 - ReplaceVariable primeiro -> ultimo
   * Goal 28. Weak Mutation 55: cap3.arranjo.Lista.imprime()V:20 - ReplaceVariable primeiro -> pos
   * Goal 29. Weak Mutation 56: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp Negation
   * Goal 30. Weak Mutation 57: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp +1
   * Goal 31. Weak Mutation 58: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp -1
   * Goal 32. Weak Mutation 67: cap3.arranjo.Lista.imprime()V:20 - ReplaceVariable aux -> ultimo
   * Goal 33. Weak Mutation 68: cap3.arranjo.Lista.imprime()V:20 - ReplaceVariable aux -> pos
   * Goal 34. Weak Mutation 69: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp Negation of aux
   * Goal 35. Weak Mutation 70: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp IINC 1 aux
   * Goal 36. Weak Mutation 71: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp IINC -1 aux
   * Goal 37. Weak Mutation 72: cap3.arranjo.Lista.imprime()V:20 - ReplaceVariable ultimo -> primeiro
   * Goal 38. Weak Mutation 73: cap3.arranjo.Lista.imprime()V:20 - ReplaceVariable ultimo -> pos
   * Goal 39. Weak Mutation 74: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp Negation
   * Goal 40. Weak Mutation 75: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp +1
   * Goal 41. Weak Mutation 76: cap3.arranjo.Lista.imprime()V:20 - InsertUnaryOp -1
   * Goal 42. Weak Mutation 77: cap3.arranjo.Lista.imprime()V:20 - ReplaceComparisonOperator < -> !=
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Lista lista0 = new Lista();
      assertTrue(lista0.vazia());
      
      lista0.ultimo = (-2430);
      lista0.imprime();
      assertEquals((-1), lista0.pos);
  }

  //Test case number: 2
  /*
   * 63 covered goals:
   * Goal 1. cap3.arranjo.Lista.<init>()V: root-Branch
   * Goal 2. cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L12 - true
   * Goal 3. cap3.arranjo.Lista.vazia()Z: I6 Branch 2 IF_ICMPNE L17 - true
   * Goal 4. Branch cap3.arranjo.Lista.<init>()V: root-Branch in context: cap3.arranjo.Lista:<init>()V
   * Goal 5. Branch cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L12 - true in context: cap3.arranjo.Lista:insere(Ljava/lang/Object;)V
   * Goal 6. Branch cap3.arranjo.Lista.vazia()Z: I6 Branch 2 IF_ICMPNE L17 - true in context: cap3.arranjo.Lista:vazia()Z
   * Goal 7. [Output]: cap3.arranjo.Lista.vazia()Z:False
   * Goal 8. cap3.arranjo.Lista.<init>()V: Line 7
   * Goal 9. cap3.arranjo.Lista.<init>()V: Line 8
   * Goal 10. cap3.arranjo.Lista.<init>()V: Line 9
   * Goal 11. cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: Line 12
   * Goal 12. cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: Line 14
   * Goal 13. cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: Line 15
   * Goal 14. cap3.arranjo.Lista.vazia()Z: Line 17
   * Goal 15. [METHOD] cap3.arranjo.Lista.<init>()V
   * Goal 16. [METHOD] cap3.arranjo.Lista.insere(Ljava/lang/Object;)V
   * Goal 17. [METHOD] cap3.arranjo.Lista.vazia()Z
   * Goal 18. [METHODNOEX] cap3.arranjo.Lista.<init>()V
   * Goal 19. [METHODNOEX] cap3.arranjo.Lista.insere(Ljava/lang/Object;)V
   * Goal 20. [METHODNOEX] cap3.arranjo.Lista.vazia()Z
   * Goal 21. Weak Mutation 0: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 0
   * Goal 22. Weak Mutation 1: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 1
   * Goal 23. Weak Mutation 2: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> -1
   * Goal 24. Weak Mutation 3: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 999
   * Goal 25. Weak Mutation 4: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 1001
   * Goal 26. Weak Mutation 5: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> 0
   * Goal 27. Weak Mutation 6: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> 1
   * Goal 28. Weak Mutation 7: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> -2
   * Goal 29. Weak Mutation 8: cap3.arranjo.Lista.<init>()V:8 - ReplaceConstant - 0 -> 1
   * Goal 30. Weak Mutation 10: cap3.arranjo.Lista.<init>()V:8 - ReplaceVariable primeiro -> pos
   * Goal 31. Weak Mutation 11: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp Negation
   * Goal 32. Weak Mutation 12: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp +1
   * Goal 33. Weak Mutation 13: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp -1
   * Goal 34. Weak Mutation 15: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - ReplaceVariable ultimo -> pos
   * Goal 35. Weak Mutation 16: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - InsertUnaryOp Negation
   * Goal 36. Weak Mutation 17: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - InsertUnaryOp +1
   * Goal 37. Weak Mutation 18: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - InsertUnaryOp -1
   * Goal 38. Weak Mutation 20: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - ReplaceComparisonOperator < -> -2
   * Goal 39. Weak Mutation 25: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceVariable ultimo -> pos
   * Goal 40. Weak Mutation 26: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - InsertUnaryOp Negation
   * Goal 41. Weak Mutation 27: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - InsertUnaryOp +1
   * Goal 42. Weak Mutation 28: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - InsertUnaryOp -1
   * Goal 43. Weak Mutation 30: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceVariable ultimo -> pos
   * Goal 44. Weak Mutation 31: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - InsertUnaryOp Negation
   * Goal 45. Weak Mutation 32: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - InsertUnaryOp +1
   * Goal 46. Weak Mutation 33: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - InsertUnaryOp -1
   * Goal 47. Weak Mutation 34: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceConstant - 1 -> 0
   * Goal 48. Weak Mutation 35: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceArithmeticOperator + -> %
   * Goal 49. Weak Mutation 36: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceArithmeticOperator + -> -
   * Goal 50. Weak Mutation 37: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceArithmeticOperator + -> *
   * Goal 51. Weak Mutation 38: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceArithmeticOperator + -> /
   * Goal 52. Weak Mutation 39: cap3.arranjo.Lista.vazia()Z:17 - ReplaceVariable primeiro -> ultimo
   * Goal 53. Weak Mutation 40: cap3.arranjo.Lista.vazia()Z:17 - ReplaceVariable primeiro -> pos
   * Goal 54. Weak Mutation 41: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp Negation
   * Goal 55. Weak Mutation 42: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp +1
   * Goal 56. Weak Mutation 43: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp -1
   * Goal 57. Weak Mutation 44: cap3.arranjo.Lista.vazia()Z:17 - ReplaceVariable ultimo -> primeiro
   * Goal 58. Weak Mutation 45: cap3.arranjo.Lista.vazia()Z:17 - ReplaceVariable ultimo -> pos
   * Goal 59. Weak Mutation 46: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp Negation
   * Goal 60. Weak Mutation 47: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp +1
   * Goal 61. Weak Mutation 48: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp -1
   * Goal 62. Weak Mutation 51: cap3.arranjo.Lista.vazia()Z:17 - ReplaceComparisonOperator != -> >
   * Goal 63. Weak Mutation 53: cap3.arranjo.Lista.vazia()Z:17 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Lista lista0 = new Lista();
      lista0.insere(lista0);
      boolean boolean0 = lista0.vazia();
      assertEquals(1, lista0.ultimo);
      assertFalse(boolean0);
  }

  //Test case number: 3
  /*
   * 37 covered goals:
   * Goal 1. cap3.arranjo.Lista.<init>()V: root-Branch
   * Goal 2. cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L12 - true
   * Goal 3. Branch cap3.arranjo.Lista.<init>()V: root-Branch in context: cap3.arranjo.Lista:<init>()V
   * Goal 4. Branch cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L12 - true in context: cap3.arranjo.Lista:insere(Ljava/lang/Object;)V
   * Goal 5. insere(Ljava/lang/Object;)V_java.lang.ArrayIndexOutOfBoundsException_DECLARED
   * Goal 6. cap3.arranjo.Lista.<init>()V: Line 7
   * Goal 7. cap3.arranjo.Lista.<init>()V: Line 8
   * Goal 8. cap3.arranjo.Lista.<init>()V: Line 9
   * Goal 9. cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: Line 12
   * Goal 10. cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: Line 14
   * Goal 11. [METHOD] cap3.arranjo.Lista.<init>()V
   * Goal 12. [METHOD] cap3.arranjo.Lista.insere(Ljava/lang/Object;)V
   * Goal 13. [METHODNOEX] cap3.arranjo.Lista.<init>()V
   * Goal 14. Weak Mutation 0: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 0
   * Goal 15. Weak Mutation 1: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 1
   * Goal 16. Weak Mutation 2: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> -1
   * Goal 17. Weak Mutation 3: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 999
   * Goal 18. Weak Mutation 4: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 1001
   * Goal 19. Weak Mutation 5: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> 0
   * Goal 20. Weak Mutation 6: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> 1
   * Goal 21. Weak Mutation 7: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> -2
   * Goal 22. Weak Mutation 8: cap3.arranjo.Lista.<init>()V:8 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 10: cap3.arranjo.Lista.<init>()V:8 - ReplaceVariable primeiro -> pos
   * Goal 24. Weak Mutation 11: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp Negation
   * Goal 25. Weak Mutation 12: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp +1
   * Goal 26. Weak Mutation 13: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp -1
   * Goal 27. Weak Mutation 14: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - ReplaceVariable ultimo -> primeiro
   * Goal 28. Weak Mutation 15: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - ReplaceVariable ultimo -> pos
   * Goal 29. Weak Mutation 16: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - InsertUnaryOp Negation
   * Goal 30. Weak Mutation 17: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - InsertUnaryOp +1
   * Goal 31. Weak Mutation 18: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - InsertUnaryOp -1
   * Goal 32. Weak Mutation 20: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - ReplaceComparisonOperator < -> -2
   * Goal 33. Weak Mutation 24: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceVariable ultimo -> primeiro
   * Goal 34. Weak Mutation 25: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - ReplaceVariable ultimo -> pos
   * Goal 35. Weak Mutation 26: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - InsertUnaryOp Negation
   * Goal 36. Weak Mutation 27: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - InsertUnaryOp +1
   * Goal 37. Weak Mutation 28: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:14 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Lista lista0 = new Lista();
      lista0.ultimo = (-2430);
      try { 
        lista0.insere(lista0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2430
         //
    	  assertTrue(true);//assertThrownBy("cap3.arranjo.Lista", e);
      }
  }

  //Test case number: 4
  /*
   * 36 covered goals:
   * Goal 1. cap3.arranjo.Lista.<init>()V: root-Branch
   * Goal 2. cap3.arranjo.Lista.vazia()Z: I6 Branch 2 IF_ICMPNE L17 - false
   * Goal 3. Branch cap3.arranjo.Lista.<init>()V: root-Branch in context: cap3.arranjo.Lista:<init>()V
   * Goal 4. Branch cap3.arranjo.Lista.vazia()Z: I6 Branch 2 IF_ICMPNE L17 - false in context: cap3.arranjo.Lista:vazia()Z
   * Goal 5. [Output]: cap3.arranjo.Lista.vazia()Z:True
   * Goal 6. cap3.arranjo.Lista.<init>()V: Line 7
   * Goal 7. cap3.arranjo.Lista.<init>()V: Line 8
   * Goal 8. cap3.arranjo.Lista.<init>()V: Line 9
   * Goal 9. cap3.arranjo.Lista.vazia()Z: Line 17
   * Goal 10. [METHOD] cap3.arranjo.Lista.<init>()V
   * Goal 11. [METHOD] cap3.arranjo.Lista.vazia()Z
   * Goal 12. [METHODNOEX] cap3.arranjo.Lista.<init>()V
   * Goal 13. [METHODNOEX] cap3.arranjo.Lista.vazia()Z
   * Goal 14. Weak Mutation 0: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 0
   * Goal 15. Weak Mutation 1: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 1
   * Goal 16. Weak Mutation 2: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> -1
   * Goal 17. Weak Mutation 3: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 999
   * Goal 18. Weak Mutation 4: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 1001
   * Goal 19. Weak Mutation 5: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> 0
   * Goal 20. Weak Mutation 6: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> 1
   * Goal 21. Weak Mutation 7: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> -2
   * Goal 22. Weak Mutation 8: cap3.arranjo.Lista.<init>()V:8 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 10: cap3.arranjo.Lista.<init>()V:8 - ReplaceVariable primeiro -> pos
   * Goal 24. Weak Mutation 11: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp Negation
   * Goal 25. Weak Mutation 12: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp +1
   * Goal 26. Weak Mutation 13: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp -1
   * Goal 27. Weak Mutation 40: cap3.arranjo.Lista.vazia()Z:17 - ReplaceVariable primeiro -> pos
   * Goal 28. Weak Mutation 41: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp Negation
   * Goal 29. Weak Mutation 42: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp +1
   * Goal 30. Weak Mutation 43: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp -1
   * Goal 31. Weak Mutation 45: cap3.arranjo.Lista.vazia()Z:17 - ReplaceVariable ultimo -> pos
   * Goal 32. Weak Mutation 46: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp Negation
   * Goal 33. Weak Mutation 47: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp +1
   * Goal 34. Weak Mutation 48: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp -1
   * Goal 35. Weak Mutation 49: cap3.arranjo.Lista.vazia()Z:17 - ReplaceComparisonOperator != -> -1
   * Goal 36. Weak Mutation 52: cap3.arranjo.Lista.vazia()Z:17 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Lista lista0 = new Lista();
      boolean boolean0 = lista0.vazia();
      assertEquals((-1), lista0.pos);
      assertEquals(0, lista0.primeiro);
      assertTrue(boolean0);
  }

  //Test case number: 5
  /*
   * 38 covered goals:
   * Goal 1. cap3.arranjo.Lista.<init>()V: root-Branch
   * Goal 2. cap3.arranjo.Lista.vazia()Z: I6 Branch 2 IF_ICMPNE L17 - true
   * Goal 3. Branch cap3.arranjo.Lista.<init>()V: root-Branch in context: cap3.arranjo.Lista:<init>()V
   * Goal 4. Branch cap3.arranjo.Lista.vazia()Z: I6 Branch 2 IF_ICMPNE L17 - true in context: cap3.arranjo.Lista:vazia()Z
   * Goal 5. [Output]: cap3.arranjo.Lista.vazia()Z:False
   * Goal 6. cap3.arranjo.Lista.<init>()V: Line 7
   * Goal 7. cap3.arranjo.Lista.<init>()V: Line 8
   * Goal 8. cap3.arranjo.Lista.<init>()V: Line 9
   * Goal 9. cap3.arranjo.Lista.vazia()Z: Line 17
   * Goal 10. [METHOD] cap3.arranjo.Lista.<init>()V
   * Goal 11. [METHOD] cap3.arranjo.Lista.vazia()Z
   * Goal 12. [METHODNOEX] cap3.arranjo.Lista.<init>()V
   * Goal 13. [METHODNOEX] cap3.arranjo.Lista.vazia()Z
   * Goal 14. Weak Mutation 0: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 0
   * Goal 15. Weak Mutation 1: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 1
   * Goal 16. Weak Mutation 2: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> -1
   * Goal 17. Weak Mutation 3: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 999
   * Goal 18. Weak Mutation 4: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 1001
   * Goal 19. Weak Mutation 5: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> 0
   * Goal 20. Weak Mutation 6: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> 1
   * Goal 21. Weak Mutation 7: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> -2
   * Goal 22. Weak Mutation 8: cap3.arranjo.Lista.<init>()V:8 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 10: cap3.arranjo.Lista.<init>()V:8 - ReplaceVariable primeiro -> pos
   * Goal 24. Weak Mutation 11: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp Negation
   * Goal 25. Weak Mutation 12: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp +1
   * Goal 26. Weak Mutation 13: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp -1
   * Goal 27. Weak Mutation 39: cap3.arranjo.Lista.vazia()Z:17 - ReplaceVariable primeiro -> ultimo
   * Goal 28. Weak Mutation 40: cap3.arranjo.Lista.vazia()Z:17 - ReplaceVariable primeiro -> pos
   * Goal 29. Weak Mutation 41: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp Negation
   * Goal 30. Weak Mutation 42: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp +1
   * Goal 31. Weak Mutation 43: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp -1
   * Goal 32. Weak Mutation 44: cap3.arranjo.Lista.vazia()Z:17 - ReplaceVariable ultimo -> primeiro
   * Goal 33. Weak Mutation 45: cap3.arranjo.Lista.vazia()Z:17 - ReplaceVariable ultimo -> pos
   * Goal 34. Weak Mutation 46: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp Negation
   * Goal 35. Weak Mutation 47: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp +1
   * Goal 36. Weak Mutation 48: cap3.arranjo.Lista.vazia()Z:17 - InsertUnaryOp -1
   * Goal 37. Weak Mutation 50: cap3.arranjo.Lista.vazia()Z:17 - ReplaceComparisonOperator != -> <
   * Goal 38. Weak Mutation 53: cap3.arranjo.Lista.vazia()Z:17 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Lista lista0 = new Lista();
      assertEquals(0, lista0.primeiro);
      
      lista0.primeiro = 542;
      boolean boolean0 = lista0.vazia();
      assertFalse(boolean0);
  }

  //Test case number: 6
  /*
   * 34 covered goals:
   * Goal 1. cap3.arranjo.Lista.<init>()V: root-Branch
   * Goal 2. cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L12 - false
   * Goal 3. Branch cap3.arranjo.Lista.<init>()V: root-Branch in context: cap3.arranjo.Lista:<init>()V
   * Goal 4. Branch cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: I7 Branch 1 IF_ICMPLT L12 - false in context: cap3.arranjo.Lista:insere(Ljava/lang/Object;)V
   * Goal 5. insere(Ljava/lang/Object;)V_java.lang.Exception_DECLARED
   * Goal 6. cap3.arranjo.Lista.<init>()V: Line 7
   * Goal 7. cap3.arranjo.Lista.<init>()V: Line 8
   * Goal 8. cap3.arranjo.Lista.<init>()V: Line 9
   * Goal 9. cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: Line 12
   * Goal 10. cap3.arranjo.Lista.insere(Ljava/lang/Object;)V: Line 13
   * Goal 11. [METHOD] cap3.arranjo.Lista.<init>()V
   * Goal 12. [METHOD] cap3.arranjo.Lista.insere(Ljava/lang/Object;)V
   * Goal 13. [METHODNOEX] cap3.arranjo.Lista.<init>()V
   * Goal 14. Weak Mutation 0: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 0
   * Goal 15. Weak Mutation 1: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 1
   * Goal 16. Weak Mutation 2: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> -1
   * Goal 17. Weak Mutation 3: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 999
   * Goal 18. Weak Mutation 4: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - 1000 -> 1001
   * Goal 19. Weak Mutation 5: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> 0
   * Goal 20. Weak Mutation 6: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> 1
   * Goal 21. Weak Mutation 7: cap3.arranjo.Lista.<init>()V:7 - ReplaceConstant - -1 -> -2
   * Goal 22. Weak Mutation 8: cap3.arranjo.Lista.<init>()V:8 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 10: cap3.arranjo.Lista.<init>()V:8 - ReplaceVariable primeiro -> pos
   * Goal 24. Weak Mutation 11: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp Negation
   * Goal 25. Weak Mutation 12: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp +1
   * Goal 26. Weak Mutation 13: cap3.arranjo.Lista.<init>()V:8 - InsertUnaryOp -1
   * Goal 27. Weak Mutation 14: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - ReplaceVariable ultimo -> primeiro
   * Goal 28. Weak Mutation 15: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - ReplaceVariable ultimo -> pos
   * Goal 29. Weak Mutation 16: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - InsertUnaryOp Negation
   * Goal 30. Weak Mutation 17: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - InsertUnaryOp +1
   * Goal 31. Weak Mutation 18: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - InsertUnaryOp -1
   * Goal 32. Weak Mutation 19: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:12 - ReplaceComparisonOperator < -> !=
   * Goal 33. Weak Mutation 22: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:13 - ReplaceConstant - Erro: A lista esta cheia -> 
   * Goal 34. Weak Mutation 23: cap3.arranjo.Lista.insere(Ljava/lang/Object;)V:13 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Lista lista0 = new Lista();
      lista0.ultimo = 5196;
      try { 
        lista0.insere("KoiV6'q6aNc|QB'R`W");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Erro: A lista esta cheia
         //
    	  assertTrue(true);//assertThrownBy("cap3.arranjo.Lista", e);
      }
  }
}
