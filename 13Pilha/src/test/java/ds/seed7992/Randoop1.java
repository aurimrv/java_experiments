package ds.seed7992;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Randoop1 {

    public static boolean debug = false;

    @Test
    public void test501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test501");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        java.lang.Object[] objArray10 = pilha0.item;
        boolean boolean11 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) 10.0d);
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        boolean boolean16 = pilha14.vazia();
        boolean boolean17 = pilha14.vazia();
        java.lang.Object[] objArray18 = pilha14.item;
        pilha0.item = objArray18;
        java.lang.Object obj20 = pilha0.desempilha();
        int int21 = pilha0.tamanho();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = pilha0.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: Erro: A pilha esta vazia");
        } catch (java.lang.Exception e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test502");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        java.lang.Object obj5 = pilha0.desempilha();
        ds.Pilha pilha6 = new ds.Pilha();
        java.lang.Object[] objArray7 = pilha6.item;
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        java.lang.Object[] objArray14 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha8.item = objArray14;
        pilha6.item = objArray14;
        pilha0.item = objArray14;
        int int18 = pilha0.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test503");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        boolean boolean4 = pilha0.vazia();
        java.lang.Object[] objArray5 = pilha0.item;
        int int6 = pilha0.topo;
        int int7 = pilha0.tamanho();
        pilha0.topo = (byte) 1;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test504");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        pilha0.topo = 'a';
        int int6 = pilha0.tamanho();
        java.lang.Object[] objArray7 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 97 + "'", int6 == 97);
        org.junit.Assert.assertNotNull(objArray7);
    }

    @Test
    public void test505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test505");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        int int18 = pilha0.tamanho();
        boolean boolean19 = pilha0.vazia();
        int int20 = pilha0.topo;
        int int21 = pilha0.tamanho();
        java.lang.Object[] objArray22 = pilha0.item;
        int int23 = pilha0.topo;
        boolean boolean24 = pilha0.vazia();
        java.lang.Object[] objArray25 = pilha0.item;
        ds.Pilha pilha26 = new ds.Pilha();
        int int27 = pilha26.tamanho();
        ds.Pilha pilha28 = new ds.Pilha();
        java.lang.Object[] objArray29 = pilha28.item;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha28.item = objArray34;
        java.lang.Object[] objArray36 = pilha28.item;
        java.lang.Object[] objArray37 = pilha28.item;
        pilha26.item = objArray37;
        java.lang.Object[] objArray39 = pilha26.item;
        pilha0.empilha((java.lang.Object) objArray39);
        pilha0.topo = (-1);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[#, 0, 4, 1]");
    }

    @Test
    public void test506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test506");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        pilha0.topo = 1;
        java.lang.Object[] objArray5 = pilha0.item;
        boolean boolean6 = pilha0.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test507");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        pilha0.topo = 100;
        boolean boolean6 = pilha0.vazia();
        int int7 = pilha0.tamanho();
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        boolean boolean10 = pilha8.vazia();
        java.lang.Object obj11 = null;
        pilha8.empilha(obj11);
        java.lang.Object[] objArray13 = pilha8.item;
        int int14 = pilha8.tamanho();
        ds.Pilha pilha15 = new ds.Pilha();
        boolean boolean16 = pilha15.vazia();
        ds.Pilha pilha17 = new ds.Pilha();
        java.lang.Object[] objArray18 = pilha17.item;
        int int19 = pilha17.topo;
        int int20 = pilha17.topo;
        int int21 = pilha17.tamanho();
        ds.Pilha pilha22 = new ds.Pilha();
        java.lang.Object[] objArray23 = pilha22.item;
        java.lang.Object[] objArray28 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha22.item = objArray28;
        java.lang.Object[] objArray30 = pilha22.item;
        pilha17.item = objArray30;
        pilha15.item = objArray30;
        java.lang.Object[] objArray33 = pilha15.item;
        java.lang.Object[] objArray34 = pilha15.item;
        pilha8.item = objArray34;
        pilha0.item = objArray34;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[#, 0, 4, 1]");
    }

    @Test
    public void test508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test508");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.topo = (byte) 1;
        boolean boolean5 = pilha0.vazia();
        ds.Pilha pilha6 = new ds.Pilha();
        java.lang.Object[] objArray7 = pilha6.item;
        boolean boolean8 = pilha6.vazia();
        java.lang.Object obj9 = null;
        pilha6.empilha(obj9);
        java.lang.Object[] objArray11 = pilha6.item;
        pilha0.item = objArray11;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objArray11);
    }

    @Test
    public void test509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test509");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        boolean boolean13 = pilha11.vazia();
        boolean boolean14 = pilha11.vazia();
        boolean boolean15 = pilha11.vazia();
        pilha11.empilha((java.lang.Object) "hi!");
        java.lang.Object obj18 = pilha11.desempilha();
        pilha0.empilha((java.lang.Object) pilha11);
        pilha11.empilha((java.lang.Object) 'a');
        int int22 = pilha11.tamanho();
        int int23 = pilha11.topo;
        int int24 = pilha11.tamanho();
        ds.Pilha pilha25 = new ds.Pilha();
        java.lang.Object[] objArray26 = pilha25.item;
        java.lang.Object[] objArray31 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha25.item = objArray31;
        boolean boolean33 = pilha25.vazia();
        java.lang.Object[] objArray34 = pilha25.item;
        ds.Pilha pilha35 = new ds.Pilha();
        java.lang.Object[] objArray36 = pilha35.item;
        java.lang.Object[] objArray41 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha35.item = objArray41;
        java.lang.Object[] objArray43 = pilha35.item;
        java.lang.Object[] objArray44 = pilha35.item;
        pilha25.item = objArray44;
        pilha25.topo = (short) 1;
        int int48 = pilha25.tamanho();
        pilha11.empilha((java.lang.Object) pilha25);
        ds.Pilha pilha50 = new ds.Pilha();
        java.lang.Object[] objArray51 = pilha50.item;
        java.lang.Object[] objArray56 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha50.item = objArray56;
        pilha11.item = objArray56;
        ds.Pilha pilha59 = new ds.Pilha();
        java.lang.Object[] objArray60 = pilha59.item;
        int int61 = pilha59.topo;
        int int62 = pilha59.topo;
        int int63 = pilha59.tamanho();
        ds.Pilha pilha64 = new ds.Pilha();
        java.lang.Object[] objArray65 = pilha64.item;
        java.lang.Object[] objArray70 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha64.item = objArray70;
        java.lang.Object[] objArray72 = pilha64.item;
        pilha59.item = objArray72;
        pilha59.topo = (byte) 10;
        pilha59.topo = (-1);
        java.lang.Object[] objArray78 = pilha59.item;
        pilha59.topo = '4';
        int int81 = pilha59.topo;
        int int82 = pilha59.topo;
        pilha11.empilha((java.lang.Object) int82);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[#, 0, 52, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[#, 0, 52, 1]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 52 + "'", int82 == 52);
    }

    @Test
    public void test510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test510");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        pilha0.topo = (short) -1;
        int int10 = pilha0.tamanho();
        int int11 = pilha0.topo;
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        int int14 = pilha12.topo;
        int int15 = pilha12.topo;
        int int16 = pilha12.tamanho();
        ds.Pilha pilha17 = new ds.Pilha();
        java.lang.Object[] objArray18 = pilha17.item;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha17.item = objArray23;
        java.lang.Object[] objArray25 = pilha17.item;
        java.lang.Object[] objArray26 = pilha17.item;
        java.lang.Object[] objArray27 = pilha17.item;
        pilha12.item = objArray27;
        pilha0.item = objArray27;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[#, 0, 4, 1]");
    }

    @Test
    public void test511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test511");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        java.lang.Object obj5 = pilha0.desempilha();
        int int6 = pilha0.topo;
        pilha0.topo = 100;
        int int9 = pilha0.tamanho();
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        boolean boolean12 = pilha10.vazia();
        boolean boolean13 = pilha10.vazia();
        boolean boolean14 = pilha10.vazia();
        pilha10.empilha((java.lang.Object) "hi!");
        pilha10.topo = 10;
        ds.Pilha pilha19 = new ds.Pilha();
        java.lang.Object[] objArray20 = pilha19.item;
        java.lang.Object[] objArray25 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha19.item = objArray25;
        ds.Pilha pilha27 = new ds.Pilha();
        java.lang.Object[] objArray28 = pilha27.item;
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        java.lang.Object[] objArray35 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha29.item = objArray35;
        pilha27.item = objArray35;
        pilha19.item = objArray35;
        pilha10.item = objArray35;
        pilha0.item = objArray35;
        int int41 = pilha0.tamanho();
        java.lang.Class<?> wildcardClass42 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test512");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        ds.Pilha pilha3 = new ds.Pilha();
        java.lang.Object[] objArray4 = pilha3.item;
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        pilha3.item = objArray11;
        pilha0.empilha((java.lang.Object) objArray11);
        int int15 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test513");
        ds.Pilha pilha0 = new ds.Pilha();
        int int1 = pilha0.tamanho();
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        java.lang.Object[] objArray10 = pilha2.item;
        java.lang.Object[] objArray11 = pilha2.item;
        pilha0.item = objArray11;
        ds.Pilha pilha13 = new ds.Pilha();
        java.lang.Object[] objArray14 = pilha13.item;
        boolean boolean15 = pilha13.vazia();
        boolean boolean16 = pilha13.vazia();
        boolean boolean17 = pilha13.vazia();
        pilha13.empilha((java.lang.Object) "hi!");
        java.lang.Object obj20 = pilha13.desempilha();
        java.lang.Object[] objArray21 = pilha13.item;
        pilha0.empilha((java.lang.Object) objArray21);
        boolean boolean23 = pilha0.vazia();
        java.lang.Object[] objArray24 = pilha0.item;
        java.lang.Object obj25 = pilha0.desempilha();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "hi!" + "'", obj20, "hi!");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test514");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        pilha0.topo = (short) -1;
        boolean boolean10 = pilha0.vazia();
        java.lang.Object[] objArray11 = pilha0.item;
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        java.lang.Object[] objArray20 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha14.item = objArray20;
        pilha12.item = objArray20;
        ds.Pilha pilha23 = new ds.Pilha();
        java.lang.Object[] objArray24 = pilha23.item;
        boolean boolean25 = pilha23.vazia();
        boolean boolean26 = pilha23.vazia();
        boolean boolean27 = pilha23.vazia();
        pilha23.empilha((java.lang.Object) "hi!");
        java.lang.Object obj30 = pilha23.desempilha();
        pilha12.empilha((java.lang.Object) pilha23);
        pilha23.empilha((java.lang.Object) 'a');
        int int34 = pilha23.tamanho();
        int int35 = pilha23.topo;
        int int36 = pilha23.tamanho();
        ds.Pilha pilha37 = new ds.Pilha();
        java.lang.Object[] objArray38 = pilha37.item;
        java.lang.Object[] objArray43 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha37.item = objArray43;
        boolean boolean45 = pilha37.vazia();
        java.lang.Object[] objArray46 = pilha37.item;
        ds.Pilha pilha47 = new ds.Pilha();
        java.lang.Object[] objArray48 = pilha47.item;
        java.lang.Object[] objArray53 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha47.item = objArray53;
        java.lang.Object[] objArray55 = pilha47.item;
        java.lang.Object[] objArray56 = pilha47.item;
        pilha37.item = objArray56;
        pilha37.topo = (short) 1;
        int int60 = pilha37.tamanho();
        pilha23.empilha((java.lang.Object) pilha37);
        // The following exception was thrown during execution in test generation
        try {
            pilha0.empilha((java.lang.Object) pilha23);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "hi!" + "'", obj30, "hi!");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
    }

    @Test
    public void test515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test515");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        int int10 = pilha8.topo;
        int int11 = pilha8.topo;
        int int12 = pilha8.tamanho();
        ds.Pilha pilha13 = new ds.Pilha();
        java.lang.Object[] objArray14 = pilha13.item;
        java.lang.Object[] objArray19 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha13.item = objArray19;
        java.lang.Object[] objArray21 = pilha13.item;
        java.lang.Object[] objArray22 = pilha13.item;
        java.lang.Object[] objArray23 = pilha13.item;
        pilha8.item = objArray23;
        pilha0.item = objArray23;
        pilha0.empilha((java.lang.Object) (short) -1);
        java.lang.Object[] objArray28 = pilha0.item;
        int int29 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[-1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[-1, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[-1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[-1, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test516");
        ds.Pilha pilha0 = new ds.Pilha();
        int int1 = pilha0.tamanho();
        int int2 = pilha0.tamanho();
        int int3 = pilha0.topo;
        pilha0.empilha((java.lang.Object) 100.0d);
        pilha0.topo = 9;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test517");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        int int12 = pilha10.topo;
        int int13 = pilha10.topo;
        int int14 = pilha10.tamanho();
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        java.lang.Object[] objArray21 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha15.item = objArray21;
        java.lang.Object[] objArray23 = pilha15.item;
        java.lang.Object[] objArray24 = pilha15.item;
        java.lang.Object[] objArray25 = pilha15.item;
        pilha10.item = objArray25;
        pilha0.empilha((java.lang.Object) pilha10);
        java.lang.Object[] objArray28 = pilha10.item;
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        int int31 = pilha29.topo;
        int int32 = pilha29.topo;
        int int33 = pilha29.tamanho();
        ds.Pilha pilha34 = new ds.Pilha();
        java.lang.Object[] objArray35 = pilha34.item;
        java.lang.Object[] objArray40 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha34.item = objArray40;
        java.lang.Object[] objArray42 = pilha34.item;
        pilha29.item = objArray42;
        pilha29.topo = (byte) 10;
        pilha29.topo = (short) -1;
        pilha10.empilha((java.lang.Object) (short) -1);
        pilha10.topo = (short) -1;
        int int51 = pilha10.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[-1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[-1, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[-1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[-1, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[-1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[-1, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test518");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        boolean boolean13 = pilha11.vazia();
        boolean boolean14 = pilha11.vazia();
        boolean boolean15 = pilha11.vazia();
        pilha11.empilha((java.lang.Object) "hi!");
        java.lang.Object obj18 = pilha11.desempilha();
        pilha0.empilha((java.lang.Object) pilha11);
        pilha11.empilha((java.lang.Object) 'a');
        int int22 = pilha11.tamanho();
        int int23 = pilha11.topo;
        int int24 = pilha11.tamanho();
        ds.Pilha pilha25 = new ds.Pilha();
        java.lang.Object[] objArray26 = pilha25.item;
        java.lang.Object[] objArray31 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha25.item = objArray31;
        boolean boolean33 = pilha25.vazia();
        java.lang.Object[] objArray34 = pilha25.item;
        ds.Pilha pilha35 = new ds.Pilha();
        java.lang.Object[] objArray36 = pilha35.item;
        java.lang.Object[] objArray41 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha35.item = objArray41;
        java.lang.Object[] objArray43 = pilha35.item;
        java.lang.Object[] objArray44 = pilha35.item;
        pilha25.item = objArray44;
        pilha25.topo = (short) 1;
        int int48 = pilha25.tamanho();
        pilha11.empilha((java.lang.Object) pilha25);
        pilha25.topo = ' ';
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
    }

    @Test
    public void test519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test519");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        java.lang.Object obj5 = pilha0.desempilha();
        ds.Pilha pilha6 = new ds.Pilha();
        java.lang.Object[] objArray7 = pilha6.item;
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        java.lang.Object[] objArray14 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha8.item = objArray14;
        pilha6.item = objArray14;
        pilha0.item = objArray14;
        ds.Pilha pilha18 = new ds.Pilha();
        java.lang.Object[] objArray19 = pilha18.item;
        int int20 = pilha18.topo;
        pilha18.topo = 1;
        int int23 = pilha18.tamanho();
        java.lang.Object[] objArray24 = pilha18.item;
        pilha0.item = objArray24;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(objArray24);
    }

    @Test
    public void test520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test520");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        pilha0.topo = 100;
        ds.Pilha pilha6 = new ds.Pilha();
        java.lang.Object[] objArray7 = pilha6.item;
        java.lang.Object[] objArray12 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha6.item = objArray12;
        java.lang.Object[] objArray14 = pilha6.item;
        java.lang.Object[] objArray15 = pilha6.item;
        java.lang.Object[] objArray16 = pilha6.item;
        pilha0.item = objArray16;
        ds.Pilha pilha18 = new ds.Pilha();
        java.lang.Object[] objArray19 = pilha18.item;
        int int20 = pilha18.topo;
        pilha18.empilha((java.lang.Object) '4');
        int int23 = pilha18.tamanho();
        ds.Pilha pilha24 = new ds.Pilha();
        java.lang.Object[] objArray25 = pilha24.item;
        java.lang.Object[] objArray30 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha24.item = objArray30;
        ds.Pilha pilha32 = new ds.Pilha();
        java.lang.Object[] objArray33 = pilha32.item;
        int int34 = pilha32.topo;
        int int35 = pilha32.topo;
        int int36 = pilha32.tamanho();
        ds.Pilha pilha37 = new ds.Pilha();
        java.lang.Object[] objArray38 = pilha37.item;
        java.lang.Object[] objArray43 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha37.item = objArray43;
        java.lang.Object[] objArray45 = pilha37.item;
        java.lang.Object[] objArray46 = pilha37.item;
        java.lang.Object[] objArray47 = pilha37.item;
        pilha32.item = objArray47;
        pilha24.item = objArray47;
        pilha18.item = objArray47;
        pilha18.topo = 'a';
        java.lang.Class<?> wildcardClass53 = pilha18.getClass();
        // The following exception was thrown during execution in test generation
        try {
            pilha0.empilha((java.lang.Object) pilha18);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test521");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        int int4 = pilha0.tamanho();
        java.lang.Object[] objArray5 = pilha0.item;
        java.lang.Class<?> wildcardClass6 = objArray5.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test522");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.topo = (short) 1;
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        int int18 = pilha15.topo;
        int int19 = pilha15.tamanho();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        java.lang.Object[] objArray28 = pilha20.item;
        java.lang.Object[] objArray29 = pilha20.item;
        java.lang.Object[] objArray30 = pilha20.item;
        pilha15.item = objArray30;
        pilha5.empilha((java.lang.Object) pilha15);
        boolean boolean33 = pilha15.vazia();
        pilha0.empilha((java.lang.Object) boolean33);
        java.lang.Object[] objArray35 = pilha0.item;
        java.lang.Class<?> wildcardClass36 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test523");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.topo = (byte) 1;
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        int int7 = pilha5.topo;
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        int int10 = pilha8.topo;
        int int11 = pilha8.topo;
        int int12 = pilha8.tamanho();
        ds.Pilha pilha13 = new ds.Pilha();
        java.lang.Object[] objArray14 = pilha13.item;
        java.lang.Object[] objArray19 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha13.item = objArray19;
        java.lang.Object[] objArray21 = pilha13.item;
        java.lang.Object[] objArray22 = pilha13.item;
        java.lang.Object[] objArray23 = pilha13.item;
        pilha8.item = objArray23;
        boolean boolean25 = pilha8.vazia();
        int int26 = pilha8.tamanho();
        int int27 = pilha8.tamanho();
        java.lang.Class<?> wildcardClass28 = pilha8.getClass();
        pilha5.empilha((java.lang.Object) wildcardClass28);
        pilha0.empilha((java.lang.Object) pilha5);
        ds.Pilha pilha31 = new ds.Pilha();
        java.lang.Object[] objArray32 = pilha31.item;
        int int33 = pilha31.topo;
        ds.Pilha pilha34 = new ds.Pilha();
        java.lang.Object[] objArray35 = pilha34.item;
        java.lang.Object[] objArray40 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha34.item = objArray40;
        pilha31.empilha((java.lang.Object) pilha34);
        ds.Pilha pilha43 = new ds.Pilha();
        java.lang.Object[] objArray44 = pilha43.item;
        int int45 = pilha43.topo;
        int int46 = pilha43.topo;
        int int47 = pilha43.tamanho();
        int int48 = pilha43.tamanho();
        java.lang.Object[] objArray49 = pilha43.item;
        pilha34.item = objArray49;
        pilha0.item = objArray49;
        java.lang.Object[] objArray52 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(objArray52);
    }

    @Test
    public void test524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test524");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        boolean boolean4 = pilha0.vazia();
        int int5 = pilha0.topo;
        ds.Pilha pilha6 = new ds.Pilha();
        java.lang.Object[] objArray7 = pilha6.item;
        boolean boolean8 = pilha6.vazia();
        boolean boolean9 = pilha6.vazia();
        int int10 = pilha6.tamanho();
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        int int13 = pilha11.topo;
        int int14 = pilha11.topo;
        int int15 = pilha11.tamanho();
        ds.Pilha pilha16 = new ds.Pilha();
        java.lang.Object[] objArray17 = pilha16.item;
        java.lang.Object[] objArray22 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha16.item = objArray22;
        java.lang.Object[] objArray24 = pilha16.item;
        java.lang.Object[] objArray25 = pilha16.item;
        java.lang.Object[] objArray26 = pilha16.item;
        pilha11.item = objArray26;
        boolean boolean28 = pilha11.vazia();
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        int int31 = pilha29.topo;
        pilha29.topo = 1;
        int int34 = pilha29.tamanho();
        java.lang.Object[] objArray35 = pilha29.item;
        java.lang.Object[] objArray36 = pilha29.item;
        pilha11.item = objArray36;
        pilha6.item = objArray36;
        pilha0.item = objArray36;
        ds.Pilha pilha40 = new ds.Pilha();
        java.lang.Object[] objArray41 = pilha40.item;
        boolean boolean42 = pilha40.vazia();
        boolean boolean43 = pilha40.vazia();
        java.lang.Object[] objArray44 = pilha40.item;
        pilha0.item = objArray44;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objArray44);
    }

    @Test
    public void test525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test525");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        boolean boolean4 = pilha0.vazia();
        java.lang.Object[] objArray5 = pilha0.item;
        int int6 = pilha0.topo;
        int int7 = pilha0.tamanho();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = pilha0.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: Erro: A pilha esta vazia");
        } catch (java.lang.Exception e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test526");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.topo = (byte) 1;
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        java.lang.Object[] objArray13 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha7.item = objArray13;
        pilha5.item = objArray13;
        ds.Pilha pilha16 = new ds.Pilha();
        java.lang.Object[] objArray17 = pilha16.item;
        java.lang.Object[] objArray22 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha16.item = objArray22;
        java.lang.Object[] objArray24 = pilha16.item;
        java.lang.Object[] objArray25 = pilha16.item;
        java.lang.Object[] objArray26 = pilha16.item;
        pilha5.item = objArray26;
        java.lang.Class<?> wildcardClass28 = objArray26.getClass();
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        int int31 = pilha29.tamanho();
        ds.Pilha pilha35 = new ds.Pilha();
        java.lang.Object[] objArray36 = pilha35.item;
        int int37 = pilha35.topo;
        int int38 = pilha35.topo;
        int int39 = pilha35.tamanho();
        ds.Pilha pilha40 = new ds.Pilha();
        java.lang.Object[] objArray41 = pilha40.item;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha40.item = objArray46;
        java.lang.Object[] objArray48 = pilha40.item;
        java.lang.Object[] objArray49 = pilha40.item;
        java.lang.Object[] objArray50 = pilha40.item;
        pilha35.item = objArray50;
        boolean boolean52 = pilha35.vazia();
        int int53 = pilha35.tamanho();
        int int54 = pilha35.tamanho();
        java.lang.Class<?> wildcardClass55 = pilha35.getClass();
        java.lang.Object[] objArray56 = new java.lang.Object[] { objArray26, int31, 10.0d, (short) 100, 1L, pilha35 };
        pilha0.item = objArray56;
        java.lang.Object obj58 = pilha0.desempilha();
        ds.Pilha pilha59 = new ds.Pilha();
        java.lang.Object[] objArray60 = pilha59.item;
        int int61 = pilha59.topo;
        pilha59.topo = 1;
        int int64 = pilha59.tamanho();
        java.lang.Object[] objArray65 = pilha59.item;
        java.lang.Object[] objArray66 = pilha59.item;
        pilha0.item = objArray66;
        boolean boolean68 = pilha0.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test527");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        pilha0.topo = 100;
        boolean boolean6 = pilha0.vazia();
        int int7 = pilha0.topo;
        boolean boolean8 = pilha0.vazia();
        java.lang.Class<?> wildcardClass9 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test528");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        java.lang.Object obj11 = null;
        pilha0.empilha(obj11);
        java.lang.Object[] objArray13 = pilha0.item;
        java.lang.Object[] objArray14 = pilha0.item;
        int int15 = pilha0.tamanho();
        java.lang.Object[] objArray16 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[null, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[null, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[null, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[null, 0, 4, 1]");
    }

    @Test
    public void test529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test529");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        pilha0.topo = 100;
        ds.Pilha pilha6 = new ds.Pilha();
        java.lang.Object[] objArray7 = pilha6.item;
        java.lang.Object[] objArray12 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha6.item = objArray12;
        java.lang.Object[] objArray14 = pilha6.item;
        java.lang.Object[] objArray15 = pilha6.item;
        java.lang.Object[] objArray16 = pilha6.item;
        pilha0.item = objArray16;
        boolean boolean18 = pilha0.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test530");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        pilha0.topo = 100;
        java.lang.Object obj6 = pilha0.desempilha();
        boolean boolean7 = pilha0.vazia();
        pilha0.topo = 2;
        java.lang.Class<?> wildcardClass10 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test531");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        java.lang.Object obj5 = pilha0.desempilha();
        int int6 = pilha0.topo;
        int int7 = pilha0.topo;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        int int10 = pilha0.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test532");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        int int18 = pilha0.tamanho();
        java.lang.Object[] objArray19 = pilha0.item;
        boolean boolean20 = pilha0.vazia();
        pilha0.topo = '#';
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test533");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        boolean boolean4 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) "hi!");
        pilha0.topo = 10;
        ds.Pilha pilha9 = new ds.Pilha();
        java.lang.Object[] objArray10 = pilha9.item;
        java.lang.Object[] objArray15 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha9.item = objArray15;
        ds.Pilha pilha17 = new ds.Pilha();
        java.lang.Object[] objArray18 = pilha17.item;
        ds.Pilha pilha19 = new ds.Pilha();
        java.lang.Object[] objArray20 = pilha19.item;
        java.lang.Object[] objArray25 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha19.item = objArray25;
        pilha17.item = objArray25;
        pilha9.item = objArray25;
        pilha0.item = objArray25;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = pilha0.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
    }

    @Test
    public void test534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test534");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        java.lang.Object obj11 = null;
        pilha0.empilha(obj11);
        java.lang.Object obj13 = pilha0.desempilha();
        pilha0.topo = 0;
        pilha0.topo = 2;
        pilha0.topo = (short) 0;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[null, 0, 4, 1]");
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test535");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.topo = (byte) 1;
        java.lang.Object obj5 = pilha0.desempilha();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = pilha0.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: Erro: A pilha esta vazia");
        } catch (java.lang.Exception e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj5);
    }

    @Test
    public void test536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test536");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        int int12 = pilha10.topo;
        int int13 = pilha10.topo;
        int int14 = pilha10.tamanho();
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        java.lang.Object[] objArray21 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha15.item = objArray21;
        java.lang.Object[] objArray23 = pilha15.item;
        java.lang.Object[] objArray24 = pilha15.item;
        java.lang.Object[] objArray25 = pilha15.item;
        pilha10.item = objArray25;
        pilha0.empilha((java.lang.Object) pilha10);
        int int28 = pilha10.tamanho();
        int int29 = pilha10.topo;
        ds.Pilha pilha30 = new ds.Pilha();
        java.lang.Object[] objArray31 = pilha30.item;
        ds.Pilha pilha32 = new ds.Pilha();
        java.lang.Object[] objArray33 = pilha32.item;
        java.lang.Object[] objArray38 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha32.item = objArray38;
        pilha30.item = objArray38;
        java.lang.Object obj41 = null;
        pilha30.empilha(obj41);
        java.lang.Object obj43 = pilha30.desempilha();
        pilha30.topo = 0;
        pilha10.empilha((java.lang.Object) pilha30);
        int int47 = pilha10.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[null, 0, 4, 1]");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test537");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        int int18 = pilha0.tamanho();
        java.lang.Object[] objArray19 = pilha0.item;
        int int20 = pilha0.topo;
        pilha0.empilha((java.lang.Object) "");
        ds.Pilha pilha23 = new ds.Pilha();
        java.lang.Object[] objArray24 = pilha23.item;
        boolean boolean25 = pilha23.vazia();
        boolean boolean26 = pilha23.vazia();
        int int27 = pilha23.tamanho();
        pilha0.empilha((java.lang.Object) int27);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test538");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        boolean boolean4 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) "hi!");
        java.lang.Object obj7 = pilha0.desempilha();
        pilha0.topo = (short) 1;
        boolean boolean10 = pilha0.vazia();
        java.lang.Object[] objArray11 = pilha0.item;
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        int int14 = pilha12.topo;
        pilha12.topo = 1;
        int int17 = pilha12.tamanho();
        java.lang.Object[] objArray18 = pilha12.item;
        int int19 = pilha12.topo;
        java.lang.Object[] objArray20 = pilha12.item;
        pilha0.item = objArray20;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(objArray20);
    }

    @Test
    public void test539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test539");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.topo = (short) 1;
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        int int18 = pilha15.topo;
        int int19 = pilha15.tamanho();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        java.lang.Object[] objArray28 = pilha20.item;
        java.lang.Object[] objArray29 = pilha20.item;
        java.lang.Object[] objArray30 = pilha20.item;
        pilha15.item = objArray30;
        pilha5.empilha((java.lang.Object) pilha15);
        boolean boolean33 = pilha15.vazia();
        pilha0.empilha((java.lang.Object) boolean33);
        java.lang.Class<?> wildcardClass35 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test540");
        ds.Pilha pilha0 = new ds.Pilha();
        int int1 = pilha0.tamanho();
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        java.lang.Object[] objArray10 = pilha2.item;
        java.lang.Object[] objArray11 = pilha2.item;
        pilha0.item = objArray11;
        java.lang.Object[] objArray13 = pilha0.item;
        java.lang.Object[] objArray14 = pilha0.item;
        java.lang.Object[] objArray15 = pilha0.item;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = pilha0.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: Erro: A pilha esta vazia");
        } catch (java.lang.Exception e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
    }

    @Test
    public void test541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test541");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        pilha0.topo = 2;
        int int10 = pilha0.tamanho();
        java.lang.Object obj11 = pilha0.desempilha();
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        java.lang.Object[] objArray18 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha12.item = objArray18;
        boolean boolean20 = pilha12.vazia();
        java.lang.Object[] objArray21 = pilha12.item;
        ds.Pilha pilha22 = new ds.Pilha();
        java.lang.Object[] objArray23 = pilha22.item;
        java.lang.Object[] objArray28 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha22.item = objArray28;
        java.lang.Object[] objArray30 = pilha22.item;
        java.lang.Object[] objArray31 = pilha22.item;
        pilha12.item = objArray31;
        pilha12.topo = (short) 1;
        pilha0.empilha((java.lang.Object) (short) 1);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 1, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 1, 4, 1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 0 + "'", obj11, (short) 0);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[#, 0, 4, 1]");
    }

    @Test
    public void test542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test542");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = null;
        pilha0.item = objArray9;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        java.lang.Object[] objArray17 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha11.item = objArray17;
        pilha0.item = objArray17;
        int int20 = pilha0.topo;
        ds.Pilha pilha21 = new ds.Pilha();
        java.lang.Object[] objArray22 = pilha21.item;
        int int23 = pilha21.topo;
        int int24 = pilha21.topo;
        int int25 = pilha21.tamanho();
        ds.Pilha pilha26 = new ds.Pilha();
        java.lang.Object[] objArray27 = pilha26.item;
        java.lang.Object[] objArray32 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha26.item = objArray32;
        java.lang.Object[] objArray34 = pilha26.item;
        java.lang.Object[] objArray35 = pilha26.item;
        java.lang.Object[] objArray36 = pilha26.item;
        pilha21.item = objArray36;
        pilha21.topo = (short) -1;
        ds.Pilha pilha40 = new ds.Pilha();
        java.lang.Object[] objArray41 = pilha40.item;
        boolean boolean42 = pilha40.vazia();
        java.lang.Object obj43 = null;
        pilha40.empilha(obj43);
        java.lang.Object[] objArray45 = pilha40.item;
        int int46 = pilha40.tamanho();
        boolean boolean47 = pilha40.vazia();
        java.lang.Object[] objArray48 = pilha40.item;
        pilha21.item = objArray48;
        pilha0.item = objArray48;
        ds.Pilha pilha51 = new ds.Pilha();
        java.lang.Object[] objArray52 = pilha51.item;
        int int53 = pilha51.tamanho();
        pilha51.empilha((java.lang.Object) 0.0d);
        java.lang.Object[] objArray56 = pilha51.item;
        boolean boolean57 = pilha51.vazia();
        pilha51.topo = 35;
        java.lang.Object[] objArray60 = pilha51.item;
        pilha0.item = objArray60;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray60);
    }

    @Test
    public void test543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test543");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        int int5 = pilha0.topo;
        java.lang.Object obj6 = pilha0.desempilha();
        pilha0.empilha((java.lang.Object) false);
        boolean boolean9 = pilha0.vazia();
        java.lang.Object obj10 = pilha0.desempilha();
        pilha0.topo = '#';
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + false + "'", obj10, false);
    }

    @Test
    public void test544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test544");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        boolean boolean13 = pilha11.vazia();
        boolean boolean14 = pilha11.vazia();
        boolean boolean15 = pilha11.vazia();
        pilha11.empilha((java.lang.Object) "hi!");
        java.lang.Object obj18 = pilha11.desempilha();
        pilha0.empilha((java.lang.Object) pilha11);
        pilha11.empilha((java.lang.Object) 'a');
        int int22 = pilha11.topo;
        java.lang.Object obj23 = pilha11.desempilha();
        ds.Pilha pilha24 = new ds.Pilha();
        java.lang.Object[] objArray25 = pilha24.item;
        ds.Pilha pilha26 = new ds.Pilha();
        java.lang.Object[] objArray27 = pilha26.item;
        java.lang.Object[] objArray32 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha26.item = objArray32;
        pilha24.item = objArray32;
        ds.Pilha pilha35 = new ds.Pilha();
        java.lang.Object[] objArray36 = pilha35.item;
        boolean boolean37 = pilha35.vazia();
        boolean boolean38 = pilha35.vazia();
        boolean boolean39 = pilha35.vazia();
        pilha35.empilha((java.lang.Object) "hi!");
        java.lang.Object obj42 = pilha35.desempilha();
        pilha24.empilha((java.lang.Object) pilha35);
        pilha35.topo = (byte) 1;
        ds.Pilha pilha46 = new ds.Pilha();
        java.lang.Object[] objArray47 = pilha46.item;
        boolean boolean48 = pilha46.vazia();
        ds.Pilha pilha49 = new ds.Pilha();
        java.lang.Object[] objArray50 = pilha49.item;
        ds.Pilha pilha51 = new ds.Pilha();
        java.lang.Object[] objArray52 = pilha51.item;
        java.lang.Object[] objArray57 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha51.item = objArray57;
        pilha49.item = objArray57;
        pilha46.empilha((java.lang.Object) objArray57);
        pilha35.item = objArray57;
        pilha11.item = objArray57;
        ds.Pilha pilha63 = new ds.Pilha();
        int int64 = pilha63.tamanho();
        ds.Pilha pilha65 = new ds.Pilha();
        java.lang.Object[] objArray66 = pilha65.item;
        java.lang.Object[] objArray71 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha65.item = objArray71;
        java.lang.Object[] objArray73 = pilha65.item;
        java.lang.Object[] objArray74 = pilha65.item;
        pilha63.item = objArray74;
        ds.Pilha pilha76 = new ds.Pilha();
        java.lang.Object[] objArray77 = pilha76.item;
        boolean boolean78 = pilha76.vazia();
        boolean boolean79 = pilha76.vazia();
        boolean boolean80 = pilha76.vazia();
        pilha76.empilha((java.lang.Object) "hi!");
        java.lang.Object obj83 = pilha76.desempilha();
        java.lang.Object[] objArray84 = pilha76.item;
        pilha63.empilha((java.lang.Object) objArray84);
        boolean boolean86 = pilha63.vazia();
        java.lang.Object[] objArray87 = pilha63.item;
        pilha11.item = objArray87;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 'a' + "'", obj23, 'a');
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "hi!" + "'", obj42, "hi!");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "hi!" + "'", obj83, "hi!");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objArray87);
    }

    @Test
    public void test545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test545");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        boolean boolean13 = pilha11.vazia();
        boolean boolean14 = pilha11.vazia();
        boolean boolean15 = pilha11.vazia();
        pilha11.empilha((java.lang.Object) "hi!");
        java.lang.Object obj18 = pilha11.desempilha();
        pilha0.empilha((java.lang.Object) pilha11);
        pilha11.topo = 'a';
        int int22 = pilha11.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
    }

    @Test
    public void test546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test546");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        java.lang.Object[] objArray4 = pilha0.item;
        java.lang.Object[] objArray5 = pilha0.item;
        int int6 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test547");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        pilha0.empilha((java.lang.Object) '4');
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        int int18 = pilha15.topo;
        int int19 = pilha15.tamanho();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        java.lang.Object[] objArray28 = pilha20.item;
        java.lang.Object[] objArray29 = pilha20.item;
        java.lang.Object[] objArray30 = pilha20.item;
        pilha15.item = objArray30;
        pilha5.empilha((java.lang.Object) pilha15);
        pilha0.empilha((java.lang.Object) pilha5);
        boolean boolean34 = pilha5.vazia();
        java.lang.Object obj35 = pilha5.desempilha();
        int int36 = pilha5.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test548");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        int int12 = pilha10.topo;
        int int13 = pilha10.topo;
        int int14 = pilha10.tamanho();
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        java.lang.Object[] objArray21 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha15.item = objArray21;
        java.lang.Object[] objArray23 = pilha15.item;
        java.lang.Object[] objArray24 = pilha15.item;
        java.lang.Object[] objArray25 = pilha15.item;
        pilha10.item = objArray25;
        pilha0.empilha((java.lang.Object) pilha10);
        java.lang.Object[] objArray28 = pilha10.item;
        pilha10.topo = 1;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
    }

    @Test
    public void test549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test549");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.topo = (byte) 1;
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        java.lang.Object[] objArray13 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha7.item = objArray13;
        pilha5.item = objArray13;
        ds.Pilha pilha16 = new ds.Pilha();
        java.lang.Object[] objArray17 = pilha16.item;
        java.lang.Object[] objArray22 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha16.item = objArray22;
        java.lang.Object[] objArray24 = pilha16.item;
        java.lang.Object[] objArray25 = pilha16.item;
        java.lang.Object[] objArray26 = pilha16.item;
        pilha5.item = objArray26;
        java.lang.Class<?> wildcardClass28 = objArray26.getClass();
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        int int31 = pilha29.tamanho();
        ds.Pilha pilha35 = new ds.Pilha();
        java.lang.Object[] objArray36 = pilha35.item;
        int int37 = pilha35.topo;
        int int38 = pilha35.topo;
        int int39 = pilha35.tamanho();
        ds.Pilha pilha40 = new ds.Pilha();
        java.lang.Object[] objArray41 = pilha40.item;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha40.item = objArray46;
        java.lang.Object[] objArray48 = pilha40.item;
        java.lang.Object[] objArray49 = pilha40.item;
        java.lang.Object[] objArray50 = pilha40.item;
        pilha35.item = objArray50;
        boolean boolean52 = pilha35.vazia();
        int int53 = pilha35.tamanho();
        int int54 = pilha35.tamanho();
        java.lang.Class<?> wildcardClass55 = pilha35.getClass();
        java.lang.Object[] objArray56 = new java.lang.Object[] { objArray26, int31, 10.0d, (short) 100, 1L, pilha35 };
        pilha0.item = objArray56;
        java.lang.Object obj58 = pilha0.desempilha();
        ds.Pilha pilha59 = new ds.Pilha();
        java.lang.Object[] objArray60 = pilha59.item;
        int int61 = pilha59.topo;
        pilha59.topo = 1;
        int int64 = pilha59.tamanho();
        java.lang.Object[] objArray65 = pilha59.item;
        java.lang.Object[] objArray66 = pilha59.item;
        pilha0.item = objArray66;
        int int68 = pilha0.topo;
        java.lang.Class<?> wildcardClass69 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test550");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) (byte) 10);
        java.lang.Object obj5 = null;
        pilha0.empilha(obj5);
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        boolean boolean9 = pilha7.vazia();
        java.lang.Object obj10 = null;
        pilha7.empilha(obj10);
        int int12 = pilha7.topo;
        int int13 = pilha7.tamanho();
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        boolean boolean16 = pilha14.vazia();
        ds.Pilha pilha17 = new ds.Pilha();
        java.lang.Object[] objArray18 = pilha17.item;
        ds.Pilha pilha19 = new ds.Pilha();
        java.lang.Object[] objArray20 = pilha19.item;
        java.lang.Object[] objArray25 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha19.item = objArray25;
        pilha17.item = objArray25;
        pilha14.empilha((java.lang.Object) objArray25);
        pilha7.item = objArray25;
        pilha0.empilha((java.lang.Object) pilha7);
        ds.Pilha pilha31 = new ds.Pilha();
        java.lang.Object[] objArray32 = pilha31.item;
        ds.Pilha pilha33 = new ds.Pilha();
        java.lang.Object[] objArray34 = pilha33.item;
        java.lang.Object[] objArray39 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha33.item = objArray39;
        pilha31.item = objArray39;
        ds.Pilha pilha42 = new ds.Pilha();
        java.lang.Object[] objArray43 = pilha42.item;
        java.lang.Object[] objArray48 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha42.item = objArray48;
        java.lang.Object[] objArray50 = pilha42.item;
        java.lang.Object[] objArray51 = pilha42.item;
        java.lang.Object[] objArray52 = pilha42.item;
        pilha31.item = objArray52;
        java.lang.Class<?> wildcardClass54 = objArray52.getClass();
        pilha7.empilha((java.lang.Object) objArray52);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, [#, 0, 4, 1], 4, 1]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test551");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        java.lang.Object obj11 = null;
        pilha0.empilha(obj11);
        java.lang.Object obj13 = pilha0.desempilha();
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        ds.Pilha pilha16 = new ds.Pilha();
        java.lang.Object[] objArray17 = pilha16.item;
        java.lang.Object[] objArray22 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha16.item = objArray22;
        pilha14.item = objArray22;
        java.lang.Object obj25 = null;
        pilha14.empilha(obj25);
        java.lang.Object[] objArray27 = pilha14.item;
        pilha0.item = objArray27;
        int int29 = pilha0.tamanho();
        int int30 = pilha0.topo;
        ds.Pilha pilha31 = new ds.Pilha();
        java.lang.Object[] objArray32 = pilha31.item;
        java.lang.Object[] objArray37 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha31.item = objArray37;
        java.lang.Object[] objArray39 = pilha31.item;
        java.lang.Object[] objArray40 = pilha31.item;
        java.lang.Object[] objArray41 = pilha31.item;
        boolean boolean42 = pilha31.vazia();
        pilha31.empilha((java.lang.Object) 10.0d);
        ds.Pilha pilha45 = new ds.Pilha();
        java.lang.Object[] objArray46 = pilha45.item;
        boolean boolean47 = pilha45.vazia();
        boolean boolean48 = pilha45.vazia();
        java.lang.Object[] objArray49 = pilha45.item;
        pilha31.item = objArray49;
        pilha0.empilha((java.lang.Object) pilha31);
        java.lang.Object obj52 = pilha31.desempilha();
        ds.Pilha pilha53 = new ds.Pilha();
        java.lang.Object[] objArray54 = pilha53.item;
        int int55 = pilha53.topo;
        int int56 = pilha53.topo;
        int int57 = pilha53.tamanho();
        ds.Pilha pilha58 = new ds.Pilha();
        java.lang.Object[] objArray59 = pilha58.item;
        java.lang.Object[] objArray64 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha58.item = objArray64;
        java.lang.Object[] objArray66 = pilha58.item;
        pilha53.item = objArray66;
        pilha31.item = objArray66;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[null, 0, 4, 1]");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[#, 0, 4, 1]");
    }

    @Test
    public void test552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test552");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.tamanho();
        pilha0.empilha((java.lang.Object) 0.0d);
        java.lang.Object[] objArray5 = pilha0.item;
        boolean boolean6 = pilha0.vazia();
        pilha0.topo = 35;
        java.lang.Object[] objArray9 = pilha0.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        boolean boolean12 = pilha10.vazia();
        boolean boolean13 = pilha10.vazia();
        pilha10.topo = 100;
        java.lang.Object obj16 = pilha10.desempilha();
        java.lang.Object[] objArray17 = pilha10.item;
        pilha0.empilha((java.lang.Object) objArray17);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objArray17);
    }

    @Test
    public void test553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test553");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        boolean boolean4 = pilha0.vazia();
        java.lang.Object[] objArray5 = pilha0.item;
        int int6 = pilha0.topo;
        boolean boolean7 = pilha0.vazia();
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        java.lang.Object[] objArray16 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha10.item = objArray16;
        pilha8.item = objArray16;
        ds.Pilha pilha19 = new ds.Pilha();
        java.lang.Object[] objArray20 = pilha19.item;
        java.lang.Object[] objArray25 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha19.item = objArray25;
        java.lang.Object[] objArray27 = pilha19.item;
        java.lang.Object[] objArray28 = pilha19.item;
        java.lang.Object[] objArray29 = pilha19.item;
        pilha8.item = objArray29;
        pilha0.item = objArray29;
        ds.Pilha pilha32 = new ds.Pilha();
        java.lang.Object[] objArray33 = pilha32.item;
        boolean boolean34 = pilha32.vazia();
        boolean boolean35 = pilha32.vazia();
        boolean boolean36 = pilha32.vazia();
        pilha32.empilha((java.lang.Object) "hi!");
        java.lang.Object obj39 = pilha32.desempilha();
        pilha32.topo = (short) 1;
        boolean boolean42 = pilha32.vazia();
        java.lang.Object[] objArray43 = pilha32.item;
        pilha0.empilha((java.lang.Object) objArray43);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "hi!" + "'", obj39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
    }

    @Test
    public void test554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test554");
        ds.Pilha pilha0 = new ds.Pilha();
        int int1 = pilha0.tamanho();
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        java.lang.Object[] objArray10 = pilha2.item;
        java.lang.Object[] objArray11 = pilha2.item;
        pilha0.item = objArray11;
        java.lang.Object[] objArray13 = pilha0.item;
        java.lang.Object[] objArray14 = pilha0.item;
        java.lang.Object[] objArray15 = pilha0.item;
        int int16 = pilha0.topo;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test555");
        ds.Pilha pilha0 = new ds.Pilha();
        boolean boolean1 = pilha0.vazia();
        int int2 = pilha0.tamanho();
        java.lang.Object[] objArray3 = pilha0.item;
        ds.Pilha pilha4 = new ds.Pilha();
        java.lang.Object[] objArray5 = pilha4.item;
        boolean boolean6 = pilha4.vazia();
        pilha4.topo = (byte) 1;
        int int9 = pilha4.tamanho();
        java.lang.Object obj10 = pilha4.desempilha();
        int int11 = pilha4.tamanho();
        java.lang.Object[] objArray12 = pilha4.item;
        pilha0.item = objArray12;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objArray12);
    }

    @Test
    public void test556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test556");
        ds.Pilha pilha0 = new ds.Pilha();
        int int1 = pilha0.tamanho();
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        java.lang.Object[] objArray10 = pilha2.item;
        java.lang.Object[] objArray11 = pilha2.item;
        pilha0.item = objArray11;
        boolean boolean13 = pilha0.vazia();
        pilha0.topo = (short) 0;
        int int16 = pilha0.tamanho();
        int int17 = pilha0.tamanho();
        pilha0.topo = 0;
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        boolean boolean22 = pilha20.vazia();
        pilha20.topo = (byte) 1;
        java.lang.Object[] objArray25 = pilha20.item;
        pilha0.empilha((java.lang.Object) objArray25);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objArray25);
    }

    @Test
    public void test557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test557");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        pilha0.topo = (short) -1;
        pilha0.topo = (-1);
        pilha0.topo = 'a';
        java.lang.Object[] objArray14 = null;
        pilha0.item = objArray14;
        int int16 = pilha0.tamanho();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = pilha0.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 97 + "'", int16 == 97);
    }

    @Test
    public void test558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test558");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        pilha0.item = objArray13;
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        boolean boolean17 = pilha15.vazia();
        boolean boolean18 = pilha15.vazia();
        boolean boolean19 = pilha15.vazia();
        pilha15.empilha((java.lang.Object) 1.0f);
        boolean boolean22 = pilha15.vazia();
        ds.Pilha pilha23 = new ds.Pilha();
        java.lang.Object[] objArray24 = pilha23.item;
        java.lang.Object[] objArray29 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha23.item = objArray29;
        ds.Pilha pilha31 = new ds.Pilha();
        java.lang.Object[] objArray32 = pilha31.item;
        ds.Pilha pilha33 = new ds.Pilha();
        java.lang.Object[] objArray34 = pilha33.item;
        java.lang.Object[] objArray39 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha33.item = objArray39;
        pilha31.item = objArray39;
        pilha23.item = objArray39;
        pilha15.item = objArray39;
        pilha0.item = objArray39;
        int int45 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test559");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        pilha0.item = objArray13;
        pilha0.topo = (byte) 10;
        pilha0.topo = (-1);
        java.lang.Object[] objArray19 = pilha0.item;
        pilha0.topo = '4';
        int int22 = pilha0.topo;
        ds.Pilha pilha23 = new ds.Pilha();
        java.lang.Object[] objArray24 = pilha23.item;
        int int25 = pilha23.topo;
        int int26 = pilha23.topo;
        int int27 = pilha23.tamanho();
        ds.Pilha pilha28 = new ds.Pilha();
        java.lang.Object[] objArray29 = pilha28.item;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha28.item = objArray34;
        java.lang.Object[] objArray36 = pilha28.item;
        java.lang.Object[] objArray37 = pilha28.item;
        java.lang.Object[] objArray38 = pilha28.item;
        pilha23.item = objArray38;
        boolean boolean40 = pilha23.vazia();
        int int41 = pilha23.tamanho();
        boolean boolean42 = pilha23.vazia();
        int int43 = pilha23.topo;
        java.lang.Object[] objArray44 = pilha23.item;
        ds.Pilha pilha45 = new ds.Pilha();
        java.lang.Object[] objArray46 = pilha45.item;
        int int47 = pilha45.topo;
        int int48 = pilha45.topo;
        int int49 = pilha45.tamanho();
        ds.Pilha pilha50 = new ds.Pilha();
        java.lang.Object[] objArray51 = pilha50.item;
        java.lang.Object[] objArray56 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha50.item = objArray56;
        java.lang.Object[] objArray58 = pilha50.item;
        java.lang.Object[] objArray59 = pilha50.item;
        java.lang.Object[] objArray60 = pilha50.item;
        pilha45.item = objArray60;
        boolean boolean62 = pilha45.vazia();
        int int63 = pilha45.tamanho();
        boolean boolean64 = pilha45.vazia();
        int int65 = pilha45.topo;
        java.lang.Object[] objArray66 = pilha45.item;
        pilha23.empilha((java.lang.Object) objArray66);
        pilha0.item = objArray66;
        java.lang.Class<?> wildcardClass69 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test560");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        ds.Pilha pilha18 = new ds.Pilha();
        java.lang.Object[] objArray19 = pilha18.item;
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        pilha18.item = objArray26;
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        java.lang.Object[] objArray35 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha29.item = objArray35;
        java.lang.Object[] objArray37 = pilha29.item;
        java.lang.Object[] objArray38 = pilha29.item;
        java.lang.Object[] objArray39 = pilha29.item;
        pilha18.item = objArray39;
        pilha0.item = objArray39;
        java.lang.Object[] objArray42 = pilha0.item;
        java.lang.Object[] objArray43 = pilha0.item;
        java.lang.Object[] objArray44 = pilha0.item;
        java.lang.Object[] objArray45 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[#, 0, 4, 1]");
    }

    @Test
    public void test561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test561");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        pilha0.topo = 'a';
        int int6 = pilha0.tamanho();
        java.lang.Object obj7 = pilha0.desempilha();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 97 + "'", int6 == 97);
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test562");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) (byte) 10);
        java.lang.Object obj5 = null;
        pilha0.empilha(obj5);
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        boolean boolean9 = pilha7.vazia();
        java.lang.Object obj10 = null;
        pilha7.empilha(obj10);
        int int12 = pilha7.topo;
        int int13 = pilha7.tamanho();
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        boolean boolean16 = pilha14.vazia();
        ds.Pilha pilha17 = new ds.Pilha();
        java.lang.Object[] objArray18 = pilha17.item;
        ds.Pilha pilha19 = new ds.Pilha();
        java.lang.Object[] objArray20 = pilha19.item;
        java.lang.Object[] objArray25 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha19.item = objArray25;
        pilha17.item = objArray25;
        pilha14.empilha((java.lang.Object) objArray25);
        pilha7.item = objArray25;
        pilha0.empilha((java.lang.Object) pilha7);
        java.lang.Object[] objArray31 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray31);
    }

    @Test
    public void test563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test563");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        java.lang.Object obj5 = pilha0.desempilha();
        int int6 = pilha0.topo;
        int int7 = pilha0.topo;
        java.lang.Object[] objArray8 = pilha0.item;
        int int9 = pilha0.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test564");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        boolean boolean4 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) "hi!");
        pilha0.topo = 10;
        pilha0.topo = 52;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test565");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        java.lang.Object[] objArray10 = pilha0.item;
        boolean boolean11 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) 10.0d);
        int int14 = pilha0.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test566");
        ds.Pilha pilha0 = new ds.Pilha();
        int int1 = pilha0.tamanho();
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        java.lang.Object[] objArray10 = pilha2.item;
        java.lang.Object[] objArray11 = pilha2.item;
        pilha0.item = objArray11;
        java.lang.Object[] objArray13 = pilha0.item;
        int int14 = pilha0.topo;
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        int int18 = pilha15.topo;
        int int19 = pilha15.tamanho();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        java.lang.Object[] objArray28 = pilha20.item;
        java.lang.Object[] objArray29 = pilha20.item;
        java.lang.Object[] objArray30 = pilha20.item;
        pilha15.item = objArray30;
        boolean boolean32 = pilha15.vazia();
        int int33 = pilha15.tamanho();
        boolean boolean34 = pilha15.vazia();
        int int35 = pilha15.topo;
        int int36 = pilha15.tamanho();
        pilha0.empilha((java.lang.Object) int36);
        ds.Pilha pilha38 = new ds.Pilha();
        java.lang.Object[] objArray39 = pilha38.item;
        java.lang.Object[] objArray44 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha38.item = objArray44;
        java.lang.Object[] objArray46 = pilha38.item;
        java.lang.Object[] objArray47 = null;
        pilha38.item = objArray47;
        ds.Pilha pilha49 = new ds.Pilha();
        java.lang.Object[] objArray50 = pilha49.item;
        java.lang.Object[] objArray55 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha49.item = objArray55;
        pilha38.item = objArray55;
        int int58 = pilha38.tamanho();
        pilha38.topo = 0;
        pilha0.empilha((java.lang.Object) 0);
        java.lang.Object obj62 = pilha0.desempilha();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[0, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
    }

    @Test
    public void test567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test567");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        java.lang.Object[] objArray5 = pilha0.item;
        int int6 = pilha0.tamanho();
        ds.Pilha pilha7 = new ds.Pilha();
        boolean boolean8 = pilha7.vazia();
        ds.Pilha pilha9 = new ds.Pilha();
        java.lang.Object[] objArray10 = pilha9.item;
        int int11 = pilha9.topo;
        int int12 = pilha9.topo;
        int int13 = pilha9.tamanho();
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        java.lang.Object[] objArray20 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha14.item = objArray20;
        java.lang.Object[] objArray22 = pilha14.item;
        pilha9.item = objArray22;
        pilha7.item = objArray22;
        java.lang.Object[] objArray25 = pilha7.item;
        java.lang.Object[] objArray26 = pilha7.item;
        pilha0.item = objArray26;
        java.lang.Object obj28 = pilha0.desempilha();
        int int29 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + '#' + "'", obj28, '#');
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test568");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        java.lang.Object[] objArray10 = pilha0.item;
        boolean boolean11 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) 10.0d);
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        boolean boolean16 = pilha14.vazia();
        boolean boolean17 = pilha14.vazia();
        java.lang.Object[] objArray18 = pilha14.item;
        pilha0.item = objArray18;
        java.lang.Object obj20 = pilha0.desempilha();
        int int21 = pilha0.tamanho();
        java.lang.Object obj22 = null;
        pilha0.empilha(obj22);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test569");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        pilha0.topo = 100;
        boolean boolean6 = pilha0.vazia();
        java.lang.Object obj7 = pilha0.desempilha();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test570");
        ds.Pilha pilha0 = new ds.Pilha();
        ds.Pilha pilha1 = new ds.Pilha();
        java.lang.Object[] objArray2 = pilha1.item;
        boolean boolean3 = pilha1.vazia();
        java.lang.Object obj4 = null;
        pilha1.empilha(obj4);
        java.lang.Object[] objArray6 = pilha1.item;
        pilha0.item = objArray6;
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        boolean boolean10 = pilha8.vazia();
        pilha8.empilha((java.lang.Object) (byte) 10);
        ds.Pilha pilha13 = new ds.Pilha();
        boolean boolean14 = pilha13.vazia();
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        int int18 = pilha15.topo;
        int int19 = pilha15.tamanho();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        java.lang.Object[] objArray28 = pilha20.item;
        pilha15.item = objArray28;
        pilha13.item = objArray28;
        pilha8.item = objArray28;
        int int32 = pilha8.tamanho();
        pilha0.empilha((java.lang.Object) pilha8);
        pilha0.topo = 1;
        boolean boolean36 = pilha0.vazia();
        java.lang.Object obj37 = pilha0.desempilha();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = pilha0.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: Erro: A pilha esta vazia");
        } catch (java.lang.Exception e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test571");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        pilha0.item = objArray13;
        pilha0.topo = (byte) 10;
        pilha0.topo = (short) -1;
        int int19 = pilha0.tamanho();
        pilha0.topo = 'a';
        ds.Pilha pilha22 = new ds.Pilha();
        java.lang.Object[] objArray23 = pilha22.item;
        boolean boolean24 = pilha22.vazia();
        java.lang.Object obj25 = null;
        pilha22.empilha(obj25);
        java.lang.Object[] objArray27 = pilha22.item;
        int int28 = pilha22.tamanho();
        int int29 = pilha22.tamanho();
        int int30 = pilha22.topo;
        // The following exception was thrown during execution in test generation
        try {
            pilha0.empilha((java.lang.Object) pilha22);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 97");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test572");
        ds.Pilha pilha0 = new ds.Pilha();
        ds.Pilha pilha1 = new ds.Pilha();
        java.lang.Object[] objArray2 = pilha1.item;
        boolean boolean3 = pilha1.vazia();
        java.lang.Object obj4 = null;
        pilha1.empilha(obj4);
        java.lang.Object[] objArray6 = pilha1.item;
        pilha0.item = objArray6;
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        boolean boolean10 = pilha8.vazia();
        pilha8.empilha((java.lang.Object) (byte) 10);
        ds.Pilha pilha13 = new ds.Pilha();
        boolean boolean14 = pilha13.vazia();
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        int int18 = pilha15.topo;
        int int19 = pilha15.tamanho();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        java.lang.Object[] objArray28 = pilha20.item;
        pilha15.item = objArray28;
        pilha13.item = objArray28;
        pilha8.item = objArray28;
        int int32 = pilha8.tamanho();
        pilha0.empilha((java.lang.Object) pilha8);
        pilha8.topo = 3;
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test573");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        pilha0.topo = 1;
        int int5 = pilha0.tamanho();
        java.lang.Object[] objArray6 = pilha0.item;
        java.lang.Object[] objArray7 = pilha0.item;
        boolean boolean8 = pilha0.vazia();
        java.lang.Object[] objArray9 = pilha0.item;
        java.lang.Class<?> wildcardClass10 = objArray9.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test574");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        int int5 = pilha0.topo;
        java.lang.Object obj6 = pilha0.desempilha();
        pilha0.empilha((java.lang.Object) false);
        int int9 = pilha0.tamanho();
        java.lang.Object obj10 = pilha0.desempilha();
        java.lang.Object[] objArray11 = pilha0.item;
        int int12 = pilha0.tamanho();
        ds.Pilha pilha13 = new ds.Pilha();
        java.lang.Object[] objArray14 = pilha13.item;
        boolean boolean15 = pilha13.vazia();
        java.lang.Object obj16 = null;
        pilha13.empilha(obj16);
        java.lang.Object obj18 = pilha13.desempilha();
        ds.Pilha pilha19 = new ds.Pilha();
        java.lang.Object[] objArray20 = pilha19.item;
        ds.Pilha pilha21 = new ds.Pilha();
        java.lang.Object[] objArray22 = pilha21.item;
        java.lang.Object[] objArray27 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha21.item = objArray27;
        pilha19.item = objArray27;
        pilha13.item = objArray27;
        pilha0.item = objArray27;
        java.lang.Object[] objArray32 = pilha0.item;
        boolean boolean33 = pilha0.vazia();
        java.lang.Class<?> wildcardClass34 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + false + "'", obj10, false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test575");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        pilha0.topo = 2;
        int int10 = pilha0.tamanho();
        java.lang.Object[] objArray11 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
    }

    @Test
    public void test576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test576");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        pilha0.topo = 'a';
        boolean boolean6 = pilha0.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test577");
        ds.Pilha pilha0 = new ds.Pilha();
        boolean boolean1 = pilha0.vazia();
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        int int4 = pilha2.topo;
        int int5 = pilha2.topo;
        int int6 = pilha2.tamanho();
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        java.lang.Object[] objArray13 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha7.item = objArray13;
        java.lang.Object[] objArray15 = pilha7.item;
        pilha2.item = objArray15;
        pilha0.item = objArray15;
        java.lang.Object[] objArray18 = pilha0.item;
        pilha0.topo = '4';
        ds.Pilha pilha21 = new ds.Pilha();
        java.lang.Object[] objArray22 = pilha21.item;
        java.lang.Object[] objArray27 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha21.item = objArray27;
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        ds.Pilha pilha31 = new ds.Pilha();
        java.lang.Object[] objArray32 = pilha31.item;
        java.lang.Object[] objArray37 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha31.item = objArray37;
        pilha29.item = objArray37;
        pilha21.item = objArray37;
        int int41 = pilha21.tamanho();
        boolean boolean42 = pilha21.vazia();
        java.lang.Object[] objArray43 = pilha21.item;
        pilha0.item = objArray43;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[#, 0, 4, 1]");
    }

    @Test
    public void test578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test578");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        ds.Pilha pilha18 = new ds.Pilha();
        java.lang.Object[] objArray19 = pilha18.item;
        int int20 = pilha18.topo;
        pilha18.topo = 1;
        int int23 = pilha18.tamanho();
        java.lang.Object[] objArray24 = pilha18.item;
        java.lang.Object[] objArray25 = pilha18.item;
        pilha0.item = objArray25;
        int int27 = pilha0.tamanho();
        ds.Pilha pilha28 = new ds.Pilha();
        java.lang.Object[] objArray29 = pilha28.item;
        int int30 = pilha28.topo;
        int int31 = pilha28.topo;
        int int32 = pilha28.tamanho();
        ds.Pilha pilha33 = new ds.Pilha();
        java.lang.Object[] objArray34 = pilha33.item;
        java.lang.Object[] objArray39 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha33.item = objArray39;
        java.lang.Object[] objArray41 = pilha33.item;
        pilha28.item = objArray41;
        pilha28.topo = (byte) 10;
        pilha28.topo = (short) -1;
        int int47 = pilha28.tamanho();
        int int48 = pilha28.tamanho();
        pilha0.empilha((java.lang.Object) pilha28);
        ds.Pilha pilha50 = new ds.Pilha();
        java.lang.Object[] objArray51 = pilha50.item;
        boolean boolean52 = pilha50.vazia();
        pilha50.topo = (byte) 1;
        java.lang.Object obj55 = pilha50.desempilha();
        java.lang.Object[] objArray56 = pilha50.item;
        // The following exception was thrown during execution in test generation
        try {
            pilha28.empilha((java.lang.Object) objArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objArray56);
    }

    @Test
    public void test579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test579");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) (byte) 10);
        ds.Pilha pilha5 = new ds.Pilha();
        boolean boolean6 = pilha5.vazia();
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        int int9 = pilha7.topo;
        int int10 = pilha7.topo;
        int int11 = pilha7.tamanho();
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        java.lang.Object[] objArray18 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha12.item = objArray18;
        java.lang.Object[] objArray20 = pilha12.item;
        pilha7.item = objArray20;
        pilha5.item = objArray20;
        pilha0.item = objArray20;
        int int24 = pilha0.tamanho();
        ds.Pilha pilha25 = new ds.Pilha();
        java.lang.Object[] objArray26 = pilha25.item;
        ds.Pilha pilha27 = new ds.Pilha();
        java.lang.Object[] objArray28 = pilha27.item;
        java.lang.Object[] objArray33 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha27.item = objArray33;
        pilha25.item = objArray33;
        ds.Pilha pilha36 = new ds.Pilha();
        java.lang.Object[] objArray37 = pilha36.item;
        java.lang.Object[] objArray42 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha36.item = objArray42;
        java.lang.Object[] objArray44 = pilha36.item;
        java.lang.Object[] objArray45 = pilha36.item;
        java.lang.Object[] objArray46 = pilha36.item;
        pilha25.item = objArray46;
        ds.Pilha pilha48 = new ds.Pilha();
        java.lang.Object[] objArray49 = pilha48.item;
        java.lang.Object[] objArray54 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha48.item = objArray54;
        java.lang.Object[] objArray56 = pilha48.item;
        java.lang.Object[] objArray57 = pilha48.item;
        ds.Pilha pilha58 = new ds.Pilha();
        java.lang.Object[] objArray59 = pilha58.item;
        int int60 = pilha58.topo;
        int int61 = pilha58.topo;
        int int62 = pilha58.tamanho();
        ds.Pilha pilha63 = new ds.Pilha();
        java.lang.Object[] objArray64 = pilha63.item;
        java.lang.Object[] objArray69 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha63.item = objArray69;
        java.lang.Object[] objArray71 = pilha63.item;
        java.lang.Object[] objArray72 = pilha63.item;
        java.lang.Object[] objArray73 = pilha63.item;
        pilha58.item = objArray73;
        pilha48.empilha((java.lang.Object) pilha58);
        int int76 = pilha58.tamanho();
        int int77 = pilha58.topo;
        java.lang.Object[] objArray78 = pilha58.item;
        pilha25.item = objArray78;
        pilha0.empilha((java.lang.Object) pilha25);
        int int81 = pilha0.tamanho();
        java.lang.Object[] objArray82 = pilha0.item;
        boolean boolean83 = pilha0.vazia();
        java.lang.Class<?> wildcardClass84 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test580");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        java.lang.Object[] objArray10 = pilha0.item;
        boolean boolean11 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) 10.0d);
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        boolean boolean16 = pilha14.vazia();
        boolean boolean17 = pilha14.vazia();
        java.lang.Object[] objArray18 = pilha14.item;
        pilha0.item = objArray18;
        int int20 = pilha0.tamanho();
        ds.Pilha pilha21 = new ds.Pilha();
        java.lang.Object[] objArray22 = pilha21.item;
        boolean boolean23 = pilha21.vazia();
        pilha21.topo = (byte) 1;
        int int26 = pilha21.tamanho();
        java.lang.Object obj27 = pilha21.desempilha();
        int int28 = pilha21.tamanho();
        java.lang.Object[] objArray29 = pilha21.item;
        pilha0.item = objArray29;
        ds.Pilha pilha31 = new ds.Pilha();
        java.lang.Object[] objArray32 = pilha31.item;
        int int33 = pilha31.topo;
        int int34 = pilha31.topo;
        int int35 = pilha31.tamanho();
        ds.Pilha pilha36 = new ds.Pilha();
        java.lang.Object[] objArray37 = pilha36.item;
        java.lang.Object[] objArray42 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha36.item = objArray42;
        java.lang.Object[] objArray44 = pilha36.item;
        java.lang.Object[] objArray45 = pilha36.item;
        java.lang.Object[] objArray46 = pilha36.item;
        pilha31.item = objArray46;
        boolean boolean48 = pilha31.vazia();
        ds.Pilha pilha49 = new ds.Pilha();
        java.lang.Object[] objArray50 = pilha49.item;
        ds.Pilha pilha51 = new ds.Pilha();
        java.lang.Object[] objArray52 = pilha51.item;
        java.lang.Object[] objArray57 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha51.item = objArray57;
        pilha49.item = objArray57;
        ds.Pilha pilha60 = new ds.Pilha();
        java.lang.Object[] objArray61 = pilha60.item;
        java.lang.Object[] objArray66 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha60.item = objArray66;
        java.lang.Object[] objArray68 = pilha60.item;
        java.lang.Object[] objArray69 = pilha60.item;
        java.lang.Object[] objArray70 = pilha60.item;
        pilha49.item = objArray70;
        pilha31.item = objArray70;
        pilha0.empilha((java.lang.Object) objArray70);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[#, 0, 4, 1]");
    }

    @Test
    public void test581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test581");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        int int7 = pilha5.topo;
        pilha5.empilha((java.lang.Object) '4');
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        java.lang.Object[] objArray16 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha10.item = objArray16;
        java.lang.Object[] objArray18 = pilha10.item;
        java.lang.Object[] objArray19 = pilha10.item;
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        int int22 = pilha20.topo;
        int int23 = pilha20.topo;
        int int24 = pilha20.tamanho();
        ds.Pilha pilha25 = new ds.Pilha();
        java.lang.Object[] objArray26 = pilha25.item;
        java.lang.Object[] objArray31 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha25.item = objArray31;
        java.lang.Object[] objArray33 = pilha25.item;
        java.lang.Object[] objArray34 = pilha25.item;
        java.lang.Object[] objArray35 = pilha25.item;
        pilha20.item = objArray35;
        pilha10.empilha((java.lang.Object) pilha20);
        pilha5.empilha((java.lang.Object) pilha10);
        ds.Pilha pilha39 = new ds.Pilha();
        java.lang.Object[] objArray40 = pilha39.item;
        int int41 = pilha39.topo;
        pilha39.empilha((java.lang.Object) '4');
        ds.Pilha pilha44 = new ds.Pilha();
        java.lang.Object[] objArray45 = pilha44.item;
        java.lang.Object[] objArray50 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha44.item = objArray50;
        java.lang.Object[] objArray52 = pilha44.item;
        java.lang.Object[] objArray53 = pilha44.item;
        ds.Pilha pilha54 = new ds.Pilha();
        java.lang.Object[] objArray55 = pilha54.item;
        int int56 = pilha54.topo;
        int int57 = pilha54.topo;
        int int58 = pilha54.tamanho();
        ds.Pilha pilha59 = new ds.Pilha();
        java.lang.Object[] objArray60 = pilha59.item;
        java.lang.Object[] objArray65 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha59.item = objArray65;
        java.lang.Object[] objArray67 = pilha59.item;
        java.lang.Object[] objArray68 = pilha59.item;
        java.lang.Object[] objArray69 = pilha59.item;
        pilha54.item = objArray69;
        pilha44.empilha((java.lang.Object) pilha54);
        pilha39.empilha((java.lang.Object) pilha44);
        pilha5.empilha((java.lang.Object) pilha39);
        ds.Pilha pilha74 = new ds.Pilha();
        java.lang.Object[] objArray75 = pilha74.item;
        int int76 = pilha74.topo;
        pilha74.topo = 1;
        int int79 = pilha74.tamanho();
        java.lang.Object[] objArray80 = pilha74.item;
        java.lang.Object[] objArray81 = pilha74.item;
        pilha5.item = objArray81;
        java.lang.Object[] objArray83 = null;
        pilha5.item = objArray83;
        pilha0.empilha((java.lang.Object) pilha5);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(objArray81);
    }

    @Test
    public void test582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test582");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.topo = (short) 1;
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        int int18 = pilha15.topo;
        int int19 = pilha15.tamanho();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        java.lang.Object[] objArray28 = pilha20.item;
        java.lang.Object[] objArray29 = pilha20.item;
        java.lang.Object[] objArray30 = pilha20.item;
        pilha15.item = objArray30;
        pilha5.empilha((java.lang.Object) pilha15);
        boolean boolean33 = pilha15.vazia();
        pilha0.empilha((java.lang.Object) boolean33);
        java.lang.Object obj35 = pilha0.desempilha();
        java.lang.Object obj36 = pilha0.desempilha();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + true + "'", obj35, true);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test583");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        boolean boolean8 = pilha0.vazia();
        int int9 = pilha0.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test584");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        boolean boolean13 = pilha11.vazia();
        boolean boolean14 = pilha11.vazia();
        boolean boolean15 = pilha11.vazia();
        pilha11.empilha((java.lang.Object) "hi!");
        java.lang.Object obj18 = pilha11.desempilha();
        pilha0.empilha((java.lang.Object) pilha11);
        pilha11.empilha((java.lang.Object) 'a');
        int int22 = pilha11.tamanho();
        int int23 = pilha11.tamanho();
        java.lang.Object obj24 = pilha11.desempilha();
        int int25 = pilha11.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 'a' + "'", obj24, 'a');
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test585");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) (byte) 10);
        java.lang.Object obj5 = null;
        pilha0.empilha(obj5);
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        boolean boolean9 = pilha7.vazia();
        java.lang.Object obj10 = null;
        pilha7.empilha(obj10);
        int int12 = pilha7.topo;
        int int13 = pilha7.tamanho();
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        boolean boolean16 = pilha14.vazia();
        ds.Pilha pilha17 = new ds.Pilha();
        java.lang.Object[] objArray18 = pilha17.item;
        ds.Pilha pilha19 = new ds.Pilha();
        java.lang.Object[] objArray20 = pilha19.item;
        java.lang.Object[] objArray25 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha19.item = objArray25;
        pilha17.item = objArray25;
        pilha14.empilha((java.lang.Object) objArray25);
        pilha7.item = objArray25;
        pilha0.empilha((java.lang.Object) pilha7);
        int int31 = pilha0.tamanho();
        boolean boolean32 = pilha0.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test586");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        java.lang.Object[] objArray5 = pilha0.item;
        ds.Pilha pilha6 = new ds.Pilha();
        java.lang.Object[] objArray7 = pilha6.item;
        boolean boolean8 = pilha6.vazia();
        boolean boolean9 = pilha6.vazia();
        boolean boolean10 = pilha6.vazia();
        pilha6.empilha((java.lang.Object) "hi!");
        java.lang.Object obj13 = pilha6.desempilha();
        pilha0.empilha(obj13);
        java.lang.Object[] objArray15 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "hi!" + "'", obj13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
    }

    @Test
    public void test587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test587");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        boolean boolean4 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) "hi!");
        java.lang.Object[] objArray7 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objArray7);
    }

    @Test
    public void test588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test588");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        pilha0.topo = 1;
        int int5 = pilha0.tamanho();
        java.lang.Object[] objArray6 = pilha0.item;
        java.lang.Object[] objArray7 = pilha0.item;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object obj9 = pilha0.desempilha();
        int int10 = pilha0.tamanho();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = pilha0.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: Erro: A pilha esta vazia");
        } catch (java.lang.Exception e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test589");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        ds.Pilha pilha18 = new ds.Pilha();
        java.lang.Object[] objArray19 = pilha18.item;
        boolean boolean20 = pilha18.vazia();
        java.lang.Object obj21 = null;
        pilha18.empilha(obj21);
        java.lang.Object obj23 = pilha18.desempilha();
        ds.Pilha pilha24 = new ds.Pilha();
        java.lang.Object[] objArray25 = pilha24.item;
        int int26 = pilha24.topo;
        int int27 = pilha24.topo;
        int int28 = pilha24.tamanho();
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        java.lang.Object[] objArray35 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha29.item = objArray35;
        java.lang.Object[] objArray37 = pilha29.item;
        java.lang.Object[] objArray38 = pilha29.item;
        java.lang.Object[] objArray39 = pilha29.item;
        pilha24.item = objArray39;
        boolean boolean41 = pilha24.vazia();
        int int42 = pilha24.tamanho();
        boolean boolean43 = pilha24.vazia();
        int int44 = pilha24.topo;
        int int45 = pilha24.tamanho();
        java.lang.Object[] objArray46 = pilha24.item;
        pilha18.item = objArray46;
        pilha0.item = objArray46;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
    }

    @Test
    public void test590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test590");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        ds.Pilha pilha17 = new ds.Pilha();
        java.lang.Object[] objArray18 = pilha17.item;
        boolean boolean19 = pilha17.vazia();
        boolean boolean20 = pilha17.vazia();
        boolean boolean21 = pilha17.vazia();
        pilha17.empilha((java.lang.Object) "hi!");
        java.lang.Object obj24 = pilha17.desempilha();
        java.lang.Object[] objArray25 = pilha17.item;
        pilha0.item = objArray25;
        int int27 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "hi!" + "'", obj24, "hi!");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test591");
        ds.Pilha pilha0 = new ds.Pilha();
        int int1 = pilha0.tamanho();
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        java.lang.Object[] objArray10 = pilha2.item;
        java.lang.Object[] objArray11 = pilha2.item;
        pilha0.item = objArray11;
        java.lang.Object[] objArray13 = pilha0.item;
        int int14 = pilha0.topo;
        java.lang.Object[] objArray15 = pilha0.item;
        java.lang.Object[] objArray16 = pilha0.item;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[#, 0, 4, 1]");
    }

    @Test
    public void test592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test592");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        int int5 = pilha0.tamanho();
        pilha0.topo = (byte) 10;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test593");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.topo = (byte) 1;
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        java.lang.Object[] objArray13 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha7.item = objArray13;
        pilha5.item = objArray13;
        ds.Pilha pilha16 = new ds.Pilha();
        java.lang.Object[] objArray17 = pilha16.item;
        java.lang.Object[] objArray22 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha16.item = objArray22;
        java.lang.Object[] objArray24 = pilha16.item;
        java.lang.Object[] objArray25 = pilha16.item;
        java.lang.Object[] objArray26 = pilha16.item;
        pilha5.item = objArray26;
        java.lang.Class<?> wildcardClass28 = objArray26.getClass();
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        int int31 = pilha29.tamanho();
        ds.Pilha pilha35 = new ds.Pilha();
        java.lang.Object[] objArray36 = pilha35.item;
        int int37 = pilha35.topo;
        int int38 = pilha35.topo;
        int int39 = pilha35.tamanho();
        ds.Pilha pilha40 = new ds.Pilha();
        java.lang.Object[] objArray41 = pilha40.item;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha40.item = objArray46;
        java.lang.Object[] objArray48 = pilha40.item;
        java.lang.Object[] objArray49 = pilha40.item;
        java.lang.Object[] objArray50 = pilha40.item;
        pilha35.item = objArray50;
        boolean boolean52 = pilha35.vazia();
        int int53 = pilha35.tamanho();
        int int54 = pilha35.tamanho();
        java.lang.Class<?> wildcardClass55 = pilha35.getClass();
        java.lang.Object[] objArray56 = new java.lang.Object[] { objArray26, int31, 10.0d, (short) 100, 1L, pilha35 };
        pilha0.item = objArray56;
        java.lang.Object obj58 = pilha0.desempilha();
        ds.Pilha pilha59 = new ds.Pilha();
        java.lang.Object[] objArray60 = pilha59.item;
        int int61 = pilha59.topo;
        pilha59.topo = 1;
        int int64 = pilha59.tamanho();
        java.lang.Object[] objArray65 = pilha59.item;
        java.lang.Object[] objArray66 = pilha59.item;
        pilha0.item = objArray66;
        java.lang.Class<?> wildcardClass68 = objArray66.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test594");
        ds.Pilha pilha0 = new ds.Pilha();
        ds.Pilha pilha1 = new ds.Pilha();
        java.lang.Object[] objArray2 = pilha1.item;
        boolean boolean3 = pilha1.vazia();
        java.lang.Object obj4 = null;
        pilha1.empilha(obj4);
        java.lang.Object[] objArray6 = pilha1.item;
        pilha0.item = objArray6;
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        boolean boolean10 = pilha8.vazia();
        pilha8.empilha((java.lang.Object) (byte) 10);
        ds.Pilha pilha13 = new ds.Pilha();
        boolean boolean14 = pilha13.vazia();
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        int int18 = pilha15.topo;
        int int19 = pilha15.tamanho();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        java.lang.Object[] objArray28 = pilha20.item;
        pilha15.item = objArray28;
        pilha13.item = objArray28;
        pilha8.item = objArray28;
        int int32 = pilha8.tamanho();
        pilha0.empilha((java.lang.Object) pilha8);
        java.lang.Object obj34 = pilha0.desempilha();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test595");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        java.lang.Object[] objArray18 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha12.item = objArray18;
        pilha10.item = objArray18;
        java.lang.Object obj21 = null;
        pilha10.empilha(obj21);
        java.lang.Object[] objArray23 = pilha10.item;
        java.lang.Object[] objArray24 = pilha10.item;
        int int25 = pilha10.tamanho();
        int int26 = pilha10.topo;
        java.lang.Object[] objArray27 = pilha10.item;
        pilha0.empilha((java.lang.Object) pilha10);
        int int29 = pilha10.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[null, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[null, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[null, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test596");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        int int8 = pilha0.topo;
        boolean boolean9 = pilha0.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test597");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        boolean boolean8 = pilha0.vazia();
        java.lang.Object[] objArray9 = pilha0.item;
        pilha0.empilha((java.lang.Object) 1L);
        int int12 = pilha0.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[1, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[1, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test598");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        int int18 = pilha0.tamanho();
        java.lang.Object[] objArray19 = pilha0.item;
        int int20 = pilha0.topo;
        pilha0.empilha((java.lang.Object) "");
        java.lang.Class<?> wildcardClass23 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test599");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        pilha0.topo = 100;
        java.lang.Object obj6 = pilha0.desempilha();
        boolean boolean7 = pilha0.vazia();
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        int int10 = pilha8.topo;
        int int11 = pilha8.topo;
        int int12 = pilha8.tamanho();
        ds.Pilha pilha13 = new ds.Pilha();
        java.lang.Object[] objArray14 = pilha13.item;
        java.lang.Object[] objArray19 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha13.item = objArray19;
        java.lang.Object[] objArray21 = pilha13.item;
        java.lang.Object[] objArray22 = pilha13.item;
        java.lang.Object[] objArray23 = pilha13.item;
        pilha8.item = objArray23;
        pilha8.topo = (short) -1;
        ds.Pilha pilha27 = new ds.Pilha();
        java.lang.Object[] objArray28 = pilha27.item;
        boolean boolean29 = pilha27.vazia();
        java.lang.Object obj30 = null;
        pilha27.empilha(obj30);
        java.lang.Object[] objArray32 = pilha27.item;
        int int33 = pilha27.tamanho();
        boolean boolean34 = pilha27.vazia();
        java.lang.Object[] objArray35 = pilha27.item;
        pilha8.item = objArray35;
        java.lang.Class<?> wildcardClass37 = pilha8.getClass();
        pilha0.empilha((java.lang.Object) wildcardClass37);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test600");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        pilha0.topo = 1;
        java.lang.Object[] objArray5 = pilha0.item;
        java.lang.Object obj6 = pilha0.desempilha();
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        boolean boolean9 = pilha7.vazia();
        boolean boolean10 = pilha7.vazia();
        int int11 = pilha7.topo;
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        int int14 = pilha12.topo;
        int int15 = pilha12.topo;
        int int16 = pilha12.tamanho();
        ds.Pilha pilha17 = new ds.Pilha();
        java.lang.Object[] objArray18 = pilha17.item;
        java.lang.Object[] objArray23 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha17.item = objArray23;
        java.lang.Object[] objArray25 = pilha17.item;
        pilha12.item = objArray25;
        pilha12.topo = (byte) 10;
        pilha12.topo = (-1);
        java.lang.Object[] objArray31 = pilha12.item;
        pilha12.topo = '4';
        int int34 = pilha12.topo;
        ds.Pilha pilha35 = new ds.Pilha();
        java.lang.Object[] objArray36 = pilha35.item;
        int int37 = pilha35.topo;
        int int38 = pilha35.topo;
        int int39 = pilha35.tamanho();
        ds.Pilha pilha40 = new ds.Pilha();
        java.lang.Object[] objArray41 = pilha40.item;
        java.lang.Object[] objArray46 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha40.item = objArray46;
        java.lang.Object[] objArray48 = pilha40.item;
        java.lang.Object[] objArray49 = pilha40.item;
        java.lang.Object[] objArray50 = pilha40.item;
        pilha35.item = objArray50;
        boolean boolean52 = pilha35.vazia();
        int int53 = pilha35.tamanho();
        boolean boolean54 = pilha35.vazia();
        int int55 = pilha35.topo;
        java.lang.Object[] objArray56 = pilha35.item;
        ds.Pilha pilha57 = new ds.Pilha();
        java.lang.Object[] objArray58 = pilha57.item;
        int int59 = pilha57.topo;
        int int60 = pilha57.topo;
        int int61 = pilha57.tamanho();
        ds.Pilha pilha62 = new ds.Pilha();
        java.lang.Object[] objArray63 = pilha62.item;
        java.lang.Object[] objArray68 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha62.item = objArray68;
        java.lang.Object[] objArray70 = pilha62.item;
        java.lang.Object[] objArray71 = pilha62.item;
        java.lang.Object[] objArray72 = pilha62.item;
        pilha57.item = objArray72;
        boolean boolean74 = pilha57.vazia();
        int int75 = pilha57.tamanho();
        boolean boolean76 = pilha57.vazia();
        int int77 = pilha57.topo;
        java.lang.Object[] objArray78 = pilha57.item;
        pilha35.empilha((java.lang.Object) objArray78);
        pilha12.item = objArray78;
        pilha7.item = objArray78;
        pilha0.item = objArray78;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[#, 0, 4, 1]");
    }

    @Test
    public void test601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test601");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.tamanho();
        pilha0.empilha((java.lang.Object) 0.0d);
        java.lang.Object obj5 = pilha0.desempilha();
        ds.Pilha pilha6 = new ds.Pilha();
        java.lang.Object[] objArray7 = pilha6.item;
        int int8 = pilha6.topo;
        int int9 = pilha6.topo;
        int int10 = pilha6.tamanho();
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        java.lang.Object[] objArray17 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha11.item = objArray17;
        java.lang.Object[] objArray19 = pilha11.item;
        java.lang.Object[] objArray20 = pilha11.item;
        java.lang.Object[] objArray21 = pilha11.item;
        pilha6.item = objArray21;
        boolean boolean23 = pilha6.vazia();
        int int24 = pilha6.tamanho();
        int int25 = pilha6.tamanho();
        java.lang.Object[] objArray26 = pilha6.item;
        pilha0.empilha((java.lang.Object) objArray26);
        ds.Pilha pilha28 = new ds.Pilha();
        java.lang.Object[] objArray29 = pilha28.item;
        boolean boolean30 = pilha28.vazia();
        pilha28.topo = (byte) 1;
        ds.Pilha pilha33 = new ds.Pilha();
        java.lang.Object[] objArray34 = pilha33.item;
        int int35 = pilha33.topo;
        ds.Pilha pilha36 = new ds.Pilha();
        java.lang.Object[] objArray37 = pilha36.item;
        int int38 = pilha36.topo;
        int int39 = pilha36.topo;
        int int40 = pilha36.tamanho();
        ds.Pilha pilha41 = new ds.Pilha();
        java.lang.Object[] objArray42 = pilha41.item;
        java.lang.Object[] objArray47 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha41.item = objArray47;
        java.lang.Object[] objArray49 = pilha41.item;
        java.lang.Object[] objArray50 = pilha41.item;
        java.lang.Object[] objArray51 = pilha41.item;
        pilha36.item = objArray51;
        boolean boolean53 = pilha36.vazia();
        int int54 = pilha36.tamanho();
        int int55 = pilha36.tamanho();
        java.lang.Class<?> wildcardClass56 = pilha36.getClass();
        pilha33.empilha((java.lang.Object) wildcardClass56);
        pilha28.empilha((java.lang.Object) pilha33);
        pilha0.empilha((java.lang.Object) pilha33);
        ds.Pilha pilha60 = new ds.Pilha();
        java.lang.Object[] objArray61 = pilha60.item;
        java.lang.Object[] objArray66 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha60.item = objArray66;
        java.lang.Object[] objArray68 = pilha60.item;
        java.lang.Object[] objArray69 = null;
        pilha60.item = objArray69;
        ds.Pilha pilha71 = new ds.Pilha();
        java.lang.Object[] objArray72 = pilha71.item;
        java.lang.Object[] objArray77 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha71.item = objArray77;
        pilha60.item = objArray77;
        int int80 = pilha60.tamanho();
        pilha60.topo = 0;
        ds.Pilha pilha83 = new ds.Pilha();
        java.lang.Object[] objArray84 = pilha83.item;
        pilha60.item = objArray84;
        pilha33.item = objArray84;
        boolean boolean87 = pilha33.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0.0d + "'", obj5, 0.0d);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test602");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        boolean boolean8 = pilha0.vazia();
        java.lang.Object[] objArray9 = pilha0.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        java.lang.Object[] objArray16 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha10.item = objArray16;
        java.lang.Object[] objArray18 = pilha10.item;
        java.lang.Object[] objArray19 = pilha10.item;
        pilha0.item = objArray19;
        pilha0.topo = (short) 1;
        java.lang.Object obj23 = pilha0.desempilha();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '#' + "'", obj23, '#');
    }

    @Test
    public void test603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test603");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        java.lang.Object obj11 = null;
        pilha0.empilha(obj11);
        java.lang.Object[] objArray13 = pilha0.item;
        int int14 = pilha0.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[null, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[null, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test604");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        pilha0.empilha((java.lang.Object) '4');
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        int int18 = pilha15.topo;
        int int19 = pilha15.tamanho();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        java.lang.Object[] objArray28 = pilha20.item;
        java.lang.Object[] objArray29 = pilha20.item;
        java.lang.Object[] objArray30 = pilha20.item;
        pilha15.item = objArray30;
        pilha5.empilha((java.lang.Object) pilha15);
        pilha0.empilha((java.lang.Object) pilha5);
        ds.Pilha pilha34 = new ds.Pilha();
        java.lang.Object[] objArray35 = pilha34.item;
        int int36 = pilha34.topo;
        pilha34.empilha((java.lang.Object) '4');
        ds.Pilha pilha39 = new ds.Pilha();
        java.lang.Object[] objArray40 = pilha39.item;
        java.lang.Object[] objArray45 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha39.item = objArray45;
        java.lang.Object[] objArray47 = pilha39.item;
        java.lang.Object[] objArray48 = pilha39.item;
        ds.Pilha pilha49 = new ds.Pilha();
        java.lang.Object[] objArray50 = pilha49.item;
        int int51 = pilha49.topo;
        int int52 = pilha49.topo;
        int int53 = pilha49.tamanho();
        ds.Pilha pilha54 = new ds.Pilha();
        java.lang.Object[] objArray55 = pilha54.item;
        java.lang.Object[] objArray60 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha54.item = objArray60;
        java.lang.Object[] objArray62 = pilha54.item;
        java.lang.Object[] objArray63 = pilha54.item;
        java.lang.Object[] objArray64 = pilha54.item;
        pilha49.item = objArray64;
        pilha39.empilha((java.lang.Object) pilha49);
        pilha34.empilha((java.lang.Object) pilha39);
        pilha0.empilha((java.lang.Object) pilha34);
        java.lang.Object[] objArray69 = pilha34.item;
        int int70 = pilha34.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
    }

    @Test
    public void test605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test605");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        int int12 = pilha10.topo;
        int int13 = pilha10.topo;
        int int14 = pilha10.tamanho();
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        java.lang.Object[] objArray21 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha15.item = objArray21;
        java.lang.Object[] objArray23 = pilha15.item;
        java.lang.Object[] objArray24 = pilha15.item;
        java.lang.Object[] objArray25 = pilha15.item;
        pilha10.item = objArray25;
        pilha0.empilha((java.lang.Object) pilha10);
        java.lang.Object[] objArray28 = pilha10.item;
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        int int31 = pilha29.topo;
        int int32 = pilha29.topo;
        int int33 = pilha29.tamanho();
        ds.Pilha pilha34 = new ds.Pilha();
        java.lang.Object[] objArray35 = pilha34.item;
        java.lang.Object[] objArray40 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha34.item = objArray40;
        java.lang.Object[] objArray42 = pilha34.item;
        pilha29.item = objArray42;
        pilha29.topo = (byte) 10;
        pilha29.topo = (short) -1;
        pilha10.empilha((java.lang.Object) (short) -1);
        pilha10.empilha((java.lang.Object) 32);
        int int51 = pilha10.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 32, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 32, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[-1, 32, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[-1, 32, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[-1, 32, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[-1, 32, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[-1, 32, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[-1, 32, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1, 32, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1, 32, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
    }

    @Test
    public void test606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test606");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        int int18 = pilha0.tamanho();
        boolean boolean19 = pilha0.vazia();
        pilha0.topo = '4';
        java.lang.Object[] objArray22 = null;
        pilha0.item = objArray22;
        int int24 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
    }

    @Test
    public void test607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test607");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        int int12 = pilha10.topo;
        int int13 = pilha10.topo;
        int int14 = pilha10.tamanho();
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        java.lang.Object[] objArray21 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha15.item = objArray21;
        java.lang.Object[] objArray23 = pilha15.item;
        java.lang.Object[] objArray24 = pilha15.item;
        java.lang.Object[] objArray25 = pilha15.item;
        pilha10.item = objArray25;
        pilha0.empilha((java.lang.Object) pilha10);
        java.lang.Object[] objArray28 = pilha10.item;
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        int int31 = pilha29.topo;
        int int32 = pilha29.topo;
        int int33 = pilha29.tamanho();
        ds.Pilha pilha34 = new ds.Pilha();
        java.lang.Object[] objArray35 = pilha34.item;
        java.lang.Object[] objArray40 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha34.item = objArray40;
        java.lang.Object[] objArray42 = pilha34.item;
        pilha29.item = objArray42;
        pilha29.topo = (byte) 10;
        pilha29.topo = (short) -1;
        pilha10.empilha((java.lang.Object) (short) -1);
        pilha10.topo = 52;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[-1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[-1, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[-1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[-1, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[-1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[-1, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[#, 0, 4, 1]");
    }

    @Test
    public void test608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test608");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        boolean boolean11 = pilha0.vazia();
        int int12 = pilha0.tamanho();
        boolean boolean13 = pilha0.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test609");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        int int7 = pilha5.topo;
        int int8 = pilha5.topo;
        int int9 = pilha5.tamanho();
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        java.lang.Object[] objArray16 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha10.item = objArray16;
        java.lang.Object[] objArray18 = pilha10.item;
        java.lang.Object[] objArray19 = pilha10.item;
        java.lang.Object[] objArray20 = pilha10.item;
        pilha5.item = objArray20;
        boolean boolean22 = pilha5.vazia();
        ds.Pilha pilha23 = new ds.Pilha();
        java.lang.Object[] objArray24 = pilha23.item;
        int int25 = pilha23.topo;
        pilha23.topo = 1;
        int int28 = pilha23.tamanho();
        java.lang.Object[] objArray29 = pilha23.item;
        java.lang.Object[] objArray30 = pilha23.item;
        pilha5.item = objArray30;
        pilha0.item = objArray30;
        ds.Pilha pilha33 = new ds.Pilha();
        java.lang.Object[] objArray34 = pilha33.item;
        boolean boolean35 = pilha33.vazia();
        pilha33.topo = (byte) 1;
        ds.Pilha pilha38 = new ds.Pilha();
        java.lang.Object[] objArray39 = pilha38.item;
        int int40 = pilha38.topo;
        ds.Pilha pilha41 = new ds.Pilha();
        java.lang.Object[] objArray42 = pilha41.item;
        int int43 = pilha41.topo;
        int int44 = pilha41.topo;
        int int45 = pilha41.tamanho();
        ds.Pilha pilha46 = new ds.Pilha();
        java.lang.Object[] objArray47 = pilha46.item;
        java.lang.Object[] objArray52 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha46.item = objArray52;
        java.lang.Object[] objArray54 = pilha46.item;
        java.lang.Object[] objArray55 = pilha46.item;
        java.lang.Object[] objArray56 = pilha46.item;
        pilha41.item = objArray56;
        boolean boolean58 = pilha41.vazia();
        int int59 = pilha41.tamanho();
        int int60 = pilha41.tamanho();
        java.lang.Class<?> wildcardClass61 = pilha41.getClass();
        pilha38.empilha((java.lang.Object) wildcardClass61);
        pilha33.empilha((java.lang.Object) pilha38);
        ds.Pilha pilha64 = new ds.Pilha();
        java.lang.Object[] objArray65 = pilha64.item;
        int int66 = pilha64.topo;
        ds.Pilha pilha67 = new ds.Pilha();
        java.lang.Object[] objArray68 = pilha67.item;
        java.lang.Object[] objArray73 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha67.item = objArray73;
        pilha64.empilha((java.lang.Object) pilha67);
        ds.Pilha pilha76 = new ds.Pilha();
        java.lang.Object[] objArray77 = pilha76.item;
        int int78 = pilha76.topo;
        int int79 = pilha76.topo;
        int int80 = pilha76.tamanho();
        int int81 = pilha76.tamanho();
        java.lang.Object[] objArray82 = pilha76.item;
        pilha67.item = objArray82;
        pilha33.item = objArray82;
        pilha0.item = objArray82;
        java.lang.Object[] objArray86 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertNotNull(objArray86);
    }

    @Test
    public void test610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test610");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        java.lang.Object obj11 = null;
        pilha0.empilha(obj11);
        java.lang.Object obj13 = pilha0.desempilha();
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        ds.Pilha pilha16 = new ds.Pilha();
        java.lang.Object[] objArray17 = pilha16.item;
        java.lang.Object[] objArray22 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha16.item = objArray22;
        pilha14.item = objArray22;
        java.lang.Object obj25 = null;
        pilha14.empilha(obj25);
        java.lang.Object[] objArray27 = pilha14.item;
        pilha0.item = objArray27;
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        boolean boolean31 = pilha29.vazia();
        ds.Pilha pilha32 = new ds.Pilha();
        java.lang.Object[] objArray33 = pilha32.item;
        int int34 = pilha32.tamanho();
        pilha32.empilha((java.lang.Object) 0.0d);
        java.lang.Object[] objArray37 = pilha32.item;
        pilha29.item = objArray37;
        pilha0.item = objArray37;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[null, 0, 4, 1]");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[null, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[null, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(objArray37);
    }

    @Test
    public void test611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test611");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        pilha0.item = objArray13;
        int int15 = pilha0.topo;
        int int16 = pilha0.topo;
        ds.Pilha pilha17 = new ds.Pilha();
        java.lang.Object[] objArray18 = pilha17.item;
        ds.Pilha pilha19 = new ds.Pilha();
        java.lang.Object[] objArray20 = pilha19.item;
        java.lang.Object[] objArray25 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha19.item = objArray25;
        pilha17.item = objArray25;
        ds.Pilha pilha28 = new ds.Pilha();
        java.lang.Object[] objArray29 = pilha28.item;
        boolean boolean30 = pilha28.vazia();
        boolean boolean31 = pilha28.vazia();
        boolean boolean32 = pilha28.vazia();
        pilha28.empilha((java.lang.Object) "hi!");
        java.lang.Object obj35 = pilha28.desempilha();
        pilha17.empilha((java.lang.Object) pilha28);
        pilha28.empilha((java.lang.Object) 'a');
        int int39 = pilha28.tamanho();
        int int40 = pilha28.tamanho();
        ds.Pilha pilha41 = new ds.Pilha();
        java.lang.Object[] objArray42 = pilha41.item;
        boolean boolean43 = pilha41.vazia();
        boolean boolean44 = pilha41.vazia();
        boolean boolean45 = pilha41.vazia();
        pilha41.empilha((java.lang.Object) 1.0f);
        boolean boolean48 = pilha41.vazia();
        pilha41.topo = (byte) -1;
        java.lang.Object[] objArray51 = pilha41.item;
        pilha28.empilha((java.lang.Object) objArray51);
        pilha0.item = objArray51;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "hi!" + "'", obj35, "hi!");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray51);
    }

    @Test
    public void test612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test612");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        int int12 = pilha10.topo;
        int int13 = pilha10.topo;
        int int14 = pilha10.tamanho();
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        java.lang.Object[] objArray21 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha15.item = objArray21;
        java.lang.Object[] objArray23 = pilha15.item;
        java.lang.Object[] objArray24 = pilha15.item;
        java.lang.Object[] objArray25 = pilha15.item;
        pilha10.item = objArray25;
        pilha0.empilha((java.lang.Object) pilha10);
        java.lang.Object[] objArray28 = pilha10.item;
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        int int31 = pilha29.topo;
        int int32 = pilha29.topo;
        int int33 = pilha29.tamanho();
        ds.Pilha pilha34 = new ds.Pilha();
        java.lang.Object[] objArray35 = pilha34.item;
        java.lang.Object[] objArray40 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha34.item = objArray40;
        java.lang.Object[] objArray42 = pilha34.item;
        pilha29.item = objArray42;
        pilha29.topo = (byte) 10;
        pilha29.topo = (short) -1;
        pilha10.empilha((java.lang.Object) (short) -1);
        pilha10.empilha((java.lang.Object) 32);
        java.lang.Object obj51 = pilha10.desempilha();
        ds.Pilha pilha52 = new ds.Pilha();
        java.lang.Object[] objArray53 = pilha52.item;
        int int54 = pilha52.topo;
        int int55 = pilha52.topo;
        int int56 = pilha52.tamanho();
        ds.Pilha pilha57 = new ds.Pilha();
        java.lang.Object[] objArray58 = pilha57.item;
        java.lang.Object[] objArray63 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha57.item = objArray63;
        java.lang.Object[] objArray65 = pilha57.item;
        java.lang.Object[] objArray66 = pilha57.item;
        java.lang.Object[] objArray67 = pilha57.item;
        pilha52.item = objArray67;
        boolean boolean69 = pilha52.vazia();
        int int70 = pilha52.tamanho();
        boolean boolean71 = pilha52.vazia();
        int int72 = pilha52.topo;
        java.lang.Object[] objArray73 = pilha52.item;
        int int74 = pilha52.tamanho();
        pilha52.topo = (-1);
        pilha10.empilha((java.lang.Object) pilha52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = pilha52.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 32 + "'", obj51, 32);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test613");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        int int3 = pilha0.tamanho();
        pilha0.topo = 0;
        pilha0.topo = (short) 10;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test614");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        java.lang.Object[] objArray16 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha10.item = objArray16;
        pilha8.item = objArray16;
        pilha0.item = objArray16;
        int int20 = pilha0.tamanho();
        int int21 = pilha0.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test615");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        boolean boolean8 = pilha0.vazia();
        java.lang.Object[] objArray9 = pilha0.item;
        int int10 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test616");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        java.lang.Object[] objArray10 = pilha0.item;
        boolean boolean11 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) 10.0d);
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        boolean boolean16 = pilha14.vazia();
        boolean boolean17 = pilha14.vazia();
        java.lang.Object[] objArray18 = pilha14.item;
        pilha0.item = objArray18;
        int int20 = pilha0.tamanho();
        ds.Pilha pilha21 = new ds.Pilha();
        java.lang.Object[] objArray22 = pilha21.item;
        boolean boolean23 = pilha21.vazia();
        pilha21.topo = (byte) 1;
        int int26 = pilha21.tamanho();
        java.lang.Object obj27 = pilha21.desempilha();
        int int28 = pilha21.tamanho();
        java.lang.Object[] objArray29 = pilha21.item;
        pilha0.item = objArray29;
        int int31 = pilha0.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test617");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        boolean boolean4 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) 1.0f);
        boolean boolean7 = pilha0.vazia();
        int int8 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test618");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        int int18 = pilha0.tamanho();
        int int19 = pilha0.tamanho();
        java.lang.Object[] objArray20 = pilha0.item;
        pilha0.topo = (short) 1;
        java.lang.Object[] objArray23 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[#, 0, 4, 1]");
    }

    @Test
    public void test619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test619");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        java.lang.Object[] objArray17 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha11.item = objArray17;
        java.lang.Object[] objArray19 = pilha11.item;
        java.lang.Object[] objArray20 = pilha11.item;
        java.lang.Object[] objArray21 = pilha11.item;
        pilha0.item = objArray21;
        pilha0.topo = (byte) -1;
        ds.Pilha pilha25 = new ds.Pilha();
        java.lang.Object[] objArray26 = pilha25.item;
        boolean boolean27 = pilha25.vazia();
        java.lang.Object obj28 = null;
        pilha25.empilha(obj28);
        java.lang.Object[] objArray30 = pilha25.item;
        pilha0.item = objArray30;
        java.lang.Object[] objArray32 = pilha0.item;
        int int33 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test620");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        boolean boolean4 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) "hi!");
        java.lang.Object obj7 = pilha0.desempilha();
        pilha0.topo = (short) 1;
        boolean boolean10 = pilha0.vazia();
        int int11 = pilha0.tamanho();
        java.lang.Object obj12 = pilha0.desempilha();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "hi!" + "'", obj12, "hi!");
    }

    @Test
    public void test621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test621");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        boolean boolean4 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) 1.0f);
        boolean boolean7 = pilha0.vazia();
        pilha0.topo = (byte) -1;
        java.lang.Object[] objArray10 = pilha0.item;
        int int11 = pilha0.tamanho();
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        boolean boolean14 = pilha12.vazia();
        pilha12.topo = (byte) 1;
        ds.Pilha pilha17 = new ds.Pilha();
        java.lang.Object[] objArray18 = pilha17.item;
        ds.Pilha pilha19 = new ds.Pilha();
        java.lang.Object[] objArray20 = pilha19.item;
        java.lang.Object[] objArray25 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha19.item = objArray25;
        pilha17.item = objArray25;
        ds.Pilha pilha28 = new ds.Pilha();
        java.lang.Object[] objArray29 = pilha28.item;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha28.item = objArray34;
        java.lang.Object[] objArray36 = pilha28.item;
        java.lang.Object[] objArray37 = pilha28.item;
        java.lang.Object[] objArray38 = pilha28.item;
        pilha17.item = objArray38;
        java.lang.Class<?> wildcardClass40 = objArray38.getClass();
        ds.Pilha pilha41 = new ds.Pilha();
        java.lang.Object[] objArray42 = pilha41.item;
        int int43 = pilha41.tamanho();
        ds.Pilha pilha47 = new ds.Pilha();
        java.lang.Object[] objArray48 = pilha47.item;
        int int49 = pilha47.topo;
        int int50 = pilha47.topo;
        int int51 = pilha47.tamanho();
        ds.Pilha pilha52 = new ds.Pilha();
        java.lang.Object[] objArray53 = pilha52.item;
        java.lang.Object[] objArray58 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha52.item = objArray58;
        java.lang.Object[] objArray60 = pilha52.item;
        java.lang.Object[] objArray61 = pilha52.item;
        java.lang.Object[] objArray62 = pilha52.item;
        pilha47.item = objArray62;
        boolean boolean64 = pilha47.vazia();
        int int65 = pilha47.tamanho();
        int int66 = pilha47.tamanho();
        java.lang.Class<?> wildcardClass67 = pilha47.getClass();
        java.lang.Object[] objArray68 = new java.lang.Object[] { objArray38, int43, 10.0d, (short) 100, 1L, pilha47 };
        pilha12.item = objArray68;
        java.lang.Object obj70 = pilha12.desempilha();
        ds.Pilha pilha71 = new ds.Pilha();
        java.lang.Object[] objArray72 = pilha71.item;
        int int73 = pilha71.topo;
        pilha71.topo = 1;
        int int76 = pilha71.tamanho();
        java.lang.Object[] objArray77 = pilha71.item;
        java.lang.Object[] objArray78 = pilha71.item;
        pilha12.item = objArray78;
        pilha0.item = objArray78;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertNotNull(objArray78);
    }

    @Test
    public void test622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test622");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        pilha0.item = objArray13;
        pilha0.topo = (byte) 10;
        pilha0.topo = 0;
        int int19 = pilha0.tamanho();
        int int20 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test623");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        pilha0.empilha((java.lang.Object) '4');
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        int int18 = pilha15.topo;
        int int19 = pilha15.tamanho();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        java.lang.Object[] objArray28 = pilha20.item;
        java.lang.Object[] objArray29 = pilha20.item;
        java.lang.Object[] objArray30 = pilha20.item;
        pilha15.item = objArray30;
        pilha5.empilha((java.lang.Object) pilha15);
        pilha0.empilha((java.lang.Object) pilha5);
        java.lang.Object[] objArray34 = pilha0.item;
        pilha0.topo = '4';
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray34);
    }

    @Test
    public void test624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test624");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        int int18 = pilha0.tamanho();
        boolean boolean19 = pilha0.vazia();
        int int20 = pilha0.topo;
        pilha0.topo = 9;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test625");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        pilha0.topo = 'a';
        int int6 = pilha0.tamanho();
        pilha0.topo = (short) 100;
        int int9 = pilha0.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 97 + "'", int6 == 97);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    }

    @Test
    public void test626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test626");
        ds.Pilha pilha0 = new ds.Pilha();
        ds.Pilha pilha1 = new ds.Pilha();
        java.lang.Object[] objArray2 = pilha1.item;
        boolean boolean3 = pilha1.vazia();
        java.lang.Object obj4 = null;
        pilha1.empilha(obj4);
        java.lang.Object[] objArray6 = pilha1.item;
        pilha0.item = objArray6;
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        boolean boolean10 = pilha8.vazia();
        java.lang.Object obj11 = null;
        pilha8.empilha(obj11);
        java.lang.Object[] objArray13 = pilha8.item;
        pilha0.empilha((java.lang.Object) objArray13);
        boolean boolean15 = pilha0.vazia();
        int int16 = pilha0.topo;
        ds.Pilha pilha17 = new ds.Pilha();
        java.lang.Object[] objArray18 = pilha17.item;
        ds.Pilha pilha19 = new ds.Pilha();
        java.lang.Object[] objArray20 = pilha19.item;
        java.lang.Object[] objArray25 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha19.item = objArray25;
        pilha17.item = objArray25;
        java.lang.Object obj28 = null;
        pilha17.empilha(obj28);
        java.lang.Object obj30 = pilha17.desempilha();
        ds.Pilha pilha31 = new ds.Pilha();
        java.lang.Object[] objArray32 = pilha31.item;
        ds.Pilha pilha33 = new ds.Pilha();
        java.lang.Object[] objArray34 = pilha33.item;
        java.lang.Object[] objArray39 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha33.item = objArray39;
        pilha31.item = objArray39;
        java.lang.Object obj42 = null;
        pilha31.empilha(obj42);
        java.lang.Object[] objArray44 = pilha31.item;
        pilha17.item = objArray44;
        int int46 = pilha17.tamanho();
        java.lang.Object[] objArray47 = pilha17.item;
        pilha0.item = objArray47;
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[null, 0, 4, 1]");
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[null, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[null, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[null, 0, 4, 1]");
    }

    @Test
    public void test627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test627");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        pilha0.topo = 1;
        int int5 = pilha0.tamanho();
        java.lang.Object[] objArray6 = pilha0.item;
        java.lang.Object[] objArray7 = pilha0.item;
        java.lang.Object[] objArray8 = pilha0.item;
        boolean boolean9 = pilha0.vazia();
        java.lang.Object[] objArray10 = null;
        pilha0.item = objArray10;
        java.lang.Class<?> wildcardClass12 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test628");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        boolean boolean4 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) "hi!");
        int int7 = pilha0.topo;
        pilha0.topo = ' ';
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test629");
        ds.Pilha pilha0 = new ds.Pilha();
        boolean boolean1 = pilha0.vazia();
        int int2 = pilha0.tamanho();
        int int3 = pilha0.topo;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test630");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        int int18 = pilha0.tamanho();
        boolean boolean19 = pilha0.vazia();
        int int20 = pilha0.topo;
        java.lang.Object[] objArray21 = pilha0.item;
        ds.Pilha pilha22 = new ds.Pilha();
        java.lang.Object[] objArray23 = pilha22.item;
        int int24 = pilha22.topo;
        int int25 = pilha22.topo;
        int int26 = pilha22.tamanho();
        ds.Pilha pilha27 = new ds.Pilha();
        java.lang.Object[] objArray28 = pilha27.item;
        java.lang.Object[] objArray33 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha27.item = objArray33;
        java.lang.Object[] objArray35 = pilha27.item;
        java.lang.Object[] objArray36 = pilha27.item;
        java.lang.Object[] objArray37 = pilha27.item;
        pilha22.item = objArray37;
        boolean boolean39 = pilha22.vazia();
        int int40 = pilha22.tamanho();
        boolean boolean41 = pilha22.vazia();
        int int42 = pilha22.topo;
        java.lang.Object[] objArray43 = pilha22.item;
        pilha0.empilha((java.lang.Object) objArray43);
        java.lang.Object[] objArray45 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[[#, 0, 4, 1], 0, 4, 1]");
    }

    @Test
    public void test631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test631");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        int int5 = pilha0.topo;
        java.lang.Object obj6 = pilha0.desempilha();
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        int int9 = pilha7.topo;
        int int10 = pilha7.topo;
        int int11 = pilha7.tamanho();
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        java.lang.Object[] objArray18 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha12.item = objArray18;
        java.lang.Object[] objArray20 = pilha12.item;
        java.lang.Object[] objArray21 = pilha12.item;
        java.lang.Object[] objArray22 = pilha12.item;
        pilha7.item = objArray22;
        boolean boolean24 = pilha7.vazia();
        ds.Pilha pilha25 = new ds.Pilha();
        java.lang.Object[] objArray26 = pilha25.item;
        ds.Pilha pilha27 = new ds.Pilha();
        java.lang.Object[] objArray28 = pilha27.item;
        java.lang.Object[] objArray33 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha27.item = objArray33;
        pilha25.item = objArray33;
        ds.Pilha pilha36 = new ds.Pilha();
        java.lang.Object[] objArray37 = pilha36.item;
        java.lang.Object[] objArray42 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha36.item = objArray42;
        java.lang.Object[] objArray44 = pilha36.item;
        java.lang.Object[] objArray45 = pilha36.item;
        java.lang.Object[] objArray46 = pilha36.item;
        pilha25.item = objArray46;
        pilha7.item = objArray46;
        pilha0.item = objArray46;
        int int50 = pilha0.topo;
        java.lang.Class<?> wildcardClass51 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test632");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.topo = (short) 1;
        boolean boolean5 = pilha0.vazia();
        ds.Pilha pilha6 = new ds.Pilha();
        java.lang.Object[] objArray7 = pilha6.item;
        int int8 = pilha6.topo;
        pilha6.empilha((java.lang.Object) '4');
        int int11 = pilha6.tamanho();
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        java.lang.Object[] objArray18 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha12.item = objArray18;
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        int int22 = pilha20.topo;
        int int23 = pilha20.topo;
        int int24 = pilha20.tamanho();
        ds.Pilha pilha25 = new ds.Pilha();
        java.lang.Object[] objArray26 = pilha25.item;
        java.lang.Object[] objArray31 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha25.item = objArray31;
        java.lang.Object[] objArray33 = pilha25.item;
        java.lang.Object[] objArray34 = pilha25.item;
        java.lang.Object[] objArray35 = pilha25.item;
        pilha20.item = objArray35;
        pilha12.item = objArray35;
        pilha6.item = objArray35;
        pilha0.item = objArray35;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[#, 0, 4, 1]");
    }

    @Test
    public void test633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test633");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        boolean boolean13 = pilha11.vazia();
        boolean boolean14 = pilha11.vazia();
        boolean boolean15 = pilha11.vazia();
        pilha11.empilha((java.lang.Object) "hi!");
        java.lang.Object obj18 = pilha11.desempilha();
        pilha0.empilha((java.lang.Object) pilha11);
        java.lang.Object[] objArray20 = pilha0.item;
        java.lang.Class<?> wildcardClass21 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test634");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        java.lang.Object[] objArray5 = pilha0.item;
        int int6 = pilha0.tamanho();
        int int7 = pilha0.tamanho();
        int int8 = pilha0.topo;
        java.lang.Object[] objArray9 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(objArray9);
    }

    @Test
    public void test635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test635");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        ds.Pilha pilha18 = new ds.Pilha();
        java.lang.Object[] objArray19 = pilha18.item;
        int int20 = pilha18.topo;
        pilha18.topo = 1;
        int int23 = pilha18.tamanho();
        java.lang.Object[] objArray24 = pilha18.item;
        java.lang.Object[] objArray25 = pilha18.item;
        pilha0.item = objArray25;
        ds.Pilha pilha27 = new ds.Pilha();
        java.lang.Object[] objArray28 = pilha27.item;
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        java.lang.Object[] objArray35 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha29.item = objArray35;
        pilha27.item = objArray35;
        ds.Pilha pilha38 = new ds.Pilha();
        java.lang.Object[] objArray39 = pilha38.item;
        boolean boolean40 = pilha38.vazia();
        boolean boolean41 = pilha38.vazia();
        boolean boolean42 = pilha38.vazia();
        pilha38.empilha((java.lang.Object) "hi!");
        java.lang.Object obj45 = pilha38.desempilha();
        pilha27.empilha((java.lang.Object) pilha38);
        java.lang.Object[] objArray47 = pilha27.item;
        pilha0.item = objArray47;
        java.lang.Object[] objArray49 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "hi!" + "'", obj45, "hi!");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(objArray49);
    }

    @Test
    public void test636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test636");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) (byte) 10);
        ds.Pilha pilha5 = new ds.Pilha();
        boolean boolean6 = pilha5.vazia();
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        int int9 = pilha7.topo;
        int int10 = pilha7.topo;
        int int11 = pilha7.tamanho();
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        java.lang.Object[] objArray18 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha12.item = objArray18;
        java.lang.Object[] objArray20 = pilha12.item;
        pilha7.item = objArray20;
        pilha5.item = objArray20;
        pilha0.item = objArray20;
        int int24 = pilha0.tamanho();
        ds.Pilha pilha25 = new ds.Pilha();
        java.lang.Object[] objArray26 = pilha25.item;
        ds.Pilha pilha27 = new ds.Pilha();
        java.lang.Object[] objArray28 = pilha27.item;
        java.lang.Object[] objArray33 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha27.item = objArray33;
        pilha25.item = objArray33;
        ds.Pilha pilha36 = new ds.Pilha();
        java.lang.Object[] objArray37 = pilha36.item;
        java.lang.Object[] objArray42 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha36.item = objArray42;
        java.lang.Object[] objArray44 = pilha36.item;
        java.lang.Object[] objArray45 = pilha36.item;
        java.lang.Object[] objArray46 = pilha36.item;
        pilha25.item = objArray46;
        ds.Pilha pilha48 = new ds.Pilha();
        java.lang.Object[] objArray49 = pilha48.item;
        java.lang.Object[] objArray54 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha48.item = objArray54;
        java.lang.Object[] objArray56 = pilha48.item;
        java.lang.Object[] objArray57 = pilha48.item;
        ds.Pilha pilha58 = new ds.Pilha();
        java.lang.Object[] objArray59 = pilha58.item;
        int int60 = pilha58.topo;
        int int61 = pilha58.topo;
        int int62 = pilha58.tamanho();
        ds.Pilha pilha63 = new ds.Pilha();
        java.lang.Object[] objArray64 = pilha63.item;
        java.lang.Object[] objArray69 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha63.item = objArray69;
        java.lang.Object[] objArray71 = pilha63.item;
        java.lang.Object[] objArray72 = pilha63.item;
        java.lang.Object[] objArray73 = pilha63.item;
        pilha58.item = objArray73;
        pilha48.empilha((java.lang.Object) pilha58);
        int int76 = pilha58.tamanho();
        int int77 = pilha58.topo;
        java.lang.Object[] objArray78 = pilha58.item;
        pilha25.item = objArray78;
        pilha0.empilha((java.lang.Object) pilha25);
        int int81 = pilha0.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
    }

    @Test
    public void test637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test637");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        boolean boolean8 = pilha0.vazia();
        java.lang.Object[] objArray9 = pilha0.item;
        java.lang.Class<?> wildcardClass10 = objArray9.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test638");
        ds.Pilha pilha0 = new ds.Pilha();
        int int1 = pilha0.tamanho();
        int int2 = pilha0.tamanho();
        pilha0.topo = (byte) 100;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test639");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        java.lang.Object obj5 = pilha0.desempilha();
        ds.Pilha pilha6 = new ds.Pilha();
        java.lang.Object[] objArray7 = pilha6.item;
        int int8 = pilha6.topo;
        int int9 = pilha6.topo;
        int int10 = pilha6.tamanho();
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        java.lang.Object[] objArray17 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha11.item = objArray17;
        java.lang.Object[] objArray19 = pilha11.item;
        java.lang.Object[] objArray20 = pilha11.item;
        java.lang.Object[] objArray21 = pilha11.item;
        pilha6.item = objArray21;
        boolean boolean23 = pilha6.vazia();
        int int24 = pilha6.tamanho();
        boolean boolean25 = pilha6.vazia();
        int int26 = pilha6.topo;
        int int27 = pilha6.tamanho();
        java.lang.Object[] objArray28 = pilha6.item;
        pilha0.item = objArray28;
        int int30 = pilha0.tamanho();
        java.lang.Object[] objArray31 = pilha0.item;
        ds.Pilha pilha32 = new ds.Pilha();
        java.lang.Object[] objArray33 = pilha32.item;
        boolean boolean34 = pilha32.vazia();
        java.lang.Object obj35 = null;
        pilha32.empilha(obj35);
        java.lang.Object[] objArray37 = pilha32.item;
        int int38 = pilha32.tamanho();
        ds.Pilha pilha39 = new ds.Pilha();
        boolean boolean40 = pilha39.vazia();
        ds.Pilha pilha41 = new ds.Pilha();
        java.lang.Object[] objArray42 = pilha41.item;
        int int43 = pilha41.topo;
        int int44 = pilha41.topo;
        int int45 = pilha41.tamanho();
        ds.Pilha pilha46 = new ds.Pilha();
        java.lang.Object[] objArray47 = pilha46.item;
        java.lang.Object[] objArray52 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha46.item = objArray52;
        java.lang.Object[] objArray54 = pilha46.item;
        pilha41.item = objArray54;
        pilha39.item = objArray54;
        java.lang.Object[] objArray57 = pilha39.item;
        java.lang.Object[] objArray58 = pilha39.item;
        pilha32.item = objArray58;
        pilha0.item = objArray58;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[#, 0, 4, 1]");
    }

    @Test
    public void test640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test640");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        pilha0.topo = (short) -1;
        boolean boolean10 = pilha0.vazia();
        java.lang.Object[] objArray11 = pilha0.item;
        boolean boolean12 = pilha0.vazia();
        java.lang.Object[] objArray13 = pilha0.item;
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        int int16 = pilha14.topo;
        int int17 = pilha14.topo;
        int int18 = pilha14.tamanho();
        ds.Pilha pilha19 = new ds.Pilha();
        java.lang.Object[] objArray20 = pilha19.item;
        java.lang.Object[] objArray25 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha19.item = objArray25;
        java.lang.Object[] objArray27 = pilha19.item;
        pilha14.item = objArray27;
        pilha14.topo = (byte) 10;
        pilha14.topo = (-1);
        java.lang.Object[] objArray33 = pilha14.item;
        pilha0.item = objArray33;
        int int35 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test641");
        ds.Pilha pilha0 = new ds.Pilha();
        int int1 = pilha0.tamanho();
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        java.lang.Object[] objArray10 = pilha2.item;
        java.lang.Object[] objArray11 = pilha2.item;
        pilha0.item = objArray11;
        java.lang.Object[] objArray13 = pilha0.item;
        pilha0.topo = ' ';
        int int16 = pilha0.tamanho();
        boolean boolean17 = pilha0.vazia();
        java.lang.Object[] objArray18 = pilha0.item;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = pilha0.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 31");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[#, 0, 4, 1]");
    }

    @Test
    public void test642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test642");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        boolean boolean13 = pilha11.vazia();
        boolean boolean14 = pilha11.vazia();
        boolean boolean15 = pilha11.vazia();
        pilha11.empilha((java.lang.Object) "hi!");
        java.lang.Object obj18 = pilha11.desempilha();
        pilha0.empilha((java.lang.Object) pilha11);
        int int20 = pilha0.tamanho();
        java.lang.Object[] objArray21 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(objArray21);
    }

    @Test
    public void test643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test643");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        int int18 = pilha0.tamanho();
        boolean boolean19 = pilha0.vazia();
        int int20 = pilha0.topo;
        ds.Pilha pilha21 = new ds.Pilha();
        java.lang.Object[] objArray22 = pilha21.item;
        int int23 = pilha21.topo;
        int int24 = pilha21.topo;
        int int25 = pilha21.tamanho();
        ds.Pilha pilha26 = new ds.Pilha();
        java.lang.Object[] objArray27 = pilha26.item;
        java.lang.Object[] objArray32 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha26.item = objArray32;
        java.lang.Object[] objArray34 = pilha26.item;
        pilha21.item = objArray34;
        int int36 = pilha21.topo;
        pilha0.empilha((java.lang.Object) int36);
        int int38 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }

    @Test
    public void test644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test644");
        ds.Pilha pilha0 = new ds.Pilha();
        int int1 = pilha0.tamanho();
        int int2 = pilha0.tamanho();
        boolean boolean3 = pilha0.vazia();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test645");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) (byte) 10);
        ds.Pilha pilha5 = new ds.Pilha();
        boolean boolean6 = pilha5.vazia();
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        int int9 = pilha7.topo;
        int int10 = pilha7.topo;
        int int11 = pilha7.tamanho();
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        java.lang.Object[] objArray18 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha12.item = objArray18;
        java.lang.Object[] objArray20 = pilha12.item;
        pilha7.item = objArray20;
        pilha5.item = objArray20;
        pilha0.item = objArray20;
        int int24 = pilha0.tamanho();
        ds.Pilha pilha25 = new ds.Pilha();
        java.lang.Object[] objArray26 = pilha25.item;
        ds.Pilha pilha27 = new ds.Pilha();
        java.lang.Object[] objArray28 = pilha27.item;
        java.lang.Object[] objArray33 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha27.item = objArray33;
        pilha25.item = objArray33;
        ds.Pilha pilha36 = new ds.Pilha();
        java.lang.Object[] objArray37 = pilha36.item;
        java.lang.Object[] objArray42 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha36.item = objArray42;
        java.lang.Object[] objArray44 = pilha36.item;
        java.lang.Object[] objArray45 = pilha36.item;
        java.lang.Object[] objArray46 = pilha36.item;
        pilha25.item = objArray46;
        ds.Pilha pilha48 = new ds.Pilha();
        java.lang.Object[] objArray49 = pilha48.item;
        java.lang.Object[] objArray54 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha48.item = objArray54;
        java.lang.Object[] objArray56 = pilha48.item;
        java.lang.Object[] objArray57 = pilha48.item;
        ds.Pilha pilha58 = new ds.Pilha();
        java.lang.Object[] objArray59 = pilha58.item;
        int int60 = pilha58.topo;
        int int61 = pilha58.topo;
        int int62 = pilha58.tamanho();
        ds.Pilha pilha63 = new ds.Pilha();
        java.lang.Object[] objArray64 = pilha63.item;
        java.lang.Object[] objArray69 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha63.item = objArray69;
        java.lang.Object[] objArray71 = pilha63.item;
        java.lang.Object[] objArray72 = pilha63.item;
        java.lang.Object[] objArray73 = pilha63.item;
        pilha58.item = objArray73;
        pilha48.empilha((java.lang.Object) pilha58);
        int int76 = pilha58.tamanho();
        int int77 = pilha58.topo;
        java.lang.Object[] objArray78 = pilha58.item;
        pilha25.item = objArray78;
        pilha0.empilha((java.lang.Object) pilha25);
        java.lang.Object[] objArray81 = pilha25.item;
        boolean boolean82 = pilha25.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test646");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        pilha0.item = objArray13;
        pilha0.topo = (byte) 10;
        int int17 = pilha0.tamanho();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = pilha0.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
    }

    @Test
    public void test647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test647");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        pilha0.topo = 100;
        java.lang.Object obj6 = pilha0.desempilha();
        boolean boolean7 = pilha0.vazia();
        pilha0.topo = 2;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        java.lang.Object[] objArray18 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha12.item = objArray18;
        pilha10.item = objArray18;
        ds.Pilha pilha21 = new ds.Pilha();
        java.lang.Object[] objArray22 = pilha21.item;
        boolean boolean23 = pilha21.vazia();
        boolean boolean24 = pilha21.vazia();
        boolean boolean25 = pilha21.vazia();
        pilha21.empilha((java.lang.Object) "hi!");
        java.lang.Object obj28 = pilha21.desempilha();
        pilha10.empilha((java.lang.Object) pilha21);
        pilha21.empilha((java.lang.Object) 'a');
        int int32 = pilha21.tamanho();
        int int33 = pilha21.tamanho();
        pilha0.empilha((java.lang.Object) int33);
        ds.Pilha pilha35 = new ds.Pilha();
        java.lang.Object[] objArray36 = pilha35.item;
        boolean boolean37 = pilha35.vazia();
        boolean boolean38 = pilha35.vazia();
        boolean boolean39 = pilha35.vazia();
        pilha35.empilha((java.lang.Object) 1.0f);
        boolean boolean42 = pilha35.vazia();
        pilha35.topo = (byte) -1;
        java.lang.Object[] objArray45 = pilha35.item;
        pilha0.empilha((java.lang.Object) objArray45);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "hi!" + "'", obj28, "hi!");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray45);
    }

    @Test
    public void test648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test648");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        pilha0.item = objArray13;
        pilha0.topo = (byte) 10;
        int int17 = pilha0.tamanho();
        ds.Pilha pilha18 = new ds.Pilha();
        java.lang.Object[] objArray19 = pilha18.item;
        boolean boolean20 = pilha18.vazia();
        java.lang.Object obj21 = null;
        pilha18.empilha(obj21);
        int int23 = pilha18.topo;
        java.lang.Object obj24 = pilha18.desempilha();
        pilha18.empilha((java.lang.Object) false);
        pilha18.topo = (short) 1;
        ds.Pilha pilha29 = new ds.Pilha();
        boolean boolean30 = pilha29.vazia();
        int int31 = pilha29.tamanho();
        pilha18.empilha((java.lang.Object) pilha29);
        // The following exception was thrown during execution in test generation
        try {
            pilha0.empilha((java.lang.Object) pilha18);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test649");
        ds.Pilha pilha0 = new ds.Pilha();
        boolean boolean1 = pilha0.vazia();
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        int int4 = pilha2.topo;
        int int5 = pilha2.topo;
        int int6 = pilha2.tamanho();
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        java.lang.Object[] objArray13 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha7.item = objArray13;
        java.lang.Object[] objArray15 = pilha7.item;
        pilha2.item = objArray15;
        pilha0.item = objArray15;
        java.lang.Object[] objArray18 = pilha0.item;
        boolean boolean19 = pilha0.vazia();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        boolean boolean22 = pilha20.vazia();
        pilha20.topo = (byte) 1;
        ds.Pilha pilha25 = new ds.Pilha();
        java.lang.Object[] objArray26 = pilha25.item;
        int int27 = pilha25.topo;
        ds.Pilha pilha28 = new ds.Pilha();
        java.lang.Object[] objArray29 = pilha28.item;
        int int30 = pilha28.topo;
        int int31 = pilha28.topo;
        int int32 = pilha28.tamanho();
        ds.Pilha pilha33 = new ds.Pilha();
        java.lang.Object[] objArray34 = pilha33.item;
        java.lang.Object[] objArray39 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha33.item = objArray39;
        java.lang.Object[] objArray41 = pilha33.item;
        java.lang.Object[] objArray42 = pilha33.item;
        java.lang.Object[] objArray43 = pilha33.item;
        pilha28.item = objArray43;
        boolean boolean45 = pilha28.vazia();
        int int46 = pilha28.tamanho();
        int int47 = pilha28.tamanho();
        java.lang.Class<?> wildcardClass48 = pilha28.getClass();
        pilha25.empilha((java.lang.Object) wildcardClass48);
        pilha20.empilha((java.lang.Object) pilha25);
        int int51 = pilha25.topo;
        java.lang.Object obj52 = pilha25.desempilha();
        pilha0.empilha((java.lang.Object) pilha25);
        int int54 = pilha0.topo;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class ds.Pilha");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class ds.Pilha");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class ds.Pilha");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
    }

    @Test
    public void test650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test650");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        pilha0.topo = (short) -1;
        pilha0.topo = (-1);
        int int12 = pilha0.topo;
        ds.Pilha pilha13 = new ds.Pilha();
        java.lang.Object[] objArray14 = pilha13.item;
        int int15 = pilha13.tamanho();
        pilha13.empilha((java.lang.Object) 0.0d);
        java.lang.Object[] objArray18 = pilha13.item;
        boolean boolean19 = pilha13.vazia();
        int int20 = pilha13.topo;
        int int21 = pilha13.tamanho();
        ds.Pilha pilha22 = new ds.Pilha();
        int int23 = pilha22.tamanho();
        ds.Pilha pilha24 = new ds.Pilha();
        java.lang.Object[] objArray25 = pilha24.item;
        java.lang.Object[] objArray30 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha24.item = objArray30;
        java.lang.Object[] objArray32 = pilha24.item;
        java.lang.Object[] objArray33 = pilha24.item;
        pilha22.item = objArray33;
        pilha13.item = objArray33;
        pilha0.item = objArray33;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[#, 0, 4, 1]");
    }

    @Test
    public void test651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test651");
        ds.Pilha pilha0 = new ds.Pilha();
        int int1 = pilha0.tamanho();
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        java.lang.Object[] objArray10 = pilha2.item;
        java.lang.Object[] objArray11 = pilha2.item;
        pilha0.item = objArray11;
        java.lang.Object[] objArray13 = pilha0.item;
        java.lang.Object[] objArray14 = pilha0.item;
        boolean boolean15 = pilha0.vazia();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test652");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        pilha0.topo = 1;
        int int5 = pilha0.tamanho();
        java.lang.Object[] objArray6 = pilha0.item;
        int int7 = pilha0.topo;
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        int int10 = pilha8.topo;
        int int11 = pilha8.topo;
        int int12 = pilha8.tamanho();
        ds.Pilha pilha13 = new ds.Pilha();
        java.lang.Object[] objArray14 = pilha13.item;
        java.lang.Object[] objArray19 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha13.item = objArray19;
        java.lang.Object[] objArray21 = pilha13.item;
        pilha8.item = objArray21;
        pilha8.topo = (byte) 10;
        pilha8.topo = (-1);
        java.lang.Object[] objArray27 = pilha8.item;
        pilha8.topo = '4';
        pilha0.empilha((java.lang.Object) '4');
        int int31 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    }

    @Test
    public void test653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test653");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        pilha0.topo = 1;
        int int5 = pilha0.tamanho();
        java.lang.Object[] objArray6 = pilha0.item;
        java.lang.Object[] objArray7 = pilha0.item;
        java.lang.Object[] objArray8 = pilha0.item;
        ds.Pilha pilha9 = new ds.Pilha();
        java.lang.Object[] objArray10 = pilha9.item;
        int int11 = pilha9.topo;
        int int12 = pilha9.topo;
        int int13 = pilha9.tamanho();
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        java.lang.Object[] objArray20 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha14.item = objArray20;
        java.lang.Object[] objArray22 = pilha14.item;
        java.lang.Object[] objArray23 = pilha14.item;
        java.lang.Object[] objArray24 = pilha14.item;
        pilha9.item = objArray24;
        boolean boolean26 = pilha9.vazia();
        int int27 = pilha9.tamanho();
        int int28 = pilha9.tamanho();
        java.lang.Object[] objArray29 = pilha9.item;
        pilha0.item = objArray29;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
    }

    @Test
    public void test654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test654");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        boolean boolean5 = pilha0.vazia();
        boolean boolean6 = pilha0.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test655");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.tamanho();
        pilha0.empilha((java.lang.Object) 0.0d);
        java.lang.Object obj5 = pilha0.desempilha();
        ds.Pilha pilha6 = new ds.Pilha();
        java.lang.Object[] objArray7 = pilha6.item;
        int int8 = pilha6.topo;
        int int9 = pilha6.topo;
        int int10 = pilha6.tamanho();
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        java.lang.Object[] objArray17 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha11.item = objArray17;
        java.lang.Object[] objArray19 = pilha11.item;
        java.lang.Object[] objArray20 = pilha11.item;
        java.lang.Object[] objArray21 = pilha11.item;
        pilha6.item = objArray21;
        boolean boolean23 = pilha6.vazia();
        int int24 = pilha6.tamanho();
        int int25 = pilha6.tamanho();
        java.lang.Object[] objArray26 = pilha6.item;
        pilha0.empilha((java.lang.Object) objArray26);
        ds.Pilha pilha28 = new ds.Pilha();
        java.lang.Object[] objArray29 = pilha28.item;
        boolean boolean30 = pilha28.vazia();
        pilha28.topo = (byte) 1;
        ds.Pilha pilha33 = new ds.Pilha();
        java.lang.Object[] objArray34 = pilha33.item;
        int int35 = pilha33.topo;
        ds.Pilha pilha36 = new ds.Pilha();
        java.lang.Object[] objArray37 = pilha36.item;
        int int38 = pilha36.topo;
        int int39 = pilha36.topo;
        int int40 = pilha36.tamanho();
        ds.Pilha pilha41 = new ds.Pilha();
        java.lang.Object[] objArray42 = pilha41.item;
        java.lang.Object[] objArray47 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha41.item = objArray47;
        java.lang.Object[] objArray49 = pilha41.item;
        java.lang.Object[] objArray50 = pilha41.item;
        java.lang.Object[] objArray51 = pilha41.item;
        pilha36.item = objArray51;
        boolean boolean53 = pilha36.vazia();
        int int54 = pilha36.tamanho();
        int int55 = pilha36.tamanho();
        java.lang.Class<?> wildcardClass56 = pilha36.getClass();
        pilha33.empilha((java.lang.Object) wildcardClass56);
        pilha28.empilha((java.lang.Object) pilha33);
        pilha0.empilha((java.lang.Object) pilha33);
        ds.Pilha pilha60 = new ds.Pilha();
        java.lang.Object[] objArray61 = pilha60.item;
        java.lang.Object[] objArray66 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha60.item = objArray66;
        java.lang.Object[] objArray68 = pilha60.item;
        java.lang.Object[] objArray69 = null;
        pilha60.item = objArray69;
        ds.Pilha pilha71 = new ds.Pilha();
        java.lang.Object[] objArray72 = pilha71.item;
        java.lang.Object[] objArray77 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha71.item = objArray77;
        pilha60.item = objArray77;
        int int80 = pilha60.tamanho();
        pilha60.topo = 0;
        ds.Pilha pilha83 = new ds.Pilha();
        java.lang.Object[] objArray84 = pilha83.item;
        pilha60.item = objArray84;
        pilha33.item = objArray84;
        java.lang.Object obj87 = pilha33.desempilha();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0.0d + "'", obj5, 0.0d);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test656");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        boolean boolean8 = pilha0.vazia();
        java.lang.Object[] objArray9 = pilha0.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        boolean boolean12 = pilha10.vazia();
        pilha10.topo = (short) 1;
        boolean boolean15 = pilha10.vazia();
        java.lang.Class<?> wildcardClass16 = pilha10.getClass();
        pilha0.empilha((java.lang.Object) wildcardClass16);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[class ds.Pilha, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[class ds.Pilha, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[class ds.Pilha, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[class ds.Pilha, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test657");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.tamanho();
        pilha0.empilha((java.lang.Object) 0.0d);
        java.lang.Object obj5 = pilha0.desempilha();
        ds.Pilha pilha6 = new ds.Pilha();
        java.lang.Object[] objArray7 = pilha6.item;
        int int8 = pilha6.topo;
        int int9 = pilha6.topo;
        int int10 = pilha6.tamanho();
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        java.lang.Object[] objArray17 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha11.item = objArray17;
        java.lang.Object[] objArray19 = pilha11.item;
        java.lang.Object[] objArray20 = pilha11.item;
        java.lang.Object[] objArray21 = pilha11.item;
        pilha6.item = objArray21;
        boolean boolean23 = pilha6.vazia();
        int int24 = pilha6.tamanho();
        int int25 = pilha6.tamanho();
        java.lang.Object[] objArray26 = pilha6.item;
        pilha0.empilha((java.lang.Object) objArray26);
        ds.Pilha pilha28 = new ds.Pilha();
        java.lang.Object[] objArray29 = pilha28.item;
        boolean boolean30 = pilha28.vazia();
        pilha28.topo = (byte) 1;
        ds.Pilha pilha33 = new ds.Pilha();
        java.lang.Object[] objArray34 = pilha33.item;
        int int35 = pilha33.topo;
        ds.Pilha pilha36 = new ds.Pilha();
        java.lang.Object[] objArray37 = pilha36.item;
        int int38 = pilha36.topo;
        int int39 = pilha36.topo;
        int int40 = pilha36.tamanho();
        ds.Pilha pilha41 = new ds.Pilha();
        java.lang.Object[] objArray42 = pilha41.item;
        java.lang.Object[] objArray47 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha41.item = objArray47;
        java.lang.Object[] objArray49 = pilha41.item;
        java.lang.Object[] objArray50 = pilha41.item;
        java.lang.Object[] objArray51 = pilha41.item;
        pilha36.item = objArray51;
        boolean boolean53 = pilha36.vazia();
        int int54 = pilha36.tamanho();
        int int55 = pilha36.tamanho();
        java.lang.Class<?> wildcardClass56 = pilha36.getClass();
        pilha33.empilha((java.lang.Object) wildcardClass56);
        pilha28.empilha((java.lang.Object) pilha33);
        pilha0.empilha((java.lang.Object) pilha33);
        ds.Pilha pilha60 = new ds.Pilha();
        java.lang.Object[] objArray61 = pilha60.item;
        java.lang.Object[] objArray66 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha60.item = objArray66;
        java.lang.Object[] objArray68 = pilha60.item;
        java.lang.Object[] objArray69 = null;
        pilha60.item = objArray69;
        ds.Pilha pilha71 = new ds.Pilha();
        java.lang.Object[] objArray72 = pilha71.item;
        java.lang.Object[] objArray77 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha71.item = objArray77;
        pilha60.item = objArray77;
        int int80 = pilha60.tamanho();
        pilha60.topo = 0;
        ds.Pilha pilha83 = new ds.Pilha();
        java.lang.Object[] objArray84 = pilha83.item;
        pilha60.item = objArray84;
        pilha33.item = objArray84;
        pilha33.topo = (byte) 0;
        boolean boolean89 = pilha33.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0.0d + "'", obj5, 0.0d);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test658");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        java.lang.Object[] objArray10 = pilha0.item;
        boolean boolean11 = pilha0.vazia();
        java.lang.Object[] objArray12 = pilha0.item;
        pilha0.topo = 10;
        int int15 = pilha0.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
    }

    @Test
    public void test659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test659");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        java.lang.Object[] objArray17 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha11.item = objArray17;
        java.lang.Object[] objArray19 = pilha11.item;
        java.lang.Object[] objArray20 = pilha11.item;
        java.lang.Object[] objArray21 = pilha11.item;
        pilha0.item = objArray21;
        ds.Pilha pilha23 = new ds.Pilha();
        java.lang.Object[] objArray24 = pilha23.item;
        java.lang.Object[] objArray29 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha23.item = objArray29;
        java.lang.Object[] objArray31 = pilha23.item;
        java.lang.Object[] objArray32 = pilha23.item;
        ds.Pilha pilha33 = new ds.Pilha();
        java.lang.Object[] objArray34 = pilha33.item;
        int int35 = pilha33.topo;
        int int36 = pilha33.topo;
        int int37 = pilha33.tamanho();
        ds.Pilha pilha38 = new ds.Pilha();
        java.lang.Object[] objArray39 = pilha38.item;
        java.lang.Object[] objArray44 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha38.item = objArray44;
        java.lang.Object[] objArray46 = pilha38.item;
        java.lang.Object[] objArray47 = pilha38.item;
        java.lang.Object[] objArray48 = pilha38.item;
        pilha33.item = objArray48;
        pilha23.empilha((java.lang.Object) pilha33);
        int int51 = pilha33.tamanho();
        int int52 = pilha33.topo;
        java.lang.Object[] objArray53 = pilha33.item;
        pilha0.item = objArray53;
        java.lang.Class<?> wildcardClass55 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test660");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        int int12 = pilha10.topo;
        int int13 = pilha10.topo;
        int int14 = pilha10.tamanho();
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        java.lang.Object[] objArray21 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha15.item = objArray21;
        java.lang.Object[] objArray23 = pilha15.item;
        java.lang.Object[] objArray24 = pilha15.item;
        java.lang.Object[] objArray25 = pilha15.item;
        pilha10.item = objArray25;
        pilha0.empilha((java.lang.Object) pilha10);
        ds.Pilha pilha28 = new ds.Pilha();
        java.lang.Object[] objArray29 = pilha28.item;
        boolean boolean30 = pilha28.vazia();
        boolean boolean31 = pilha28.vazia();
        java.lang.Object[] objArray32 = pilha28.item;
        pilha10.item = objArray32;
        ds.Pilha pilha34 = new ds.Pilha();
        java.lang.Object[] objArray35 = pilha34.item;
        int int36 = pilha34.topo;
        int int37 = pilha34.topo;
        int int38 = pilha34.tamanho();
        ds.Pilha pilha39 = new ds.Pilha();
        java.lang.Object[] objArray40 = pilha39.item;
        java.lang.Object[] objArray45 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha39.item = objArray45;
        java.lang.Object[] objArray47 = pilha39.item;
        java.lang.Object[] objArray48 = pilha39.item;
        java.lang.Object[] objArray49 = pilha39.item;
        pilha34.item = objArray49;
        boolean boolean51 = pilha34.vazia();
        int int52 = pilha34.tamanho();
        boolean boolean53 = pilha34.vazia();
        int int54 = pilha34.topo;
        java.lang.Object[] objArray55 = pilha34.item;
        int int56 = pilha34.tamanho();
        pilha34.topo = (-1);
        pilha10.empilha((java.lang.Object) pilha34);
        java.lang.Object obj60 = pilha10.desempilha();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test661");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) (byte) 10);
        ds.Pilha pilha5 = new ds.Pilha();
        boolean boolean6 = pilha5.vazia();
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        int int9 = pilha7.topo;
        int int10 = pilha7.topo;
        int int11 = pilha7.tamanho();
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        java.lang.Object[] objArray18 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha12.item = objArray18;
        java.lang.Object[] objArray20 = pilha12.item;
        pilha7.item = objArray20;
        pilha5.item = objArray20;
        pilha0.item = objArray20;
        int int24 = pilha0.tamanho();
        ds.Pilha pilha25 = new ds.Pilha();
        java.lang.Object[] objArray26 = pilha25.item;
        ds.Pilha pilha27 = new ds.Pilha();
        java.lang.Object[] objArray28 = pilha27.item;
        java.lang.Object[] objArray33 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha27.item = objArray33;
        pilha25.item = objArray33;
        ds.Pilha pilha36 = new ds.Pilha();
        java.lang.Object[] objArray37 = pilha36.item;
        java.lang.Object[] objArray42 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha36.item = objArray42;
        java.lang.Object[] objArray44 = pilha36.item;
        java.lang.Object[] objArray45 = pilha36.item;
        java.lang.Object[] objArray46 = pilha36.item;
        pilha25.item = objArray46;
        ds.Pilha pilha48 = new ds.Pilha();
        java.lang.Object[] objArray49 = pilha48.item;
        java.lang.Object[] objArray54 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha48.item = objArray54;
        java.lang.Object[] objArray56 = pilha48.item;
        java.lang.Object[] objArray57 = pilha48.item;
        ds.Pilha pilha58 = new ds.Pilha();
        java.lang.Object[] objArray59 = pilha58.item;
        int int60 = pilha58.topo;
        int int61 = pilha58.topo;
        int int62 = pilha58.tamanho();
        ds.Pilha pilha63 = new ds.Pilha();
        java.lang.Object[] objArray64 = pilha63.item;
        java.lang.Object[] objArray69 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha63.item = objArray69;
        java.lang.Object[] objArray71 = pilha63.item;
        java.lang.Object[] objArray72 = pilha63.item;
        java.lang.Object[] objArray73 = pilha63.item;
        pilha58.item = objArray73;
        pilha48.empilha((java.lang.Object) pilha58);
        int int76 = pilha58.tamanho();
        int int77 = pilha58.topo;
        java.lang.Object[] objArray78 = pilha58.item;
        pilha25.item = objArray78;
        pilha0.empilha((java.lang.Object) pilha25);
        int int81 = pilha0.tamanho();
        int int82 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
    }

    @Test
    public void test662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test662");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        pilha0.topo = 0;
        int int6 = pilha0.tamanho();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = pilha0.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: Erro: A pilha esta vazia");
        } catch (java.lang.Exception e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test663");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        boolean boolean13 = pilha11.vazia();
        boolean boolean14 = pilha11.vazia();
        boolean boolean15 = pilha11.vazia();
        pilha11.empilha((java.lang.Object) "hi!");
        java.lang.Object obj18 = pilha11.desempilha();
        pilha0.empilha((java.lang.Object) pilha11);
        int int20 = pilha0.tamanho();
        java.lang.Class<?> wildcardClass21 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test664");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        pilha0.item = objArray13;
        int int15 = pilha0.topo;
        ds.Pilha pilha16 = new ds.Pilha();
        java.lang.Object[] objArray17 = pilha16.item;
        java.lang.Object[] objArray22 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha16.item = objArray22;
        java.lang.Object[] objArray24 = pilha16.item;
        java.lang.Object[] objArray25 = pilha16.item;
        pilha16.empilha((java.lang.Object) 100.0d);
        int int28 = pilha16.topo;
        int int29 = pilha16.topo;
        java.lang.Object obj30 = pilha16.desempilha();
        int int31 = pilha16.topo;
        ds.Pilha pilha32 = new ds.Pilha();
        java.lang.Object[] objArray33 = pilha32.item;
        int int34 = pilha32.topo;
        int int35 = pilha32.topo;
        int int36 = pilha32.tamanho();
        ds.Pilha pilha37 = new ds.Pilha();
        java.lang.Object[] objArray38 = pilha37.item;
        java.lang.Object[] objArray43 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha37.item = objArray43;
        java.lang.Object[] objArray45 = pilha37.item;
        java.lang.Object[] objArray46 = pilha37.item;
        java.lang.Object[] objArray47 = pilha37.item;
        pilha32.item = objArray47;
        boolean boolean49 = pilha32.vazia();
        int int50 = pilha32.tamanho();
        boolean boolean51 = pilha32.vazia();
        int int52 = pilha32.topo;
        java.lang.Object[] objArray53 = pilha32.item;
        ds.Pilha pilha54 = new ds.Pilha();
        java.lang.Object[] objArray55 = pilha54.item;
        int int56 = pilha54.topo;
        int int57 = pilha54.topo;
        int int58 = pilha54.tamanho();
        ds.Pilha pilha59 = new ds.Pilha();
        java.lang.Object[] objArray60 = pilha59.item;
        java.lang.Object[] objArray65 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha59.item = objArray65;
        java.lang.Object[] objArray67 = pilha59.item;
        java.lang.Object[] objArray68 = pilha59.item;
        java.lang.Object[] objArray69 = pilha59.item;
        pilha54.item = objArray69;
        boolean boolean71 = pilha54.vazia();
        int int72 = pilha54.tamanho();
        boolean boolean73 = pilha54.vazia();
        int int74 = pilha54.topo;
        java.lang.Object[] objArray75 = pilha54.item;
        pilha32.empilha((java.lang.Object) objArray75);
        pilha16.item = objArray75;
        pilha0.item = objArray75;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[100.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[100.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[100.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[100.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[100.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[100.0, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100.0d + "'", obj30, 100.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[[#, 0, 4, 1], 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[#, 0, 4, 1]");
    }

    @Test
    public void test665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test665");
        ds.Pilha pilha0 = new ds.Pilha();
        int int1 = pilha0.tamanho();
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        java.lang.Object[] objArray10 = pilha2.item;
        java.lang.Object[] objArray11 = pilha2.item;
        pilha0.item = objArray11;
        java.lang.Object[] objArray13 = pilha0.item;
        int int14 = pilha0.topo;
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        int int18 = pilha15.topo;
        int int19 = pilha15.tamanho();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        java.lang.Object[] objArray28 = pilha20.item;
        java.lang.Object[] objArray29 = pilha20.item;
        java.lang.Object[] objArray30 = pilha20.item;
        pilha15.item = objArray30;
        boolean boolean32 = pilha15.vazia();
        int int33 = pilha15.tamanho();
        boolean boolean34 = pilha15.vazia();
        int int35 = pilha15.topo;
        int int36 = pilha15.tamanho();
        pilha0.empilha((java.lang.Object) int36);
        pilha0.topo = (short) 1;
        java.lang.Class<?> wildcardClass40 = pilha0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[0, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test666");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        java.lang.Object[] objArray10 = pilha0.item;
        boolean boolean11 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) 10.0d);
        pilha0.topo = 0;
        java.lang.Object[] objArray16 = pilha0.item;
        ds.Pilha pilha17 = new ds.Pilha();
        java.lang.Object[] objArray18 = pilha17.item;
        int int19 = pilha17.topo;
        pilha17.topo = 1;
        int int22 = pilha17.tamanho();
        java.lang.Object[] objArray23 = pilha17.item;
        java.lang.Object[] objArray24 = pilha17.item;
        boolean boolean25 = pilha17.vazia();
        java.lang.Object[] objArray26 = pilha17.item;
        java.lang.Object[] objArray27 = pilha17.item;
        pilha0.empilha((java.lang.Object) pilha17);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(objArray27);
    }

    @Test
    public void test667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test667");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        int int5 = pilha0.topo;
        java.lang.Object obj6 = pilha0.desempilha();
        pilha0.empilha((java.lang.Object) false);
        int int9 = pilha0.tamanho();
        java.lang.Object obj10 = pilha0.desempilha();
        java.lang.Object[] objArray11 = pilha0.item;
        int int12 = pilha0.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + false + "'", obj10, false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test668");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        int int18 = pilha0.tamanho();
        java.lang.Object[] objArray19 = pilha0.item;
        int int20 = pilha0.topo;
        pilha0.empilha((java.lang.Object) "");
        java.lang.Object[] objArray23 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[, 0, 4, 1]");
    }

    @Test
    public void test669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test669");
        ds.Pilha pilha0 = new ds.Pilha();
        int int1 = pilha0.tamanho();
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        java.lang.Object[] objArray10 = pilha2.item;
        java.lang.Object[] objArray11 = pilha2.item;
        pilha0.item = objArray11;
        java.lang.Object[] objArray13 = pilha0.item;
        int int14 = pilha0.topo;
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        int int18 = pilha15.topo;
        int int19 = pilha15.tamanho();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        java.lang.Object[] objArray28 = pilha20.item;
        java.lang.Object[] objArray29 = pilha20.item;
        java.lang.Object[] objArray30 = pilha20.item;
        pilha15.item = objArray30;
        boolean boolean32 = pilha15.vazia();
        int int33 = pilha15.tamanho();
        boolean boolean34 = pilha15.vazia();
        int int35 = pilha15.topo;
        int int36 = pilha15.tamanho();
        pilha0.empilha((java.lang.Object) int36);
        java.lang.Object obj38 = pilha0.desempilha();
        pilha0.topo = 1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[0, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
    }

    @Test
    public void test670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test670");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        java.lang.Object obj11 = null;
        pilha0.empilha(obj11);
        java.lang.Object[] objArray13 = pilha0.item;
        java.lang.Object[] objArray14 = pilha0.item;
        int int15 = pilha0.tamanho();
        int int16 = pilha0.topo;
        boolean boolean17 = pilha0.vazia();
        ds.Pilha pilha18 = new ds.Pilha();
        int int19 = pilha18.tamanho();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        java.lang.Object[] objArray28 = pilha20.item;
        java.lang.Object[] objArray29 = pilha20.item;
        pilha18.item = objArray29;
        java.lang.Object[] objArray31 = pilha18.item;
        pilha18.topo = ' ';
        pilha0.empilha((java.lang.Object) pilha18);
        pilha0.topo = (byte) 0;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[#, 0, 4, 1]");
    }

    @Test
    public void test671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test671");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) (byte) 10);
        ds.Pilha pilha5 = new ds.Pilha();
        boolean boolean6 = pilha5.vazia();
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        int int9 = pilha7.topo;
        int int10 = pilha7.topo;
        int int11 = pilha7.tamanho();
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        java.lang.Object[] objArray18 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha12.item = objArray18;
        java.lang.Object[] objArray20 = pilha12.item;
        pilha7.item = objArray20;
        pilha5.item = objArray20;
        pilha0.item = objArray20;
        int int24 = pilha0.tamanho();
        boolean boolean25 = pilha0.vazia();
        ds.Pilha pilha26 = new ds.Pilha();
        java.lang.Object[] objArray27 = pilha26.item;
        ds.Pilha pilha28 = new ds.Pilha();
        java.lang.Object[] objArray29 = pilha28.item;
        java.lang.Object[] objArray34 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha28.item = objArray34;
        pilha26.item = objArray34;
        ds.Pilha pilha37 = new ds.Pilha();
        java.lang.Object[] objArray38 = pilha37.item;
        java.lang.Object[] objArray43 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha37.item = objArray43;
        java.lang.Object[] objArray45 = pilha37.item;
        java.lang.Object[] objArray46 = pilha37.item;
        java.lang.Object[] objArray47 = pilha37.item;
        pilha26.item = objArray47;
        java.lang.Class<?> wildcardClass49 = objArray47.getClass();
        pilha0.empilha((java.lang.Object) wildcardClass49);
        ds.Pilha pilha51 = new ds.Pilha();
        java.lang.Object[] objArray52 = pilha51.item;
        java.lang.Object[] objArray57 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha51.item = objArray57;
        java.lang.Object[] objArray59 = pilha51.item;
        java.lang.Object[] objArray60 = pilha51.item;
        ds.Pilha pilha61 = new ds.Pilha();
        java.lang.Object[] objArray62 = pilha61.item;
        int int63 = pilha61.topo;
        int int64 = pilha61.topo;
        int int65 = pilha61.tamanho();
        ds.Pilha pilha66 = new ds.Pilha();
        java.lang.Object[] objArray67 = pilha66.item;
        java.lang.Object[] objArray72 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha66.item = objArray72;
        java.lang.Object[] objArray74 = pilha66.item;
        java.lang.Object[] objArray75 = pilha66.item;
        java.lang.Object[] objArray76 = pilha66.item;
        pilha61.item = objArray76;
        pilha51.empilha((java.lang.Object) pilha61);
        int int79 = pilha61.tamanho();
        int int80 = pilha61.topo;
        java.lang.Object[] objArray81 = pilha61.item;
        java.lang.Object[] objArray82 = pilha61.item;
        ds.Pilha pilha83 = new ds.Pilha();
        java.lang.Object[] objArray84 = pilha83.item;
        boolean boolean85 = pilha83.vazia();
        boolean boolean86 = pilha83.vazia();
        int int87 = pilha83.tamanho();
        java.lang.Object[] objArray88 = pilha83.item;
        pilha61.item = objArray88;
        pilha0.item = objArray88;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[#, class [Ljava.lang.Object;, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[#, class [Ljava.lang.Object;, 4, 1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, class [Ljava.lang.Object;, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, class [Ljava.lang.Object;, 4, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(objArray88);
    }

    @Test
    public void test672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test672");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        pilha0.topo = (short) -1;
        pilha0.topo = (-1);
        int int12 = pilha0.topo;
        boolean boolean13 = pilha0.vazia();
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        int int16 = pilha14.tamanho();
        pilha14.empilha((java.lang.Object) 0.0d);
        java.lang.Object[] objArray19 = pilha14.item;
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        boolean boolean22 = pilha20.vazia();
        pilha20.topo = (byte) 1;
        ds.Pilha pilha25 = new ds.Pilha();
        java.lang.Object[] objArray26 = pilha25.item;
        ds.Pilha pilha27 = new ds.Pilha();
        java.lang.Object[] objArray28 = pilha27.item;
        java.lang.Object[] objArray33 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha27.item = objArray33;
        pilha25.item = objArray33;
        ds.Pilha pilha36 = new ds.Pilha();
        java.lang.Object[] objArray37 = pilha36.item;
        java.lang.Object[] objArray42 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha36.item = objArray42;
        java.lang.Object[] objArray44 = pilha36.item;
        java.lang.Object[] objArray45 = pilha36.item;
        java.lang.Object[] objArray46 = pilha36.item;
        pilha25.item = objArray46;
        java.lang.Class<?> wildcardClass48 = objArray46.getClass();
        ds.Pilha pilha49 = new ds.Pilha();
        java.lang.Object[] objArray50 = pilha49.item;
        int int51 = pilha49.tamanho();
        ds.Pilha pilha55 = new ds.Pilha();
        java.lang.Object[] objArray56 = pilha55.item;
        int int57 = pilha55.topo;
        int int58 = pilha55.topo;
        int int59 = pilha55.tamanho();
        ds.Pilha pilha60 = new ds.Pilha();
        java.lang.Object[] objArray61 = pilha60.item;
        java.lang.Object[] objArray66 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha60.item = objArray66;
        java.lang.Object[] objArray68 = pilha60.item;
        java.lang.Object[] objArray69 = pilha60.item;
        java.lang.Object[] objArray70 = pilha60.item;
        pilha55.item = objArray70;
        boolean boolean72 = pilha55.vazia();
        int int73 = pilha55.tamanho();
        int int74 = pilha55.tamanho();
        java.lang.Class<?> wildcardClass75 = pilha55.getClass();
        java.lang.Object[] objArray76 = new java.lang.Object[] { objArray46, int51, 10.0d, (short) 100, 1L, pilha55 };
        pilha20.item = objArray76;
        java.lang.Object[] objArray78 = pilha20.item;
        pilha14.item = objArray78;
        pilha0.item = objArray78;
        ds.Pilha pilha81 = new ds.Pilha();
        java.lang.Object[] objArray82 = pilha81.item;
        int int83 = pilha81.tamanho();
        pilha81.empilha((java.lang.Object) 0.0d);
        java.lang.Object[] objArray86 = pilha81.item;
        boolean boolean87 = pilha81.vazia();
        int int88 = pilha81.topo;
        int int89 = pilha81.tamanho();
        java.lang.Object[] objArray90 = pilha81.item;
        pilha0.item = objArray90;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(objArray90);
    }

    @Test
    public void test673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test673");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        pilha0.topo = 100;
        ds.Pilha pilha6 = new ds.Pilha();
        java.lang.Object[] objArray7 = pilha6.item;
        java.lang.Object[] objArray12 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha6.item = objArray12;
        java.lang.Object[] objArray14 = pilha6.item;
        java.lang.Object[] objArray15 = pilha6.item;
        java.lang.Object[] objArray16 = pilha6.item;
        pilha0.item = objArray16;
        java.lang.Object[] objArray18 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[#, 0, 4, 1]");
    }

    @Test
    public void test674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test674");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        int int12 = pilha10.topo;
        int int13 = pilha10.topo;
        int int14 = pilha10.tamanho();
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        java.lang.Object[] objArray21 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha15.item = objArray21;
        java.lang.Object[] objArray23 = pilha15.item;
        java.lang.Object[] objArray24 = pilha15.item;
        java.lang.Object[] objArray25 = pilha15.item;
        pilha10.item = objArray25;
        pilha0.empilha((java.lang.Object) pilha10);
        pilha0.topo = 'a';
        pilha0.topo = 'a';
        int int32 = pilha0.tamanho();
        ds.Pilha pilha33 = new ds.Pilha();
        int int34 = pilha33.tamanho();
        ds.Pilha pilha35 = new ds.Pilha();
        java.lang.Object[] objArray36 = pilha35.item;
        java.lang.Object[] objArray41 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha35.item = objArray41;
        java.lang.Object[] objArray43 = pilha35.item;
        java.lang.Object[] objArray44 = pilha35.item;
        pilha33.item = objArray44;
        java.lang.Object[] objArray46 = pilha33.item;
        java.lang.Object[] objArray47 = pilha33.item;
        java.lang.Object[] objArray48 = pilha33.item;
        pilha0.item = objArray48;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 97 + "'", int32 == 97);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[#, 0, 4, 1]");
    }

    @Test
    public void test675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test675");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        ds.Pilha pilha18 = new ds.Pilha();
        java.lang.Object[] objArray19 = pilha18.item;
        int int20 = pilha18.topo;
        pilha18.topo = 1;
        int int23 = pilha18.tamanho();
        java.lang.Object[] objArray24 = pilha18.item;
        java.lang.Object[] objArray25 = pilha18.item;
        pilha0.item = objArray25;
        ds.Pilha pilha27 = new ds.Pilha();
        java.lang.Object[] objArray28 = pilha27.item;
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        java.lang.Object[] objArray35 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha29.item = objArray35;
        pilha27.item = objArray35;
        ds.Pilha pilha38 = new ds.Pilha();
        java.lang.Object[] objArray39 = pilha38.item;
        boolean boolean40 = pilha38.vazia();
        boolean boolean41 = pilha38.vazia();
        boolean boolean42 = pilha38.vazia();
        pilha38.empilha((java.lang.Object) "hi!");
        java.lang.Object obj45 = pilha38.desempilha();
        pilha27.empilha((java.lang.Object) pilha38);
        java.lang.Object[] objArray47 = pilha27.item;
        pilha0.item = objArray47;
        pilha0.topo = '#';
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "hi!" + "'", obj45, "hi!");
        org.junit.Assert.assertNotNull(objArray47);
    }

    @Test
    public void test676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test676");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = pilha0.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: Erro: A pilha esta vazia");
        } catch (java.lang.Exception e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test677");
        ds.Pilha pilha0 = new ds.Pilha();
        boolean boolean1 = pilha0.vazia();
        java.lang.Object[] objArray2 = pilha0.item;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(objArray2);
    }

    @Test
    public void test678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test678");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        int int12 = pilha10.topo;
        int int13 = pilha10.topo;
        int int14 = pilha10.tamanho();
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        java.lang.Object[] objArray21 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha15.item = objArray21;
        java.lang.Object[] objArray23 = pilha15.item;
        java.lang.Object[] objArray24 = pilha15.item;
        java.lang.Object[] objArray25 = pilha15.item;
        pilha10.item = objArray25;
        pilha0.empilha((java.lang.Object) pilha10);
        java.lang.Object[] objArray28 = pilha10.item;
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        int int31 = pilha29.topo;
        int int32 = pilha29.topo;
        int int33 = pilha29.tamanho();
        ds.Pilha pilha34 = new ds.Pilha();
        java.lang.Object[] objArray35 = pilha34.item;
        java.lang.Object[] objArray40 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha34.item = objArray40;
        java.lang.Object[] objArray42 = pilha34.item;
        pilha29.item = objArray42;
        pilha29.topo = (byte) 10;
        pilha29.topo = (short) -1;
        pilha10.empilha((java.lang.Object) (short) -1);
        ds.Pilha pilha49 = new ds.Pilha();
        java.lang.Object[] objArray50 = pilha49.item;
        java.lang.Object[] objArray55 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha49.item = objArray55;
        java.lang.Object[] objArray57 = pilha49.item;
        java.lang.Object[] objArray58 = pilha49.item;
        ds.Pilha pilha59 = new ds.Pilha();
        java.lang.Object[] objArray60 = pilha59.item;
        int int61 = pilha59.topo;
        int int62 = pilha59.topo;
        int int63 = pilha59.tamanho();
        ds.Pilha pilha64 = new ds.Pilha();
        java.lang.Object[] objArray65 = pilha64.item;
        java.lang.Object[] objArray70 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha64.item = objArray70;
        java.lang.Object[] objArray72 = pilha64.item;
        java.lang.Object[] objArray73 = pilha64.item;
        java.lang.Object[] objArray74 = pilha64.item;
        pilha59.item = objArray74;
        pilha49.empilha((java.lang.Object) pilha59);
        int int77 = pilha49.topo;
        java.lang.Object obj78 = pilha49.desempilha();
        pilha10.empilha((java.lang.Object) pilha49);
        boolean boolean80 = pilha10.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test679");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        boolean boolean4 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) "hi!");
        java.lang.Object obj7 = pilha0.desempilha();
        java.lang.Object[] objArray8 = pilha0.item;
        int int9 = pilha0.topo;
        int int10 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test680");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        java.lang.Object[] objArray5 = pilha0.item;
        int int6 = pilha0.tamanho();
        ds.Pilha pilha7 = new ds.Pilha();
        boolean boolean8 = pilha7.vazia();
        ds.Pilha pilha9 = new ds.Pilha();
        java.lang.Object[] objArray10 = pilha9.item;
        int int11 = pilha9.topo;
        int int12 = pilha9.topo;
        int int13 = pilha9.tamanho();
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        java.lang.Object[] objArray20 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha14.item = objArray20;
        java.lang.Object[] objArray22 = pilha14.item;
        pilha9.item = objArray22;
        pilha7.item = objArray22;
        java.lang.Object[] objArray25 = pilha7.item;
        java.lang.Object[] objArray26 = pilha7.item;
        pilha0.item = objArray26;
        boolean boolean28 = pilha0.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test681");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        pilha0.topo = 1;
        int int5 = pilha0.tamanho();
        java.lang.Object[] objArray6 = pilha0.item;
        java.lang.Object[] objArray7 = pilha0.item;
        java.lang.Object[] objArray8 = pilha0.item;
        boolean boolean9 = pilha0.vazia();
        java.lang.Class<?> wildcardClass10 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test682");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        boolean boolean13 = pilha11.vazia();
        boolean boolean14 = pilha11.vazia();
        boolean boolean15 = pilha11.vazia();
        pilha11.empilha((java.lang.Object) "hi!");
        java.lang.Object obj18 = pilha11.desempilha();
        pilha0.empilha((java.lang.Object) pilha11);
        pilha11.empilha((java.lang.Object) 'a');
        int int22 = pilha11.tamanho();
        int int23 = pilha11.topo;
        int int24 = pilha11.tamanho();
        java.lang.Object obj25 = pilha11.desempilha();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 'a' + "'", obj25, 'a');
    }

    @Test
    public void test683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test683");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        boolean boolean11 = pilha0.vazia();
        int int12 = pilha0.tamanho();
        java.lang.Object[] objArray13 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
    }

    @Test
    public void test684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test684");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) (byte) 10);
        ds.Pilha pilha5 = new ds.Pilha();
        boolean boolean6 = pilha5.vazia();
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        int int9 = pilha7.topo;
        int int10 = pilha7.topo;
        int int11 = pilha7.tamanho();
        ds.Pilha pilha12 = new ds.Pilha();
        java.lang.Object[] objArray13 = pilha12.item;
        java.lang.Object[] objArray18 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha12.item = objArray18;
        java.lang.Object[] objArray20 = pilha12.item;
        pilha7.item = objArray20;
        pilha5.item = objArray20;
        pilha0.item = objArray20;
        int int24 = pilha0.tamanho();
        java.lang.Object[] objArray25 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
    }

    @Test
    public void test685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test685");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        int int18 = pilha0.tamanho();
        java.lang.Object[] objArray19 = pilha0.item;
        boolean boolean20 = pilha0.vazia();
        ds.Pilha pilha21 = new ds.Pilha();
        java.lang.Object[] objArray22 = pilha21.item;
        boolean boolean23 = pilha21.vazia();
        boolean boolean24 = pilha21.vazia();
        boolean boolean25 = pilha21.vazia();
        java.lang.Object[] objArray26 = pilha21.item;
        pilha0.empilha((java.lang.Object) pilha21);
        int int28 = pilha21.tamanho();
        boolean boolean29 = pilha21.vazia();
        java.lang.Object[] objArray30 = pilha21.item;
        pilha21.topo = 9;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray30);
    }

    @Test
    public void test686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test686");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        pilha0.topo = (short) -1;
        boolean boolean10 = pilha0.vazia();
        java.lang.Object[] objArray11 = pilha0.item;
        boolean boolean12 = pilha0.vazia();
        int int13 = pilha0.topo;
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        java.lang.Object[] objArray20 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha14.item = objArray20;
        ds.Pilha pilha22 = new ds.Pilha();
        java.lang.Object[] objArray23 = pilha22.item;
        ds.Pilha pilha24 = new ds.Pilha();
        java.lang.Object[] objArray25 = pilha24.item;
        java.lang.Object[] objArray30 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha24.item = objArray30;
        pilha22.item = objArray30;
        pilha14.item = objArray30;
        boolean boolean34 = pilha14.vazia();
        java.lang.Object[] objArray35 = pilha14.item;
        pilha0.item = objArray35;
        java.lang.Class<?> wildcardClass37 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test687");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        int int5 = pilha0.topo;
        java.lang.Object obj6 = pilha0.desempilha();
        pilha0.empilha((java.lang.Object) false);
        int int9 = pilha0.tamanho();
        java.lang.Object obj10 = pilha0.desempilha();
        java.lang.Object[] objArray11 = pilha0.item;
        int int12 = pilha0.tamanho();
        ds.Pilha pilha13 = new ds.Pilha();
        java.lang.Object[] objArray14 = pilha13.item;
        boolean boolean15 = pilha13.vazia();
        java.lang.Object obj16 = null;
        pilha13.empilha(obj16);
        java.lang.Object obj18 = pilha13.desempilha();
        ds.Pilha pilha19 = new ds.Pilha();
        java.lang.Object[] objArray20 = pilha19.item;
        ds.Pilha pilha21 = new ds.Pilha();
        java.lang.Object[] objArray22 = pilha21.item;
        java.lang.Object[] objArray27 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha21.item = objArray27;
        pilha19.item = objArray27;
        pilha13.item = objArray27;
        pilha0.item = objArray27;
        java.lang.Object[] objArray32 = pilha0.item;
        java.lang.Class<?> wildcardClass33 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + false + "'", obj10, false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test688");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        boolean boolean13 = pilha11.vazia();
        boolean boolean14 = pilha11.vazia();
        boolean boolean15 = pilha11.vazia();
        pilha11.empilha((java.lang.Object) "hi!");
        java.lang.Object obj18 = pilha11.desempilha();
        pilha0.empilha((java.lang.Object) pilha11);
        pilha11.topo = 'a';
        boolean boolean22 = pilha11.vazia();
        ds.Pilha pilha23 = new ds.Pilha();
        java.lang.Object[] objArray24 = pilha23.item;
        ds.Pilha pilha25 = new ds.Pilha();
        java.lang.Object[] objArray26 = pilha25.item;
        java.lang.Object[] objArray31 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha25.item = objArray31;
        pilha23.item = objArray31;
        java.lang.Object obj34 = null;
        pilha23.empilha(obj34);
        java.lang.Object obj36 = pilha23.desempilha();
        pilha23.topo = 0;
        int int39 = pilha23.tamanho();
        java.lang.Object[] objArray40 = pilha23.item;
        pilha11.empilha((java.lang.Object) pilha23);
        int int42 = pilha23.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[null, 0, 4, 1]");
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[null, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test689");
        ds.Pilha pilha0 = new ds.Pilha();
        boolean boolean1 = pilha0.vazia();
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        int int4 = pilha2.topo;
        int int5 = pilha2.topo;
        int int6 = pilha2.tamanho();
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        java.lang.Object[] objArray13 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha7.item = objArray13;
        java.lang.Object[] objArray15 = pilha7.item;
        pilha2.item = objArray15;
        pilha0.item = objArray15;
        java.lang.Object[] objArray18 = pilha0.item;
        boolean boolean19 = pilha0.vazia();
        java.lang.Object[] objArray20 = pilha0.item;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
    }

    @Test
    public void test690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test690");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        int int3 = pilha0.tamanho();
        pilha0.topo = 0;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = pilha0.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.Exception; message: Erro: A pilha esta vazia");
        } catch (java.lang.Exception e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test691");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        pilha0.empilha((java.lang.Object) '4');
        int int5 = pilha0.tamanho();
        boolean boolean6 = pilha0.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test692");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.topo = (short) 1;
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        int int7 = pilha5.topo;
        int int8 = pilha5.topo;
        pilha5.topo = 0;
        int int11 = pilha5.tamanho();
        pilha0.empilha((java.lang.Object) int11);
        java.lang.Class<?> wildcardClass13 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test693");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        pilha0.topo = (short) -1;
        boolean boolean10 = pilha0.vazia();
        java.lang.Object[] objArray11 = pilha0.item;
        boolean boolean12 = pilha0.vazia();
        java.lang.Object[] objArray13 = pilha0.item;
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        int int16 = pilha14.topo;
        int int17 = pilha14.topo;
        int int18 = pilha14.tamanho();
        ds.Pilha pilha19 = new ds.Pilha();
        java.lang.Object[] objArray20 = pilha19.item;
        java.lang.Object[] objArray25 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha19.item = objArray25;
        java.lang.Object[] objArray27 = pilha19.item;
        pilha14.item = objArray27;
        pilha14.topo = (byte) 10;
        pilha14.topo = (-1);
        java.lang.Object[] objArray33 = pilha14.item;
        pilha0.item = objArray33;
        boolean boolean35 = pilha0.vazia();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = pilha0.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test694");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        pilha0.topo = (short) -1;
        boolean boolean19 = pilha0.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test695");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        boolean boolean13 = pilha11.vazia();
        boolean boolean14 = pilha11.vazia();
        boolean boolean15 = pilha11.vazia();
        pilha11.empilha((java.lang.Object) "hi!");
        java.lang.Object obj18 = pilha11.desempilha();
        pilha0.empilha((java.lang.Object) pilha11);
        pilha11.empilha((java.lang.Object) 'a');
        int int22 = pilha11.tamanho();
        pilha11.topo = 0;
        boolean boolean25 = pilha11.vazia();
        java.lang.Object[] objArray26 = null;
        pilha11.item = objArray26;
        ds.Pilha pilha28 = new ds.Pilha();
        java.lang.Object[] objArray29 = pilha28.item;
        ds.Pilha pilha30 = new ds.Pilha();
        java.lang.Object[] objArray31 = pilha30.item;
        java.lang.Object[] objArray36 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha30.item = objArray36;
        pilha28.item = objArray36;
        java.lang.Object obj39 = null;
        pilha28.empilha(obj39);
        java.lang.Object[] objArray41 = pilha28.item;
        pilha11.item = objArray41;
        java.lang.Object[] objArray43 = pilha11.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[null, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[null, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[null, 0, 4, 1]");
    }

    @Test
    public void test696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test696");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.topo = (short) 1;
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        int int18 = pilha15.topo;
        int int19 = pilha15.tamanho();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        java.lang.Object[] objArray28 = pilha20.item;
        java.lang.Object[] objArray29 = pilha20.item;
        java.lang.Object[] objArray30 = pilha20.item;
        pilha15.item = objArray30;
        pilha5.empilha((java.lang.Object) pilha15);
        boolean boolean33 = pilha15.vazia();
        pilha0.empilha((java.lang.Object) boolean33);
        boolean boolean35 = pilha0.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test697");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.tamanho();
        pilha0.empilha((java.lang.Object) 0.0d);
        java.lang.Object[] objArray5 = pilha0.item;
        boolean boolean6 = pilha0.vazia();
        int int7 = pilha0.topo;
        java.lang.Object[] objArray8 = pilha0.item;
        int int9 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test698");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        ds.Pilha pilha18 = new ds.Pilha();
        java.lang.Object[] objArray19 = pilha18.item;
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        pilha18.item = objArray26;
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        java.lang.Object[] objArray35 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha29.item = objArray35;
        java.lang.Object[] objArray37 = pilha29.item;
        java.lang.Object[] objArray38 = pilha29.item;
        java.lang.Object[] objArray39 = pilha29.item;
        pilha18.item = objArray39;
        pilha0.item = objArray39;
        java.lang.Object[] objArray42 = pilha0.item;
        java.lang.Object[] objArray43 = pilha0.item;
        java.lang.Object[] objArray44 = pilha0.item;
        boolean boolean45 = pilha0.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test699");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        boolean boolean3 = pilha0.vazia();
        boolean boolean4 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) "hi!");
        pilha0.topo = 10;
        java.lang.Object obj9 = pilha0.desempilha();
        int int10 = pilha0.tamanho();
        java.lang.Object obj11 = pilha0.desempilha();
        int int12 = pilha0.topo;
        pilha0.topo = (byte) 100;
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        pilha15.topo = 1;
        int int20 = pilha15.tamanho();
        java.lang.Object[] objArray21 = pilha15.item;
        java.lang.Object[] objArray22 = pilha15.item;
        boolean boolean23 = pilha15.vazia();
        ds.Pilha pilha24 = new ds.Pilha();
        java.lang.Object[] objArray25 = pilha24.item;
        ds.Pilha pilha26 = new ds.Pilha();
        java.lang.Object[] objArray27 = pilha26.item;
        java.lang.Object[] objArray32 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha26.item = objArray32;
        pilha24.item = objArray32;
        java.lang.Object obj35 = null;
        pilha24.empilha(obj35);
        java.lang.Object obj37 = pilha24.desempilha();
        pilha15.empilha((java.lang.Object) pilha24);
        java.lang.Object[] objArray39 = pilha15.item;
        pilha0.item = objArray39;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 9 + "'", int10 == 9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8 + "'", int12 == 8);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[null, 0, 4, 1]");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objArray39);
    }

    @Test
    public void test700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test700");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        pilha0.topo = (short) -1;
        boolean boolean10 = pilha0.vazia();
        boolean boolean11 = pilha0.vazia();
        boolean boolean12 = pilha0.vazia();
        int int13 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test701");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        pilha0.item = objArray13;
        pilha0.topo = (byte) 10;
        pilha0.topo = (-1);
        java.lang.Object[] objArray19 = pilha0.item;
        pilha0.topo = '4';
        int int22 = pilha0.topo;
        int int23 = pilha0.topo;
        java.lang.Object[] objArray24 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[#, 0, 4, 1]");
    }

    @Test
    public void test702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test702");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        java.lang.Object obj11 = null;
        pilha0.empilha(obj11);
        java.lang.Object[] objArray13 = pilha0.item;
        boolean boolean14 = pilha0.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[null, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[null, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[null, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test703");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        boolean boolean8 = pilha0.vazia();
        java.lang.Object[] objArray9 = pilha0.item;
        pilha0.empilha((java.lang.Object) 1L);
        pilha0.topo = 0;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[1, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[1, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[1, 0, 4, 1]");
    }

    @Test
    public void test704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test704");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        java.lang.Object[] objArray5 = pilha0.item;
        int int6 = pilha0.tamanho();
        boolean boolean7 = pilha0.vazia();
        pilha0.topo = (byte) 10;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test705");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        boolean boolean13 = pilha11.vazia();
        boolean boolean14 = pilha11.vazia();
        boolean boolean15 = pilha11.vazia();
        pilha11.empilha((java.lang.Object) "hi!");
        java.lang.Object obj18 = pilha11.desempilha();
        pilha0.empilha((java.lang.Object) pilha11);
        boolean boolean20 = pilha0.vazia();
        ds.Pilha pilha21 = new ds.Pilha();
        java.lang.Object[] objArray22 = pilha21.item;
        boolean boolean23 = pilha21.vazia();
        ds.Pilha pilha24 = new ds.Pilha();
        java.lang.Object[] objArray25 = pilha24.item;
        ds.Pilha pilha26 = new ds.Pilha();
        java.lang.Object[] objArray27 = pilha26.item;
        java.lang.Object[] objArray32 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha26.item = objArray32;
        pilha24.item = objArray32;
        pilha21.empilha((java.lang.Object) objArray32);
        pilha0.item = objArray32;
        boolean boolean37 = pilha0.vazia();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test706");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.tamanho();
        pilha0.empilha((java.lang.Object) 0.0d);
        java.lang.Object[] objArray5 = pilha0.item;
        boolean boolean6 = pilha0.vazia();
        int int7 = pilha0.topo;
        java.lang.Object[] objArray8 = pilha0.item;
        ds.Pilha pilha9 = new ds.Pilha();
        java.lang.Object[] objArray10 = pilha9.item;
        int int11 = pilha9.topo;
        int int12 = pilha9.topo;
        int int13 = pilha9.tamanho();
        ds.Pilha pilha14 = new ds.Pilha();
        java.lang.Object[] objArray15 = pilha14.item;
        java.lang.Object[] objArray20 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha14.item = objArray20;
        java.lang.Object[] objArray22 = pilha14.item;
        java.lang.Object[] objArray23 = pilha14.item;
        java.lang.Object[] objArray24 = pilha14.item;
        pilha9.item = objArray24;
        pilha0.empilha((java.lang.Object) objArray24);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[#, 0, 4, 1]");
    }

    @Test
    public void test707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test707");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        pilha0.topo = (byte) 1;
        java.lang.Object obj5 = pilha0.desempilha();
        java.lang.Object[] objArray6 = pilha0.item;
        java.lang.Object[] objArray7 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray7);
    }

    @Test
    public void test708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test708");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        int int5 = pilha0.topo;
        java.lang.Object obj6 = pilha0.desempilha();
        pilha0.empilha((java.lang.Object) false);
        boolean boolean9 = pilha0.vazia();
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        boolean boolean12 = pilha10.vazia();
        pilha10.topo = (byte) 1;
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        ds.Pilha pilha18 = new ds.Pilha();
        java.lang.Object[] objArray19 = pilha18.item;
        int int20 = pilha18.topo;
        int int21 = pilha18.topo;
        int int22 = pilha18.tamanho();
        ds.Pilha pilha23 = new ds.Pilha();
        java.lang.Object[] objArray24 = pilha23.item;
        java.lang.Object[] objArray29 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha23.item = objArray29;
        java.lang.Object[] objArray31 = pilha23.item;
        java.lang.Object[] objArray32 = pilha23.item;
        java.lang.Object[] objArray33 = pilha23.item;
        pilha18.item = objArray33;
        boolean boolean35 = pilha18.vazia();
        int int36 = pilha18.tamanho();
        int int37 = pilha18.tamanho();
        java.lang.Class<?> wildcardClass38 = pilha18.getClass();
        pilha15.empilha((java.lang.Object) wildcardClass38);
        pilha10.empilha((java.lang.Object) pilha15);
        int int41 = pilha15.topo;
        pilha0.empilha((java.lang.Object) int41);
        java.lang.Object[] objArray43 = null;
        pilha0.item = objArray43;
        java.lang.Class<?> wildcardClass45 = pilha0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test709");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        java.lang.Object[] objArray10 = pilha0.item;
        boolean boolean11 = pilha0.vazia();
        pilha0.empilha((java.lang.Object) 10.0d);
        pilha0.topo = 0;
        java.lang.Object[] objArray16 = pilha0.item;
        ds.Pilha pilha17 = new ds.Pilha();
        java.lang.Object[] objArray18 = pilha17.item;
        boolean boolean19 = pilha17.vazia();
        java.lang.Object obj20 = null;
        pilha17.empilha(obj20);
        int int22 = pilha17.topo;
        java.lang.Object obj23 = pilha17.desempilha();
        ds.Pilha pilha24 = new ds.Pilha();
        java.lang.Object[] objArray25 = pilha24.item;
        int int26 = pilha24.topo;
        int int27 = pilha24.topo;
        int int28 = pilha24.tamanho();
        ds.Pilha pilha29 = new ds.Pilha();
        java.lang.Object[] objArray30 = pilha29.item;
        java.lang.Object[] objArray35 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha29.item = objArray35;
        java.lang.Object[] objArray37 = pilha29.item;
        java.lang.Object[] objArray38 = pilha29.item;
        java.lang.Object[] objArray39 = pilha29.item;
        pilha24.item = objArray39;
        boolean boolean41 = pilha24.vazia();
        ds.Pilha pilha42 = new ds.Pilha();
        java.lang.Object[] objArray43 = pilha42.item;
        ds.Pilha pilha44 = new ds.Pilha();
        java.lang.Object[] objArray45 = pilha44.item;
        java.lang.Object[] objArray50 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha44.item = objArray50;
        pilha42.item = objArray50;
        ds.Pilha pilha53 = new ds.Pilha();
        java.lang.Object[] objArray54 = pilha53.item;
        java.lang.Object[] objArray59 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha53.item = objArray59;
        java.lang.Object[] objArray61 = pilha53.item;
        java.lang.Object[] objArray62 = pilha53.item;
        java.lang.Object[] objArray63 = pilha53.item;
        pilha42.item = objArray63;
        pilha24.item = objArray63;
        pilha17.item = objArray63;
        pilha0.item = objArray63;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[10.0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[#, 0, 4, 1]");
    }

    @Test
    public void test710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test710");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        pilha0.item = objArray8;
        ds.Pilha pilha11 = new ds.Pilha();
        java.lang.Object[] objArray12 = pilha11.item;
        boolean boolean13 = pilha11.vazia();
        boolean boolean14 = pilha11.vazia();
        boolean boolean15 = pilha11.vazia();
        pilha11.empilha((java.lang.Object) "hi!");
        java.lang.Object obj18 = pilha11.desempilha();
        pilha0.empilha((java.lang.Object) pilha11);
        java.lang.Object obj20 = pilha0.desempilha();
        ds.Pilha pilha21 = new ds.Pilha();
        java.lang.Object[] objArray22 = pilha21.item;
        int int23 = pilha21.topo;
        int int24 = pilha21.topo;
        int int25 = pilha21.tamanho();
        int int26 = pilha21.tamanho();
        java.lang.Object[] objArray27 = pilha21.item;
        ds.Pilha pilha28 = new ds.Pilha();
        boolean boolean29 = pilha28.vazia();
        ds.Pilha pilha30 = new ds.Pilha();
        java.lang.Object[] objArray31 = pilha30.item;
        int int32 = pilha30.topo;
        int int33 = pilha30.topo;
        int int34 = pilha30.tamanho();
        ds.Pilha pilha35 = new ds.Pilha();
        java.lang.Object[] objArray36 = pilha35.item;
        java.lang.Object[] objArray41 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha35.item = objArray41;
        java.lang.Object[] objArray43 = pilha35.item;
        pilha30.item = objArray43;
        pilha28.item = objArray43;
        java.lang.Object[] objArray46 = pilha28.item;
        pilha21.item = objArray46;
        pilha0.item = objArray46;
        pilha0.topo = 1;
        java.lang.Object obj51 = pilha0.desempilha();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + '#' + "'", obj51, '#');
    }

    @Test
    public void test711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test711");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        ds.Pilha pilha3 = new ds.Pilha();
        java.lang.Object[] objArray4 = pilha3.item;
        int int5 = pilha3.topo;
        int int6 = pilha3.topo;
        int int7 = pilha3.tamanho();
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        java.lang.Object[] objArray14 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha8.item = objArray14;
        java.lang.Object[] objArray16 = pilha8.item;
        java.lang.Object[] objArray17 = pilha8.item;
        java.lang.Object[] objArray18 = pilha8.item;
        pilha3.item = objArray18;
        boolean boolean20 = pilha3.vazia();
        int int21 = pilha3.tamanho();
        int int22 = pilha3.tamanho();
        java.lang.Class<?> wildcardClass23 = pilha3.getClass();
        pilha0.empilha((java.lang.Object) wildcardClass23);
        int int25 = pilha0.topo;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test712");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        ds.Pilha pilha10 = new ds.Pilha();
        java.lang.Object[] objArray11 = pilha10.item;
        int int12 = pilha10.topo;
        int int13 = pilha10.topo;
        int int14 = pilha10.tamanho();
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        java.lang.Object[] objArray21 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha15.item = objArray21;
        java.lang.Object[] objArray23 = pilha15.item;
        java.lang.Object[] objArray24 = pilha15.item;
        java.lang.Object[] objArray25 = pilha15.item;
        pilha10.item = objArray25;
        pilha0.empilha((java.lang.Object) pilha10);
        boolean boolean28 = pilha10.vazia();
        boolean boolean29 = pilha10.vazia();
        int int30 = pilha10.topo;
        int int31 = pilha10.tamanho();
        java.lang.Class<?> wildcardClass32 = pilha10.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test713");
        ds.Pilha pilha0 = new ds.Pilha();
        int int1 = pilha0.tamanho();
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        java.lang.Object[] objArray10 = pilha2.item;
        java.lang.Object[] objArray11 = pilha2.item;
        pilha0.item = objArray11;
        java.lang.Object[] objArray13 = pilha0.item;
        pilha0.topo = ' ';
        int int16 = pilha0.tamanho();
        boolean boolean17 = pilha0.vazia();
        pilha0.topo = (byte) -1;
        java.lang.Class<?> wildcardClass20 = pilha0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test714");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.topo;
        java.lang.Object[] objArray5 = pilha0.item;
        java.lang.Object[] objArray6 = null;
        pilha0.item = objArray6;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray5);
    }

    @Test
    public void test715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test715");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        int int3 = pilha0.topo;
        int int4 = pilha0.tamanho();
        ds.Pilha pilha5 = new ds.Pilha();
        java.lang.Object[] objArray6 = pilha5.item;
        java.lang.Object[] objArray11 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha5.item = objArray11;
        java.lang.Object[] objArray13 = pilha5.item;
        java.lang.Object[] objArray14 = pilha5.item;
        java.lang.Object[] objArray15 = pilha5.item;
        pilha0.item = objArray15;
        boolean boolean17 = pilha0.vazia();
        int int18 = pilha0.tamanho();
        boolean boolean19 = pilha0.vazia();
        pilha0.topo = '4';
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = pilha0.desempilha();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test716");
        ds.Pilha pilha0 = new ds.Pilha();
        int int1 = pilha0.tamanho();
        ds.Pilha pilha2 = new ds.Pilha();
        java.lang.Object[] objArray3 = pilha2.item;
        java.lang.Object[] objArray8 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha2.item = objArray8;
        java.lang.Object[] objArray10 = pilha2.item;
        java.lang.Object[] objArray11 = pilha2.item;
        pilha0.item = objArray11;
        boolean boolean13 = pilha0.vazia();
        java.lang.Object[] objArray14 = pilha0.item;
        int int15 = pilha0.tamanho();
        boolean boolean16 = pilha0.vazia();
        int int17 = pilha0.topo;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test717");
        ds.Pilha pilha0 = new ds.Pilha();
        ds.Pilha pilha1 = new ds.Pilha();
        java.lang.Object[] objArray2 = pilha1.item;
        boolean boolean3 = pilha1.vazia();
        java.lang.Object obj4 = null;
        pilha1.empilha(obj4);
        java.lang.Object[] objArray6 = pilha1.item;
        pilha0.item = objArray6;
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        boolean boolean10 = pilha8.vazia();
        pilha8.empilha((java.lang.Object) (byte) 10);
        ds.Pilha pilha13 = new ds.Pilha();
        boolean boolean14 = pilha13.vazia();
        ds.Pilha pilha15 = new ds.Pilha();
        java.lang.Object[] objArray16 = pilha15.item;
        int int17 = pilha15.topo;
        int int18 = pilha15.topo;
        int int19 = pilha15.tamanho();
        ds.Pilha pilha20 = new ds.Pilha();
        java.lang.Object[] objArray21 = pilha20.item;
        java.lang.Object[] objArray26 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha20.item = objArray26;
        java.lang.Object[] objArray28 = pilha20.item;
        pilha15.item = objArray28;
        pilha13.item = objArray28;
        pilha8.item = objArray28;
        int int32 = pilha8.tamanho();
        pilha0.empilha((java.lang.Object) pilha8);
        pilha0.topo = 1;
        pilha0.topo = 9;
        java.lang.Object[] objArray38 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(objArray38);
    }

    @Test
    public void test718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test718");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        java.lang.Object obj5 = pilha0.desempilha();
        ds.Pilha pilha6 = new ds.Pilha();
        java.lang.Object[] objArray7 = pilha6.item;
        ds.Pilha pilha8 = new ds.Pilha();
        java.lang.Object[] objArray9 = pilha8.item;
        java.lang.Object[] objArray14 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha8.item = objArray14;
        pilha6.item = objArray14;
        pilha0.item = objArray14;
        ds.Pilha pilha18 = new ds.Pilha();
        java.lang.Object[] objArray19 = pilha18.item;
        int int20 = pilha18.topo;
        int int21 = pilha18.topo;
        int int22 = pilha18.tamanho();
        ds.Pilha pilha23 = new ds.Pilha();
        java.lang.Object[] objArray24 = pilha23.item;
        java.lang.Object[] objArray29 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha23.item = objArray29;
        java.lang.Object[] objArray31 = pilha23.item;
        java.lang.Object[] objArray32 = pilha23.item;
        java.lang.Object[] objArray33 = pilha23.item;
        pilha18.item = objArray33;
        boolean boolean35 = pilha18.vazia();
        int int36 = pilha18.tamanho();
        boolean boolean37 = pilha18.vazia();
        ds.Pilha pilha38 = new ds.Pilha();
        java.lang.Object[] objArray39 = pilha38.item;
        java.lang.Object[] objArray44 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha38.item = objArray44;
        pilha38.topo = (short) -1;
        boolean boolean48 = pilha38.vazia();
        java.lang.Object[] objArray49 = pilha38.item;
        pilha18.item = objArray49;
        pilha0.item = objArray49;
        java.lang.Object[] objArray52 = pilha0.item;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[#, 0, 4, 1]");
    }

    @Test
    public void test719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test719");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        int int2 = pilha0.topo;
        pilha0.topo = 1;
        int int5 = pilha0.tamanho();
        int int6 = pilha0.tamanho();
        java.lang.Object[] objArray7 = pilha0.item;
        int int8 = pilha0.tamanho();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test720");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        boolean boolean2 = pilha0.vazia();
        java.lang.Object obj3 = null;
        pilha0.empilha(obj3);
        java.lang.Object[] objArray5 = pilha0.item;
        java.lang.Object obj6 = pilha0.desempilha();
        ds.Pilha pilha7 = new ds.Pilha();
        java.lang.Object[] objArray8 = pilha7.item;
        boolean boolean9 = pilha7.vazia();
        boolean boolean10 = pilha7.vazia();
        boolean boolean11 = pilha7.vazia();
        pilha7.empilha((java.lang.Object) 1.0f);
        pilha7.empilha((java.lang.Object) 0.0d);
        ds.Pilha pilha16 = new ds.Pilha();
        java.lang.Object[] objArray17 = pilha16.item;
        int int18 = pilha16.topo;
        int int19 = pilha16.topo;
        int int20 = pilha16.tamanho();
        ds.Pilha pilha21 = new ds.Pilha();
        java.lang.Object[] objArray22 = pilha21.item;
        java.lang.Object[] objArray27 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha21.item = objArray27;
        java.lang.Object[] objArray29 = pilha21.item;
        pilha16.item = objArray29;
        pilha16.topo = (byte) 10;
        pilha16.topo = (short) -1;
        int int35 = pilha16.tamanho();
        ds.Pilha pilha36 = new ds.Pilha();
        java.lang.Object[] objArray37 = pilha36.item;
        int int38 = pilha36.topo;
        int int39 = pilha36.topo;
        int int40 = pilha36.tamanho();
        ds.Pilha pilha41 = new ds.Pilha();
        java.lang.Object[] objArray42 = pilha41.item;
        java.lang.Object[] objArray47 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha41.item = objArray47;
        java.lang.Object[] objArray49 = pilha41.item;
        java.lang.Object[] objArray50 = pilha41.item;
        java.lang.Object[] objArray51 = pilha41.item;
        pilha36.item = objArray51;
        boolean boolean53 = pilha36.vazia();
        ds.Pilha pilha54 = new ds.Pilha();
        java.lang.Object[] objArray55 = pilha54.item;
        ds.Pilha pilha56 = new ds.Pilha();
        java.lang.Object[] objArray57 = pilha56.item;
        java.lang.Object[] objArray62 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha56.item = objArray62;
        pilha54.item = objArray62;
        ds.Pilha pilha65 = new ds.Pilha();
        java.lang.Object[] objArray66 = pilha65.item;
        java.lang.Object[] objArray71 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha65.item = objArray71;
        java.lang.Object[] objArray73 = pilha65.item;
        java.lang.Object[] objArray74 = pilha65.item;
        java.lang.Object[] objArray75 = pilha65.item;
        pilha54.item = objArray75;
        pilha36.item = objArray75;
        pilha16.item = objArray75;
        pilha7.item = objArray75;
        pilha0.empilha((java.lang.Object) pilha7);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[#, 0, 4, 1]");
    }

    @Test
    public void test721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test721");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        java.lang.Object[] objArray10 = pilha0.item;
        pilha0.topo = 10;
        java.lang.Object[] objArray13 = pilha0.item;
        ds.Pilha pilha14 = new ds.Pilha();
        int int15 = pilha14.tamanho();
        ds.Pilha pilha16 = new ds.Pilha();
        java.lang.Object[] objArray17 = pilha16.item;
        java.lang.Object[] objArray22 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha16.item = objArray22;
        java.lang.Object[] objArray24 = pilha16.item;
        java.lang.Object[] objArray25 = pilha16.item;
        pilha14.item = objArray25;
        ds.Pilha pilha27 = new ds.Pilha();
        java.lang.Object[] objArray28 = pilha27.item;
        boolean boolean29 = pilha27.vazia();
        boolean boolean30 = pilha27.vazia();
        boolean boolean31 = pilha27.vazia();
        pilha27.empilha((java.lang.Object) "hi!");
        java.lang.Object obj34 = pilha27.desempilha();
        java.lang.Object[] objArray35 = pilha27.item;
        pilha14.empilha((java.lang.Object) objArray35);
        boolean boolean37 = pilha14.vazia();
        java.lang.Object[] objArray38 = pilha14.item;
        java.lang.Object[] objArray39 = pilha14.item;
        pilha0.item = objArray39;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[#, 0, 4, 1]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "hi!" + "'", obj34, "hi!");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(objArray39);
    }

    @Test
    public void test722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop1.test722");
        ds.Pilha pilha0 = new ds.Pilha();
        java.lang.Object[] objArray1 = pilha0.item;
        java.lang.Object[] objArray6 = new java.lang.Object[] { '#', (short) 0, '4', (short) 1 };
        pilha0.item = objArray6;
        java.lang.Object[] objArray8 = pilha0.item;
        java.lang.Object[] objArray9 = pilha0.item;
        java.lang.Object[] objArray10 = pilha0.item;
        pilha0.topo = 10;
        pilha0.topo = 'a';
        java.lang.Object[] objArray15 = null;
        pilha0.item = objArray15;
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[#, 0, 4, 1]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[#, 0, 4, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[#, 0, 4, 1]");
    }
}

