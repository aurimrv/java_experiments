/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 03 20:47:03 GMT 2016
 */

package ds;

import org.junit.Test;
import static org.junit.Assert.*;

import ds.Item;
import ds.MeuItem;
import ds.Tabela;

//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Evo {

  //Test case number: 0
  /*
   * 120 covered goals:
   * Goal 1. cap5.Tabela.<init>()V: root-Branch
   * Goal 2. cap5.Tabela.insere(Lcap4/Item;)V: I9 Branch 2 IF_ICMPNE L22 - true
   * Goal 3. cap5.Tabela.binaria(Lcap4/Item;)I: I4 Branch 3 IFNE L27 - true
   * Goal 4. cap5.Tabela.binaria(Lcap4/Item;)I: I31 Branch 4 IFLE L31 - true
   * Goal 5. cap5.Tabela.binaria(Lcap4/Item;)I: I51 Branch 5 IFEQ L33 - true
   * Goal 6. cap5.Tabela.binaria(Lcap4/Item;)I: I65 Branch 7 IFNE L34 - false
   * Goal 7. Branch cap5.Tabela.<init>()V: root-Branch in context: cap5.Tabela:<init>()V
   * Goal 8. Branch cap5.Tabela.insere(Lcap4/Item;)V: I9 Branch 2 IF_ICMPNE L22 - true in context: cap5.Tabela:insere(Lcap4/Item;)V
   * Goal 9. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I4 Branch 3 IFNE L27 - true in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 10. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I31 Branch 4 IFLE L31 - true in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 11. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I51 Branch 5 IFEQ L33 - true in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 12. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I65 Branch 7 IFNE L34 - false in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 13. [Output]: cap5.Tabela.binaria(Lcap4/Item;)I:Positive
   * Goal 14. cap5.Tabela.<init>()V: Line 11
   * Goal 15. cap5.Tabela.<init>()V: Line 12
   * Goal 16. cap5.Tabela.<init>()V: Line 13
   * Goal 17. cap5.Tabela.<init>()V: Line 14
   * Goal 18. cap5.Tabela.binaria(Lcap4/Item;)I: Line 27
   * Goal 19. cap5.Tabela.binaria(Lcap4/Item;)I: Line 28
   * Goal 20. cap5.Tabela.binaria(Lcap4/Item;)I: Line 30
   * Goal 21. cap5.Tabela.binaria(Lcap4/Item;)I: Line 31
   * Goal 22. cap5.Tabela.binaria(Lcap4/Item;)I: Line 32
   * Goal 23. cap5.Tabela.binaria(Lcap4/Item;)I: Line 33
   * Goal 24. cap5.Tabela.binaria(Lcap4/Item;)I: Line 34
   * Goal 25. cap5.Tabela.insere(Lcap4/Item;)V: Line 22
   * Goal 26. cap5.Tabela.insere(Lcap4/Item;)V: Line 24
   * Goal 27. cap5.Tabela.insere(Lcap4/Item;)V: Line 25
   * Goal 28. [METHOD] cap5.Tabela.<init>()V
   * Goal 29. [METHOD] cap5.Tabela.binaria(Lcap4/Item;)I
   * Goal 30. [METHOD] cap5.Tabela.insere(Lcap4/Item;)V
   * Goal 31. [METHODNOEX] cap5.Tabela.<init>()V
   * Goal 32. [METHODNOEX] cap5.Tabela.binaria(Lcap4/Item;)I
   * Goal 33. [METHODNOEX] cap5.Tabela.insere(Lcap4/Item;)V
   * Goal 34. Weak Mutation 0: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 0
   * Goal 35. Weak Mutation 1: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 1
   * Goal 36. Weak Mutation 2: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> -1
   * Goal 37. Weak Mutation 3: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 9
   * Goal 38. Weak Mutation 4: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 11
   * Goal 39. Weak Mutation 5: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 0
   * Goal 40. Weak Mutation 6: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 1
   * Goal 41. Weak Mutation 7: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> -1
   * Goal 42. Weak Mutation 8: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 10
   * Goal 43. Weak Mutation 9: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 12
   * Goal 44. Weak Mutation 10: cap5.Tabela.<init>()V:13 - ReplaceConstant - 0 -> 1
   * Goal 45. Weak Mutation 26: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp Negation
   * Goal 46. Weak Mutation 27: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp +1
   * Goal 47. Weak Mutation 28: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp -1
   * Goal 48. Weak Mutation 29: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceConstant - 1 -> 0
   * Goal 49. Weak Mutation 30: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> +
   * Goal 50. Weak Mutation 31: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> %
   * Goal 51. Weak Mutation 32: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> *
   * Goal 52. Weak Mutation 33: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> /
   * Goal 53. Weak Mutation 36: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceComparisonOperator != -> >
   * Goal 54. Weak Mutation 39: cap5.Tabela.insere(Lcap4/Item;)V:24 - InsertUnaryOp Negation
   * Goal 55. Weak Mutation 40: cap5.Tabela.insere(Lcap4/Item;)V:24 - InsertUnaryOp +1
   * Goal 56. Weak Mutation 41: cap5.Tabela.insere(Lcap4/Item;)V:24 - InsertUnaryOp -1
   * Goal 57. Weak Mutation 42: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceConstant - 1 -> 0
   * Goal 58. Weak Mutation 43: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> %
   * Goal 59. Weak Mutation 44: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> -
   * Goal 60. Weak Mutation 45: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> *
   * Goal 61. Weak Mutation 46: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> /
   * Goal 62. Weak Mutation 47: cap5.Tabela.binaria(Lcap4/Item;)I:27 - InsertUnaryOp Negation
   * Goal 63. Weak Mutation 48: cap5.Tabela.binaria(Lcap4/Item;)I:27 - InsertUnaryOp +1
   * Goal 64. Weak Mutation 49: cap5.Tabela.binaria(Lcap4/Item;)I:27 - InsertUnaryOp -1
   * Goal 65. Weak Mutation 51: cap5.Tabela.binaria(Lcap4/Item;)I:27 - ReplaceComparisonOperator != -> <
   * Goal 66. Weak Mutation 54: cap5.Tabela.binaria(Lcap4/Item;)I:28 - ReplaceConstant - 1 -> 0
   * Goal 67. Weak Mutation 55: cap5.Tabela.binaria(Lcap4/Item;)I:28 - InsertUnaryOp Negation
   * Goal 68. Weak Mutation 56: cap5.Tabela.binaria(Lcap4/Item;)I:28 - InsertUnaryOp +1
   * Goal 69. Weak Mutation 57: cap5.Tabela.binaria(Lcap4/Item;)I:28 - InsertUnaryOp -1
   * Goal 70. Weak Mutation 58: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceVariable esq -> dir
   * Goal 71. Weak Mutation 59: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceVariable esq -> n
   * Goal 72. Weak Mutation 60: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp Negation of esq
   * Goal 73. Weak Mutation 61: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC 1 esq
   * Goal 74. Weak Mutation 62: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC -1 esq
   * Goal 75. Weak Mutation 63: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceVariable dir -> esq
   * Goal 76. Weak Mutation 65: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp Negation of dir
   * Goal 77. Weak Mutation 66: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC 1 dir
   * Goal 78. Weak Mutation 67: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC -1 dir
   * Goal 79. Weak Mutation 68: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> %
   * Goal 80. Weak Mutation 69: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> -
   * Goal 81. Weak Mutation 70: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> *
   * Goal 82. Weak Mutation 71: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> /
   * Goal 83. Weak Mutation 72: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> 0
   * Goal 84. Weak Mutation 73: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> 1
   * Goal 85. Weak Mutation 74: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> -1
   * Goal 86. Weak Mutation 75: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> 3
   * Goal 87. Weak Mutation 76: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator / -> +
   * Goal 88. Weak Mutation 79: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator / -> *
   * Goal 89. Weak Mutation 80: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceVariable i -> dir
   * Goal 90. Weak Mutation 82: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceVariable i -> n
   * Goal 91. Weak Mutation 83: cap5.Tabela.binaria(Lcap4/Item;)I:31 - InsertUnaryOp Negation of i
   * Goal 92. Weak Mutation 84: cap5.Tabela.binaria(Lcap4/Item;)I:31 - InsertUnaryOp IINC 1 i
   * Goal 93. Weak Mutation 85: cap5.Tabela.binaria(Lcap4/Item;)I:31 - InsertUnaryOp IINC -1 i
   * Goal 94. Weak Mutation 88: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceComparisonOperator <= -> <
   * Goal 95. Weak Mutation 100: cap5.Tabela.binaria(Lcap4/Item;)I:32 - ReplaceVariable i -> dir
   * Goal 96. Weak Mutation 102: cap5.Tabela.binaria(Lcap4/Item;)I:32 - ReplaceVariable i -> n
   * Goal 97. Weak Mutation 103: cap5.Tabela.binaria(Lcap4/Item;)I:32 - InsertUnaryOp Negation of i
   * Goal 98. Weak Mutation 104: cap5.Tabela.binaria(Lcap4/Item;)I:32 - InsertUnaryOp IINC 1 i
   * Goal 99. Weak Mutation 105: cap5.Tabela.binaria(Lcap4/Item;)I:32 - InsertUnaryOp IINC -1 i
   * Goal 100. Weak Mutation 106: cap5.Tabela.binaria(Lcap4/Item;)I:32 - ReplaceConstant - 1 -> 0
   * Goal 101. Weak Mutation 107: cap5.Tabela.binaria(Lcap4/Item;)I:32 - ReplaceArithmeticOperator - -> +
   * Goal 102. Weak Mutation 109: cap5.Tabela.binaria(Lcap4/Item;)I:32 - ReplaceArithmeticOperator - -> *
   * Goal 103. Weak Mutation 110: cap5.Tabela.binaria(Lcap4/Item;)I:32 - ReplaceArithmeticOperator - -> /
   * Goal 104. Weak Mutation 111: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceVariable i -> dir
   * Goal 105. Weak Mutation 113: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceVariable i -> n
   * Goal 106. Weak Mutation 114: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp Negation of i
   * Goal 107. Weak Mutation 115: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp IINC 1 i
   * Goal 108. Weak Mutation 116: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp IINC -1 i
   * Goal 109. Weak Mutation 117: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceComparisonOperator == -> -2
   * Goal 110. Weak Mutation 135: cap5.Tabela.binaria(Lcap4/Item;)I:34 - ReplaceVariable i -> dir
   * Goal 111. Weak Mutation 137: cap5.Tabela.binaria(Lcap4/Item;)I:34 - ReplaceVariable i -> n
   * Goal 112. Weak Mutation 138: cap5.Tabela.binaria(Lcap4/Item;)I:34 - InsertUnaryOp Negation of i
   * Goal 113. Weak Mutation 139: cap5.Tabela.binaria(Lcap4/Item;)I:34 - InsertUnaryOp IINC 1 i
   * Goal 114. Weak Mutation 140: cap5.Tabela.binaria(Lcap4/Item;)I:34 - InsertUnaryOp IINC -1 i
   * Goal 115. Weak Mutation 141: cap5.Tabela.binaria(Lcap4/Item;)I:34 - ReplaceComparisonOperator != -> -1
   * Goal 116. Weak Mutation 144: cap5.Tabela.binaria(Lcap4/Item;)I:34 - ReplaceVariable i -> dir
   * Goal 117. Weak Mutation 146: cap5.Tabela.binaria(Lcap4/Item;)I:34 - ReplaceVariable i -> n
   * Goal 118. Weak Mutation 147: cap5.Tabela.binaria(Lcap4/Item;)I:34 - InsertUnaryOp Negation of i
   * Goal 119. Weak Mutation 148: cap5.Tabela.binaria(Lcap4/Item;)I:34 - InsertUnaryOp IINC 1 i
   * Goal 120. Weak Mutation 149: cap5.Tabela.binaria(Lcap4/Item;)I:34 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Tabela tabela0 = new Tabela();
      MeuItem meuItem0 = new MeuItem(0);
      tabela0.insere(meuItem0);
      tabela0.insere(meuItem0);
      int int0 = tabela0.binaria(meuItem0);
      assertEquals(2, tabela0.n);
      assertEquals(1, int0);
  }

  //Test case number: 1
  /*
   * 124 covered goals:
   * Goal 1. cap5.Tabela.<init>()V: root-Branch
   * Goal 2. cap5.Tabela.insere(Lcap4/Item;)V: I9 Branch 2 IF_ICMPNE L22 - true
   * Goal 3. cap5.Tabela.binaria(Lcap4/Item;)I: I4 Branch 3 IFNE L27 - true
   * Goal 4. cap5.Tabela.binaria(Lcap4/Item;)I: I56 Branch 6 IF_ICMPLE L29 - false
   * Goal 5. cap5.Tabela.binaria(Lcap4/Item;)I: I31 Branch 4 IFLE L31 - true
   * Goal 6. cap5.Tabela.binaria(Lcap4/Item;)I: I51 Branch 5 IFEQ L33 - false
   * Goal 7. cap5.Tabela.binaria(Lcap4/Item;)I: I65 Branch 7 IFNE L34 - true
   * Goal 8. Branch cap5.Tabela.<init>()V: root-Branch in context: cap5.Tabela:<init>()V
   * Goal 9. Branch cap5.Tabela.insere(Lcap4/Item;)V: I9 Branch 2 IF_ICMPNE L22 - true in context: cap5.Tabela:insere(Lcap4/Item;)V
   * Goal 10. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I4 Branch 3 IFNE L27 - true in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 11. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I56 Branch 6 IF_ICMPLE L29 - false in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 12. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I31 Branch 4 IFLE L31 - true in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 13. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I51 Branch 5 IFEQ L33 - false in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 14. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I65 Branch 7 IFNE L34 - true in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 15. [Output]: cap5.Tabela.binaria(Lcap4/Item;)I:Zero
   * Goal 16. cap5.Tabela.<init>()V: Line 11
   * Goal 17. cap5.Tabela.<init>()V: Line 12
   * Goal 18. cap5.Tabela.<init>()V: Line 13
   * Goal 19. cap5.Tabela.<init>()V: Line 14
   * Goal 20. cap5.Tabela.binaria(Lcap4/Item;)I: Line 27
   * Goal 21. cap5.Tabela.binaria(Lcap4/Item;)I: Line 28
   * Goal 22. cap5.Tabela.binaria(Lcap4/Item;)I: Line 29
   * Goal 23. cap5.Tabela.binaria(Lcap4/Item;)I: Line 30
   * Goal 24. cap5.Tabela.binaria(Lcap4/Item;)I: Line 31
   * Goal 25. cap5.Tabela.binaria(Lcap4/Item;)I: Line 32
   * Goal 26. cap5.Tabela.binaria(Lcap4/Item;)I: Line 33
   * Goal 27. cap5.Tabela.binaria(Lcap4/Item;)I: Line 34
   * Goal 28. cap5.Tabela.binaria(Lcap4/Item;)I: Line 35
   * Goal 29. cap5.Tabela.insere(Lcap4/Item;)V: Line 22
   * Goal 30. cap5.Tabela.insere(Lcap4/Item;)V: Line 24
   * Goal 31. cap5.Tabela.insere(Lcap4/Item;)V: Line 25
   * Goal 32. [METHOD] cap5.Tabela.<init>()V
   * Goal 33. [METHOD] cap5.Tabela.binaria(Lcap4/Item;)I
   * Goal 34. [METHOD] cap5.Tabela.insere(Lcap4/Item;)V
   * Goal 35. [METHODNOEX] cap5.Tabela.<init>()V
   * Goal 36. [METHODNOEX] cap5.Tabela.binaria(Lcap4/Item;)I
   * Goal 37. [METHODNOEX] cap5.Tabela.insere(Lcap4/Item;)V
   * Goal 38. Weak Mutation 0: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 0
   * Goal 39. Weak Mutation 1: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 1
   * Goal 40. Weak Mutation 2: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> -1
   * Goal 41. Weak Mutation 3: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 9
   * Goal 42. Weak Mutation 4: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 11
   * Goal 43. Weak Mutation 5: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 0
   * Goal 44. Weak Mutation 6: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 1
   * Goal 45. Weak Mutation 7: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> -1
   * Goal 46. Weak Mutation 8: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 10
   * Goal 47. Weak Mutation 9: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 12
   * Goal 48. Weak Mutation 10: cap5.Tabela.<init>()V:13 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 26: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp Negation
   * Goal 50. Weak Mutation 27: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp +1
   * Goal 51. Weak Mutation 28: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp -1
   * Goal 52. Weak Mutation 29: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceConstant - 1 -> 0
   * Goal 53. Weak Mutation 30: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> +
   * Goal 54. Weak Mutation 31: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> %
   * Goal 55. Weak Mutation 32: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> *
   * Goal 56. Weak Mutation 33: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> /
   * Goal 57. Weak Mutation 36: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceComparisonOperator != -> >
   * Goal 58. Weak Mutation 39: cap5.Tabela.insere(Lcap4/Item;)V:24 - InsertUnaryOp Negation
   * Goal 59. Weak Mutation 40: cap5.Tabela.insere(Lcap4/Item;)V:24 - InsertUnaryOp +1
   * Goal 60. Weak Mutation 41: cap5.Tabela.insere(Lcap4/Item;)V:24 - InsertUnaryOp -1
   * Goal 61. Weak Mutation 42: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceConstant - 1 -> 0
   * Goal 62. Weak Mutation 43: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> %
   * Goal 63. Weak Mutation 44: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> -
   * Goal 64. Weak Mutation 45: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> *
   * Goal 65. Weak Mutation 46: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> /
   * Goal 66. Weak Mutation 47: cap5.Tabela.binaria(Lcap4/Item;)I:27 - InsertUnaryOp Negation
   * Goal 67. Weak Mutation 48: cap5.Tabela.binaria(Lcap4/Item;)I:27 - InsertUnaryOp +1
   * Goal 68. Weak Mutation 49: cap5.Tabela.binaria(Lcap4/Item;)I:27 - InsertUnaryOp -1
   * Goal 69. Weak Mutation 51: cap5.Tabela.binaria(Lcap4/Item;)I:27 - ReplaceComparisonOperator != -> <
   * Goal 70. Weak Mutation 54: cap5.Tabela.binaria(Lcap4/Item;)I:28 - ReplaceConstant - 1 -> 0
   * Goal 71. Weak Mutation 55: cap5.Tabela.binaria(Lcap4/Item;)I:28 - InsertUnaryOp Negation
   * Goal 72. Weak Mutation 56: cap5.Tabela.binaria(Lcap4/Item;)I:28 - InsertUnaryOp +1
   * Goal 73. Weak Mutation 57: cap5.Tabela.binaria(Lcap4/Item;)I:28 - InsertUnaryOp -1
   * Goal 74. Weak Mutation 132: cap5.Tabela.binaria(Lcap4/Item;)I:29 - ReplaceComparisonOperator <= -> -1
   * Goal 75. Weak Mutation 60: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp Negation of esq
   * Goal 76. Weak Mutation 61: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC 1 esq
   * Goal 77. Weak Mutation 62: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC -1 esq
   * Goal 78. Weak Mutation 65: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp Negation of dir
   * Goal 79. Weak Mutation 66: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC 1 dir
   * Goal 80. Weak Mutation 67: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC -1 dir
   * Goal 81. Weak Mutation 68: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> %
   * Goal 82. Weak Mutation 69: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> -
   * Goal 83. Weak Mutation 70: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> *
   * Goal 84. Weak Mutation 71: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> /
   * Goal 85. Weak Mutation 72: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> 0
   * Goal 86. Weak Mutation 73: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> 1
   * Goal 87. Weak Mutation 74: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> -1
   * Goal 88. Weak Mutation 75: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> 3
   * Goal 89. Weak Mutation 76: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator / -> +
   * Goal 90. Weak Mutation 77: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator / -> %
   * Goal 91. Weak Mutation 78: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator / -> -
   * Goal 92. Weak Mutation 79: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator / -> *
   * Goal 93. Weak Mutation 83: cap5.Tabela.binaria(Lcap4/Item;)I:31 - InsertUnaryOp Negation of i
   * Goal 94. Weak Mutation 84: cap5.Tabela.binaria(Lcap4/Item;)I:31 - InsertUnaryOp IINC 1 i
   * Goal 95. Weak Mutation 85: cap5.Tabela.binaria(Lcap4/Item;)I:31 - InsertUnaryOp IINC -1 i
   * Goal 96. Weak Mutation 87: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceComparisonOperator <= -> ==
   * Goal 97. Weak Mutation 103: cap5.Tabela.binaria(Lcap4/Item;)I:32 - InsertUnaryOp Negation of i
   * Goal 98. Weak Mutation 104: cap5.Tabela.binaria(Lcap4/Item;)I:32 - InsertUnaryOp IINC 1 i
   * Goal 99. Weak Mutation 105: cap5.Tabela.binaria(Lcap4/Item;)I:32 - InsertUnaryOp IINC -1 i
   * Goal 100. Weak Mutation 106: cap5.Tabela.binaria(Lcap4/Item;)I:32 - ReplaceConstant - 1 -> 0
   * Goal 101. Weak Mutation 107: cap5.Tabela.binaria(Lcap4/Item;)I:32 - ReplaceArithmeticOperator - -> +
   * Goal 102. Weak Mutation 109: cap5.Tabela.binaria(Lcap4/Item;)I:32 - ReplaceArithmeticOperator - -> *
   * Goal 103. Weak Mutation 110: cap5.Tabela.binaria(Lcap4/Item;)I:32 - ReplaceArithmeticOperator - -> /
   * Goal 104. Weak Mutation 111: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceVariable i -> dir
   * Goal 105. Weak Mutation 114: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp Negation of i
   * Goal 106. Weak Mutation 115: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp IINC 1 i
   * Goal 107. Weak Mutation 116: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp IINC -1 i
   * Goal 108. Weak Mutation 119: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceComparisonOperator == -> <=
   * Goal 109. Weak Mutation 120: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceVariable esq -> dir
   * Goal 110. Weak Mutation 123: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp Negation of esq
   * Goal 111. Weak Mutation 124: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp IINC 1 esq
   * Goal 112. Weak Mutation 125: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp IINC -1 esq
   * Goal 113. Weak Mutation 126: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceVariable dir -> i
   * Goal 114. Weak Mutation 127: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceVariable dir -> esq
   * Goal 115. Weak Mutation 128: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceVariable dir -> n
   * Goal 116. Weak Mutation 129: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp Negation of dir
   * Goal 117. Weak Mutation 130: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp IINC 1 dir
   * Goal 118. Weak Mutation 131: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp IINC -1 dir
   * Goal 119. Weak Mutation 135: cap5.Tabela.binaria(Lcap4/Item;)I:34 - ReplaceVariable i -> dir
   * Goal 120. Weak Mutation 138: cap5.Tabela.binaria(Lcap4/Item;)I:34 - InsertUnaryOp Negation of i
   * Goal 121. Weak Mutation 139: cap5.Tabela.binaria(Lcap4/Item;)I:34 - InsertUnaryOp IINC 1 i
   * Goal 122. Weak Mutation 140: cap5.Tabela.binaria(Lcap4/Item;)I:34 - InsertUnaryOp IINC -1 i
   * Goal 123. Weak Mutation 143: cap5.Tabela.binaria(Lcap4/Item;)I:34 - ReplaceComparisonOperator != -> >
   * Goal 124. Weak Mutation 150: cap5.Tabela.binaria(Lcap4/Item;)I:35 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Tabela tabela0 = new Tabela();
      MeuItem meuItem0 = new MeuItem(0);
      tabela0.insere(meuItem0);
      MeuItem meuItem1 = new MeuItem((-607));
      int int0 = tabela0.binaria(meuItem1);
      assertEquals(1, tabela0.n);
      assertEquals(0, int0);
  }

  //Test case number: 2
  /*
   * 63 covered goals:
   * Goal 1. cap5.Tabela.<init>()V: root-Branch
   * Goal 2. cap5.Tabela.pesquisa(Lcap4/Item;)I: I24 Branch 1 IFNE L18 - false
   * Goal 3. cap5.Tabela.insere(Lcap4/Item;)V: I9 Branch 2 IF_ICMPNE L22 - true
   * Goal 4. Branch cap5.Tabela.<init>()V: root-Branch in context: cap5.Tabela:<init>()V
   * Goal 5. Branch cap5.Tabela.pesquisa(Lcap4/Item;)I: I24 Branch 1 IFNE L18 - false in context: cap5.Tabela:pesquisa(Lcap4/Item;)I
   * Goal 6. Branch cap5.Tabela.insere(Lcap4/Item;)V: I9 Branch 2 IF_ICMPNE L22 - true in context: cap5.Tabela:insere(Lcap4/Item;)V
   * Goal 7. [Output]: cap5.Tabela.pesquisa(Lcap4/Item;)I:Positive
   * Goal 8. cap5.Tabela.<init>()V: Line 11
   * Goal 9. cap5.Tabela.<init>()V: Line 12
   * Goal 10. cap5.Tabela.<init>()V: Line 13
   * Goal 11. cap5.Tabela.<init>()V: Line 14
   * Goal 12. cap5.Tabela.insere(Lcap4/Item;)V: Line 22
   * Goal 13. cap5.Tabela.insere(Lcap4/Item;)V: Line 24
   * Goal 14. cap5.Tabela.insere(Lcap4/Item;)V: Line 25
   * Goal 15. cap5.Tabela.pesquisa(Lcap4/Item;)I: Line 16
   * Goal 16. cap5.Tabela.pesquisa(Lcap4/Item;)I: Line 17
   * Goal 17. cap5.Tabela.pesquisa(Lcap4/Item;)I: Line 18
   * Goal 18. cap5.Tabela.pesquisa(Lcap4/Item;)I: Line 19
   * Goal 19. [METHOD] cap5.Tabela.<init>()V
   * Goal 20. [METHOD] cap5.Tabela.insere(Lcap4/Item;)V
   * Goal 21. [METHOD] cap5.Tabela.pesquisa(Lcap4/Item;)I
   * Goal 22. [METHODNOEX] cap5.Tabela.<init>()V
   * Goal 23. [METHODNOEX] cap5.Tabela.insere(Lcap4/Item;)V
   * Goal 24. [METHODNOEX] cap5.Tabela.pesquisa(Lcap4/Item;)I
   * Goal 25. Weak Mutation 0: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 0
   * Goal 26. Weak Mutation 1: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 1
   * Goal 27. Weak Mutation 2: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> -1
   * Goal 28. Weak Mutation 3: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 9
   * Goal 29. Weak Mutation 4: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 11
   * Goal 30. Weak Mutation 5: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 0
   * Goal 31. Weak Mutation 6: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 1
   * Goal 32. Weak Mutation 7: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> -1
   * Goal 33. Weak Mutation 8: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 10
   * Goal 34. Weak Mutation 9: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 12
   * Goal 35. Weak Mutation 10: cap5.Tabela.<init>()V:13 - ReplaceConstant - 0 -> 1
   * Goal 36. Weak Mutation 11: cap5.Tabela.pesquisa(Lcap4/Item;)I:16 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 12: cap5.Tabela.pesquisa(Lcap4/Item;)I:17 - InsertUnaryOp Negation
   * Goal 38. Weak Mutation 13: cap5.Tabela.pesquisa(Lcap4/Item;)I:17 - InsertUnaryOp +1
   * Goal 39. Weak Mutation 14: cap5.Tabela.pesquisa(Lcap4/Item;)I:17 - InsertUnaryOp -1
   * Goal 40. Weak Mutation 16: cap5.Tabela.pesquisa(Lcap4/Item;)I:18 - InsertUnaryOp Negation of i
   * Goal 41. Weak Mutation 17: cap5.Tabela.pesquisa(Lcap4/Item;)I:18 - InsertUnaryOp IINC 1 i
   * Goal 42. Weak Mutation 18: cap5.Tabela.pesquisa(Lcap4/Item;)I:18 - InsertUnaryOp IINC -1 i
   * Goal 43. Weak Mutation 19: cap5.Tabela.pesquisa(Lcap4/Item;)I:18 - ReplaceComparisonOperator != -> -1
   * Goal 44. Weak Mutation 23: cap5.Tabela.pesquisa(Lcap4/Item;)I:19 - InsertUnaryOp Negation of i
   * Goal 45. Weak Mutation 24: cap5.Tabela.pesquisa(Lcap4/Item;)I:19 - InsertUnaryOp IINC 1 i
   * Goal 46. Weak Mutation 25: cap5.Tabela.pesquisa(Lcap4/Item;)I:19 - InsertUnaryOp IINC -1 i
   * Goal 47. Weak Mutation 26: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 27: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp +1
   * Goal 49. Weak Mutation 28: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp -1
   * Goal 50. Weak Mutation 29: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceConstant - 1 -> 0
   * Goal 51. Weak Mutation 30: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> +
   * Goal 52. Weak Mutation 31: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> %
   * Goal 53. Weak Mutation 32: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> *
   * Goal 54. Weak Mutation 33: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> /
   * Goal 55. Weak Mutation 36: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceComparisonOperator != -> >
   * Goal 56. Weak Mutation 39: cap5.Tabela.insere(Lcap4/Item;)V:24 - InsertUnaryOp Negation
   * Goal 57. Weak Mutation 40: cap5.Tabela.insere(Lcap4/Item;)V:24 - InsertUnaryOp +1
   * Goal 58. Weak Mutation 41: cap5.Tabela.insere(Lcap4/Item;)V:24 - InsertUnaryOp -1
   * Goal 59. Weak Mutation 42: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceConstant - 1 -> 0
   * Goal 60. Weak Mutation 43: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> %
   * Goal 61. Weak Mutation 44: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> -
   * Goal 62. Weak Mutation 45: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> *
   * Goal 63. Weak Mutation 46: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> /
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Tabela tabela0 = new Tabela();
      MeuItem meuItem0 = new MeuItem(0);
      tabela0.insere(meuItem0);
      int int0 = tabela0.pesquisa(meuItem0);
      assertEquals(1, tabela0.n);
      assertEquals(1, int0);
  }

  //Test case number: 3
  /*
   * 62 covered goals:
   * Goal 1. cap5.Tabela.<init>()V: root-Branch
   * Goal 2. cap5.Tabela.binaria(Lcap4/Item;)I: I4 Branch 3 IFNE L27 - true
   * Goal 3. Branch cap5.Tabela.<init>()V: root-Branch in context: cap5.Tabela:<init>()V
   * Goal 4. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I4 Branch 3 IFNE L27 - true in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 5. binaria(Lcap4/Item;)I_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 6. cap5.Tabela.<init>()V: Line 11
   * Goal 7. cap5.Tabela.<init>()V: Line 12
   * Goal 8. cap5.Tabela.<init>()V: Line 13
   * Goal 9. cap5.Tabela.<init>()V: Line 14
   * Goal 10. cap5.Tabela.binaria(Lcap4/Item;)I: Line 27
   * Goal 11. cap5.Tabela.binaria(Lcap4/Item;)I: Line 28
   * Goal 12. cap5.Tabela.binaria(Lcap4/Item;)I: Line 30
   * Goal 13. cap5.Tabela.binaria(Lcap4/Item;)I: Line 31
   * Goal 14. [METHOD] cap5.Tabela.<init>()V
   * Goal 15. [METHOD] cap5.Tabela.binaria(Lcap4/Item;)I
   * Goal 16. [METHODNOEX] cap5.Tabela.<init>()V
   * Goal 17. Weak Mutation 0: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 0
   * Goal 18. Weak Mutation 1: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 1
   * Goal 19. Weak Mutation 2: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> -1
   * Goal 20. Weak Mutation 3: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 9
   * Goal 21. Weak Mutation 4: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 11
   * Goal 22. Weak Mutation 5: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 0
   * Goal 23. Weak Mutation 6: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 1
   * Goal 24. Weak Mutation 7: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> -1
   * Goal 25. Weak Mutation 8: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 10
   * Goal 26. Weak Mutation 9: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 12
   * Goal 27. Weak Mutation 10: cap5.Tabela.<init>()V:13 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 47: cap5.Tabela.binaria(Lcap4/Item;)I:27 - InsertUnaryOp Negation
   * Goal 29. Weak Mutation 48: cap5.Tabela.binaria(Lcap4/Item;)I:27 - InsertUnaryOp +1
   * Goal 30. Weak Mutation 49: cap5.Tabela.binaria(Lcap4/Item;)I:27 - InsertUnaryOp -1
   * Goal 31. Weak Mutation 52: cap5.Tabela.binaria(Lcap4/Item;)I:27 - ReplaceComparisonOperator != -> >
   * Goal 32. Weak Mutation 54: cap5.Tabela.binaria(Lcap4/Item;)I:28 - ReplaceConstant - 1 -> 0
   * Goal 33. Weak Mutation 55: cap5.Tabela.binaria(Lcap4/Item;)I:28 - InsertUnaryOp Negation
   * Goal 34. Weak Mutation 56: cap5.Tabela.binaria(Lcap4/Item;)I:28 - InsertUnaryOp +1
   * Goal 35. Weak Mutation 57: cap5.Tabela.binaria(Lcap4/Item;)I:28 - InsertUnaryOp -1
   * Goal 36. Weak Mutation 58: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceVariable esq -> dir
   * Goal 37. Weak Mutation 59: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceVariable esq -> n
   * Goal 38. Weak Mutation 60: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp Negation of esq
   * Goal 39. Weak Mutation 61: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC 1 esq
   * Goal 40. Weak Mutation 62: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC -1 esq
   * Goal 41. Weak Mutation 63: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceVariable dir -> esq
   * Goal 42. Weak Mutation 65: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp Negation of dir
   * Goal 43. Weak Mutation 66: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC 1 dir
   * Goal 44. Weak Mutation 67: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC -1 dir
   * Goal 45. Weak Mutation 68: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> %
   * Goal 46. Weak Mutation 69: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> -
   * Goal 47. Weak Mutation 70: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> *
   * Goal 48. Weak Mutation 71: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> /
   * Goal 49. Weak Mutation 72: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> 0
   * Goal 50. Weak Mutation 73: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> 1
   * Goal 51. Weak Mutation 74: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> -1
   * Goal 52. Weak Mutation 75: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> 3
   * Goal 53. Weak Mutation 76: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator / -> +
   * Goal 54. Weak Mutation 77: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator / -> %
   * Goal 55. Weak Mutation 78: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator / -> -
   * Goal 56. Weak Mutation 79: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator / -> *
   * Goal 57. Weak Mutation 80: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceVariable i -> dir
   * Goal 58. Weak Mutation 81: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceVariable i -> esq
   * Goal 59. Weak Mutation 82: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceVariable i -> n
   * Goal 60. Weak Mutation 83: cap5.Tabela.binaria(Lcap4/Item;)I:31 - InsertUnaryOp Negation of i
   * Goal 61. Weak Mutation 84: cap5.Tabela.binaria(Lcap4/Item;)I:31 - InsertUnaryOp IINC 1 i
   * Goal 62. Weak Mutation 85: cap5.Tabela.binaria(Lcap4/Item;)I:31 - InsertUnaryOp IINC -1 i
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Tabela tabela0 = new Tabela();
      MeuItem meuItem0 = new MeuItem(0);
      tabela0.n = (-3701);
      // Undeclared exception!
      try { 
        tabela0.binaria(meuItem0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1850
         //
    	  assertTrue(true);//assertThrownBy("cap5.Tabela", e);
      }
  }

  //Test case number: 4
  /*
   * 136 covered goals:
   * Goal 1. cap5.Tabela.<init>()V: root-Branch
   * Goal 2. cap5.Tabela.insere(Lcap4/Item;)V: I9 Branch 2 IF_ICMPNE L22 - true
   * Goal 3. cap5.Tabela.binaria(Lcap4/Item;)I: I4 Branch 3 IFNE L27 - true
   * Goal 4. cap5.Tabela.binaria(Lcap4/Item;)I: I56 Branch 6 IF_ICMPLE L29 - true
   * Goal 5. cap5.Tabela.binaria(Lcap4/Item;)I: I56 Branch 6 IF_ICMPLE L29 - false
   * Goal 6. cap5.Tabela.binaria(Lcap4/Item;)I: I31 Branch 4 IFLE L31 - false
   * Goal 7. cap5.Tabela.binaria(Lcap4/Item;)I: I51 Branch 5 IFEQ L33 - false
   * Goal 8. cap5.Tabela.binaria(Lcap4/Item;)I: I65 Branch 7 IFNE L34 - true
   * Goal 9. Branch cap5.Tabela.<init>()V: root-Branch in context: cap5.Tabela:<init>()V
   * Goal 10. Branch cap5.Tabela.insere(Lcap4/Item;)V: I9 Branch 2 IF_ICMPNE L22 - true in context: cap5.Tabela:insere(Lcap4/Item;)V
   * Goal 11. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I4 Branch 3 IFNE L27 - true in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 12. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I56 Branch 6 IF_ICMPLE L29 - true in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 13. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I56 Branch 6 IF_ICMPLE L29 - false in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 14. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I31 Branch 4 IFLE L31 - false in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 15. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I51 Branch 5 IFEQ L33 - false in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 16. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I65 Branch 7 IFNE L34 - true in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 17. [Output]: cap5.Tabela.binaria(Lcap4/Item;)I:Zero
   * Goal 18. cap5.Tabela.<init>()V: Line 11
   * Goal 19. cap5.Tabela.<init>()V: Line 12
   * Goal 20. cap5.Tabela.<init>()V: Line 13
   * Goal 21. cap5.Tabela.<init>()V: Line 14
   * Goal 22. cap5.Tabela.binaria(Lcap4/Item;)I: Line 27
   * Goal 23. cap5.Tabela.binaria(Lcap4/Item;)I: Line 28
   * Goal 24. cap5.Tabela.binaria(Lcap4/Item;)I: Line 29
   * Goal 25. cap5.Tabela.binaria(Lcap4/Item;)I: Line 30
   * Goal 26. cap5.Tabela.binaria(Lcap4/Item;)I: Line 31
   * Goal 27. cap5.Tabela.binaria(Lcap4/Item;)I: Line 33
   * Goal 28. cap5.Tabela.binaria(Lcap4/Item;)I: Line 34
   * Goal 29. cap5.Tabela.binaria(Lcap4/Item;)I: Line 35
   * Goal 30. cap5.Tabela.insere(Lcap4/Item;)V: Line 22
   * Goal 31. cap5.Tabela.insere(Lcap4/Item;)V: Line 24
   * Goal 32. cap5.Tabela.insere(Lcap4/Item;)V: Line 25
   * Goal 33. [METHOD] cap5.Tabela.<init>()V
   * Goal 34. [METHOD] cap5.Tabela.binaria(Lcap4/Item;)I
   * Goal 35. [METHOD] cap5.Tabela.insere(Lcap4/Item;)V
   * Goal 36. [METHODNOEX] cap5.Tabela.<init>()V
   * Goal 37. [METHODNOEX] cap5.Tabela.binaria(Lcap4/Item;)I
   * Goal 38. [METHODNOEX] cap5.Tabela.insere(Lcap4/Item;)V
   * Goal 39. Weak Mutation 0: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 0
   * Goal 40. Weak Mutation 1: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 1
   * Goal 41. Weak Mutation 2: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> -1
   * Goal 42. Weak Mutation 3: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 9
   * Goal 43. Weak Mutation 4: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 11
   * Goal 44. Weak Mutation 5: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 0
   * Goal 45. Weak Mutation 6: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 1
   * Goal 46. Weak Mutation 7: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> -1
   * Goal 47. Weak Mutation 8: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 10
   * Goal 48. Weak Mutation 9: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 12
   * Goal 49. Weak Mutation 10: cap5.Tabela.<init>()V:13 - ReplaceConstant - 0 -> 1
   * Goal 50. Weak Mutation 26: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 27: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp +1
   * Goal 52. Weak Mutation 28: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp -1
   * Goal 53. Weak Mutation 29: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceConstant - 1 -> 0
   * Goal 54. Weak Mutation 30: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> +
   * Goal 55. Weak Mutation 31: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> %
   * Goal 56. Weak Mutation 32: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> *
   * Goal 57. Weak Mutation 33: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> /
   * Goal 58. Weak Mutation 36: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceComparisonOperator != -> >
   * Goal 59. Weak Mutation 39: cap5.Tabela.insere(Lcap4/Item;)V:24 - InsertUnaryOp Negation
   * Goal 60. Weak Mutation 40: cap5.Tabela.insere(Lcap4/Item;)V:24 - InsertUnaryOp +1
   * Goal 61. Weak Mutation 41: cap5.Tabela.insere(Lcap4/Item;)V:24 - InsertUnaryOp -1
   * Goal 62. Weak Mutation 42: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceConstant - 1 -> 0
   * Goal 63. Weak Mutation 43: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> %
   * Goal 64. Weak Mutation 44: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> -
   * Goal 65. Weak Mutation 45: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> *
   * Goal 66. Weak Mutation 46: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> /
   * Goal 67. Weak Mutation 47: cap5.Tabela.binaria(Lcap4/Item;)I:27 - InsertUnaryOp Negation
   * Goal 68. Weak Mutation 48: cap5.Tabela.binaria(Lcap4/Item;)I:27 - InsertUnaryOp +1
   * Goal 69. Weak Mutation 49: cap5.Tabela.binaria(Lcap4/Item;)I:27 - InsertUnaryOp -1
   * Goal 70. Weak Mutation 51: cap5.Tabela.binaria(Lcap4/Item;)I:27 - ReplaceComparisonOperator != -> <
   * Goal 71. Weak Mutation 54: cap5.Tabela.binaria(Lcap4/Item;)I:28 - ReplaceConstant - 1 -> 0
   * Goal 72. Weak Mutation 55: cap5.Tabela.binaria(Lcap4/Item;)I:28 - InsertUnaryOp Negation
   * Goal 73. Weak Mutation 56: cap5.Tabela.binaria(Lcap4/Item;)I:28 - InsertUnaryOp +1
   * Goal 74. Weak Mutation 57: cap5.Tabela.binaria(Lcap4/Item;)I:28 - InsertUnaryOp -1
   * Goal 75. Weak Mutation 132: cap5.Tabela.binaria(Lcap4/Item;)I:29 - ReplaceComparisonOperator <= -> -1
   * Goal 76. Weak Mutation 133: cap5.Tabela.binaria(Lcap4/Item;)I:29 - ReplaceComparisonOperator <= -> <
   * Goal 77. Weak Mutation 58: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceVariable esq -> dir
   * Goal 78. Weak Mutation 59: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceVariable esq -> n
   * Goal 79. Weak Mutation 60: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp Negation of esq
   * Goal 80. Weak Mutation 61: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC 1 esq
   * Goal 81. Weak Mutation 62: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC -1 esq
   * Goal 82. Weak Mutation 63: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceVariable dir -> esq
   * Goal 83. Weak Mutation 65: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp Negation of dir
   * Goal 84. Weak Mutation 66: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC 1 dir
   * Goal 85. Weak Mutation 67: cap5.Tabela.binaria(Lcap4/Item;)I:30 - InsertUnaryOp IINC -1 dir
   * Goal 86. Weak Mutation 68: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> %
   * Goal 87. Weak Mutation 69: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> -
   * Goal 88. Weak Mutation 70: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> *
   * Goal 89. Weak Mutation 71: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator + -> /
   * Goal 90. Weak Mutation 72: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> 0
   * Goal 91. Weak Mutation 73: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> 1
   * Goal 92. Weak Mutation 74: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> -1
   * Goal 93. Weak Mutation 75: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceConstant - 2 -> 3
   * Goal 94. Weak Mutation 76: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator / -> +
   * Goal 95. Weak Mutation 77: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator / -> %
   * Goal 96. Weak Mutation 79: cap5.Tabela.binaria(Lcap4/Item;)I:30 - ReplaceArithmeticOperator / -> *
   * Goal 97. Weak Mutation 80: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceVariable i -> dir
   * Goal 98. Weak Mutation 82: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceVariable i -> n
   * Goal 99. Weak Mutation 83: cap5.Tabela.binaria(Lcap4/Item;)I:31 - InsertUnaryOp Negation of i
   * Goal 100. Weak Mutation 84: cap5.Tabela.binaria(Lcap4/Item;)I:31 - InsertUnaryOp IINC 1 i
   * Goal 101. Weak Mutation 85: cap5.Tabela.binaria(Lcap4/Item;)I:31 - InsertUnaryOp IINC -1 i
   * Goal 102. Weak Mutation 86: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceComparisonOperator <= -> -1
   * Goal 103. Weak Mutation 89: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceVariable i -> dir
   * Goal 104. Weak Mutation 91: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceVariable i -> n
   * Goal 105. Weak Mutation 92: cap5.Tabela.binaria(Lcap4/Item;)I:31 - InsertUnaryOp Negation of i
   * Goal 106. Weak Mutation 93: cap5.Tabela.binaria(Lcap4/Item;)I:31 - InsertUnaryOp IINC 1 i
   * Goal 107. Weak Mutation 94: cap5.Tabela.binaria(Lcap4/Item;)I:31 - InsertUnaryOp IINC -1 i
   * Goal 108. Weak Mutation 95: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceConstant - 1 -> 0
   * Goal 109. Weak Mutation 96: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceArithmeticOperator + -> %
   * Goal 110. Weak Mutation 97: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceArithmeticOperator + -> -
   * Goal 111. Weak Mutation 98: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceArithmeticOperator + -> *
   * Goal 112. Weak Mutation 99: cap5.Tabela.binaria(Lcap4/Item;)I:31 - ReplaceArithmeticOperator + -> /
   * Goal 113. Weak Mutation 111: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceVariable i -> dir
   * Goal 114. Weak Mutation 112: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceVariable i -> esq
   * Goal 115. Weak Mutation 113: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceVariable i -> n
   * Goal 116. Weak Mutation 114: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp Negation of i
   * Goal 117. Weak Mutation 115: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp IINC 1 i
   * Goal 118. Weak Mutation 116: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp IINC -1 i
   * Goal 119. Weak Mutation 118: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceComparisonOperator == -> >=
   * Goal 120. Weak Mutation 120: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceVariable esq -> dir
   * Goal 121. Weak Mutation 121: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceVariable esq -> i
   * Goal 122. Weak Mutation 122: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceVariable esq -> n
   * Goal 123. Weak Mutation 123: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp Negation of esq
   * Goal 124. Weak Mutation 124: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp IINC 1 esq
   * Goal 125. Weak Mutation 125: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp IINC -1 esq
   * Goal 126. Weak Mutation 126: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceVariable dir -> i
   * Goal 127. Weak Mutation 127: cap5.Tabela.binaria(Lcap4/Item;)I:33 - ReplaceVariable dir -> esq
   * Goal 128. Weak Mutation 129: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp Negation of dir
   * Goal 129. Weak Mutation 130: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp IINC 1 dir
   * Goal 130. Weak Mutation 131: cap5.Tabela.binaria(Lcap4/Item;)I:33 - InsertUnaryOp IINC -1 dir
   * Goal 131. Weak Mutation 136: cap5.Tabela.binaria(Lcap4/Item;)I:34 - ReplaceVariable i -> esq
   * Goal 132. Weak Mutation 138: cap5.Tabela.binaria(Lcap4/Item;)I:34 - InsertUnaryOp Negation of i
   * Goal 133. Weak Mutation 139: cap5.Tabela.binaria(Lcap4/Item;)I:34 - InsertUnaryOp IINC 1 i
   * Goal 134. Weak Mutation 140: cap5.Tabela.binaria(Lcap4/Item;)I:34 - InsertUnaryOp IINC -1 i
   * Goal 135. Weak Mutation 142: cap5.Tabela.binaria(Lcap4/Item;)I:34 - ReplaceComparisonOperator != -> <
   * Goal 136. Weak Mutation 150: cap5.Tabela.binaria(Lcap4/Item;)I:35 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Tabela tabela0 = new Tabela();
      MeuItem meuItem0 = new MeuItem(0);
      tabela0.insere(meuItem0);
      tabela0.insere(meuItem0);
      MeuItem meuItem1 = new MeuItem(10);
      int int0 = tabela0.binaria(meuItem1);
      assertEquals(2, tabela0.n);
      assertEquals(0, int0);
  }

  //Test case number: 5
  /*
   * 30 covered goals:
   * Goal 1. cap5.Tabela.<init>()V: root-Branch
   * Goal 2. cap5.Tabela.binaria(Lcap4/Item;)I: I4 Branch 3 IFNE L27 - false
   * Goal 3. Branch cap5.Tabela.<init>()V: root-Branch in context: cap5.Tabela:<init>()V
   * Goal 4. Branch cap5.Tabela.binaria(Lcap4/Item;)I: I4 Branch 3 IFNE L27 - false in context: cap5.Tabela:binaria(Lcap4/Item;)I
   * Goal 5. [Output]: cap5.Tabela.binaria(Lcap4/Item;)I:Zero
   * Goal 6. cap5.Tabela.<init>()V: Line 11
   * Goal 7. cap5.Tabela.<init>()V: Line 12
   * Goal 8. cap5.Tabela.<init>()V: Line 13
   * Goal 9. cap5.Tabela.<init>()V: Line 14
   * Goal 10. cap5.Tabela.binaria(Lcap4/Item;)I: Line 27
   * Goal 11. [METHOD] cap5.Tabela.<init>()V
   * Goal 12. [METHOD] cap5.Tabela.binaria(Lcap4/Item;)I
   * Goal 13. [METHODNOEX] cap5.Tabela.<init>()V
   * Goal 14. [METHODNOEX] cap5.Tabela.binaria(Lcap4/Item;)I
   * Goal 15. Weak Mutation 0: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 0
   * Goal 16. Weak Mutation 1: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 1
   * Goal 17. Weak Mutation 2: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> -1
   * Goal 18. Weak Mutation 3: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 9
   * Goal 19. Weak Mutation 4: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 11
   * Goal 20. Weak Mutation 5: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 0
   * Goal 21. Weak Mutation 6: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 1
   * Goal 22. Weak Mutation 7: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> -1
   * Goal 23. Weak Mutation 8: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 10
   * Goal 24. Weak Mutation 9: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 12
   * Goal 25. Weak Mutation 10: cap5.Tabela.<init>()V:13 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 47: cap5.Tabela.binaria(Lcap4/Item;)I:27 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 48: cap5.Tabela.binaria(Lcap4/Item;)I:27 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 49: cap5.Tabela.binaria(Lcap4/Item;)I:27 - InsertUnaryOp -1
   * Goal 29. Weak Mutation 50: cap5.Tabela.binaria(Lcap4/Item;)I:27 - ReplaceComparisonOperator != -> -1
   * Goal 30. Weak Mutation 53: cap5.Tabela.binaria(Lcap4/Item;)I:27 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Tabela tabela0 = new Tabela();
      MeuItem meuItem0 = new MeuItem(0);
      int int0 = tabela0.binaria(meuItem0);
      assertEquals(0, int0);
  }

  //Test case number: 6
  /*
   * 35 covered goals:
   * Goal 1. cap5.Tabela.<init>()V: root-Branch
   * Goal 2. cap5.Tabela.insere(Lcap4/Item;)V: I9 Branch 2 IF_ICMPNE L22 - false
   * Goal 3. Branch cap5.Tabela.<init>()V: root-Branch in context: cap5.Tabela:<init>()V
   * Goal 4. Branch cap5.Tabela.insere(Lcap4/Item;)V: I9 Branch 2 IF_ICMPNE L22 - false in context: cap5.Tabela:insere(Lcap4/Item;)V
   * Goal 5. insere(Lcap4/Item;)V_java.lang.Exception_DECLARED
   * Goal 6. cap5.Tabela.<init>()V: Line 11
   * Goal 7. cap5.Tabela.<init>()V: Line 12
   * Goal 8. cap5.Tabela.<init>()V: Line 13
   * Goal 9. cap5.Tabela.<init>()V: Line 14
   * Goal 10. cap5.Tabela.insere(Lcap4/Item;)V: Line 22
   * Goal 11. cap5.Tabela.insere(Lcap4/Item;)V: Line 23
   * Goal 12. [METHOD] cap5.Tabela.<init>()V
   * Goal 13. [METHOD] cap5.Tabela.insere(Lcap4/Item;)V
   * Goal 14. [METHODNOEX] cap5.Tabela.<init>()V
   * Goal 15. Weak Mutation 0: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 0
   * Goal 16. Weak Mutation 1: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 1
   * Goal 17. Weak Mutation 2: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> -1
   * Goal 18. Weak Mutation 3: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 9
   * Goal 19. Weak Mutation 4: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 11
   * Goal 20. Weak Mutation 5: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 0
   * Goal 21. Weak Mutation 6: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 1
   * Goal 22. Weak Mutation 7: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> -1
   * Goal 23. Weak Mutation 8: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 10
   * Goal 24. Weak Mutation 9: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 12
   * Goal 25. Weak Mutation 10: cap5.Tabela.<init>()V:13 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 26: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 27: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 28: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp -1
   * Goal 29. Weak Mutation 29: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceConstant - 1 -> 0
   * Goal 30. Weak Mutation 30: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> +
   * Goal 31. Weak Mutation 32: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> *
   * Goal 32. Weak Mutation 33: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> /
   * Goal 33. Weak Mutation 34: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceComparisonOperator != -> -1
   * Goal 34. Weak Mutation 37: cap5.Tabela.insere(Lcap4/Item;)V:23 - ReplaceConstant - Erro: A tabela esta cheia -> 
   * Goal 35. Weak Mutation 38: cap5.Tabela.insere(Lcap4/Item;)V:23 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Tabela tabela0 = new Tabela();
      Item[] itemArray0 = new Item[1];
      tabela0.registros = itemArray0;
      try { 
        tabela0.insere((Item) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Erro: A tabela esta cheia
         //
    	  assertTrue(true);//assertThrownBy("cap5.Tabela", e);
      }
  }

  //Test case number: 7
  /*
   * 68 covered goals:
   * Goal 1. cap5.Tabela.<init>()V: root-Branch
   * Goal 2. cap5.Tabela.pesquisa(Lcap4/Item;)I: I24 Branch 1 IFNE L18 - true
   * Goal 3. cap5.Tabela.pesquisa(Lcap4/Item;)I: I24 Branch 1 IFNE L18 - false
   * Goal 4. cap5.Tabela.insere(Lcap4/Item;)V: I9 Branch 2 IF_ICMPNE L22 - true
   * Goal 5. Branch cap5.Tabela.<init>()V: root-Branch in context: cap5.Tabela:<init>()V
   * Goal 6. Branch cap5.Tabela.pesquisa(Lcap4/Item;)I: I24 Branch 1 IFNE L18 - true in context: cap5.Tabela:pesquisa(Lcap4/Item;)I
   * Goal 7. Branch cap5.Tabela.pesquisa(Lcap4/Item;)I: I24 Branch 1 IFNE L18 - false in context: cap5.Tabela:pesquisa(Lcap4/Item;)I
   * Goal 8. Branch cap5.Tabela.insere(Lcap4/Item;)V: I9 Branch 2 IF_ICMPNE L22 - true in context: cap5.Tabela:insere(Lcap4/Item;)V
   * Goal 9. [Output]: cap5.Tabela.pesquisa(Lcap4/Item;)I:Zero
   * Goal 10. cap5.Tabela.<init>()V: Line 11
   * Goal 11. cap5.Tabela.<init>()V: Line 12
   * Goal 12. cap5.Tabela.<init>()V: Line 13
   * Goal 13. cap5.Tabela.<init>()V: Line 14
   * Goal 14. cap5.Tabela.insere(Lcap4/Item;)V: Line 22
   * Goal 15. cap5.Tabela.insere(Lcap4/Item;)V: Line 24
   * Goal 16. cap5.Tabela.insere(Lcap4/Item;)V: Line 25
   * Goal 17. cap5.Tabela.pesquisa(Lcap4/Item;)I: Line 16
   * Goal 18. cap5.Tabela.pesquisa(Lcap4/Item;)I: Line 17
   * Goal 19. cap5.Tabela.pesquisa(Lcap4/Item;)I: Line 18
   * Goal 20. cap5.Tabela.pesquisa(Lcap4/Item;)I: Line 19
   * Goal 21. [METHOD] cap5.Tabela.<init>()V
   * Goal 22. [METHOD] cap5.Tabela.insere(Lcap4/Item;)V
   * Goal 23. [METHOD] cap5.Tabela.pesquisa(Lcap4/Item;)I
   * Goal 24. [METHODNOEX] cap5.Tabela.<init>()V
   * Goal 25. [METHODNOEX] cap5.Tabela.insere(Lcap4/Item;)V
   * Goal 26. [METHODNOEX] cap5.Tabela.pesquisa(Lcap4/Item;)I
   * Goal 27. Weak Mutation 0: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 0
   * Goal 28. Weak Mutation 1: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 1
   * Goal 29. Weak Mutation 2: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> -1
   * Goal 30. Weak Mutation 3: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 9
   * Goal 31. Weak Mutation 4: cap5.Tabela.<init>()V:11 - ReplaceConstant - 10 -> 11
   * Goal 32. Weak Mutation 5: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 0
   * Goal 33. Weak Mutation 6: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 1
   * Goal 34. Weak Mutation 7: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> -1
   * Goal 35. Weak Mutation 8: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 10
   * Goal 36. Weak Mutation 9: cap5.Tabela.<init>()V:12 - ReplaceConstant - 11 -> 12
   * Goal 37. Weak Mutation 10: cap5.Tabela.<init>()V:13 - ReplaceConstant - 0 -> 1
   * Goal 38. Weak Mutation 11: cap5.Tabela.pesquisa(Lcap4/Item;)I:16 - ReplaceConstant - 0 -> 1
   * Goal 39. Weak Mutation 12: cap5.Tabela.pesquisa(Lcap4/Item;)I:17 - InsertUnaryOp Negation
   * Goal 40. Weak Mutation 13: cap5.Tabela.pesquisa(Lcap4/Item;)I:17 - InsertUnaryOp +1
   * Goal 41. Weak Mutation 14: cap5.Tabela.pesquisa(Lcap4/Item;)I:17 - InsertUnaryOp -1
   * Goal 42. Weak Mutation 15: cap5.Tabela.pesquisa(Lcap4/Item;)I:18 - ReplaceVariable i -> n
   * Goal 43. Weak Mutation 16: cap5.Tabela.pesquisa(Lcap4/Item;)I:18 - InsertUnaryOp Negation of i
   * Goal 44. Weak Mutation 17: cap5.Tabela.pesquisa(Lcap4/Item;)I:18 - InsertUnaryOp IINC 1 i
   * Goal 45. Weak Mutation 18: cap5.Tabela.pesquisa(Lcap4/Item;)I:18 - InsertUnaryOp IINC -1 i
   * Goal 46. Weak Mutation 19: cap5.Tabela.pesquisa(Lcap4/Item;)I:18 - ReplaceComparisonOperator != -> -1
   * Goal 47. Weak Mutation 21: cap5.Tabela.pesquisa(Lcap4/Item;)I:18 - ReplaceComparisonOperator != -> >
   * Goal 48. Weak Mutation 22: cap5.Tabela.pesquisa(Lcap4/Item;)I:19 - ReplaceVariable i -> n
   * Goal 49. Weak Mutation 23: cap5.Tabela.pesquisa(Lcap4/Item;)I:19 - InsertUnaryOp Negation of i
   * Goal 50. Weak Mutation 24: cap5.Tabela.pesquisa(Lcap4/Item;)I:19 - InsertUnaryOp IINC 1 i
   * Goal 51. Weak Mutation 25: cap5.Tabela.pesquisa(Lcap4/Item;)I:19 - InsertUnaryOp IINC -1 i
   * Goal 52. Weak Mutation 26: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp Negation
   * Goal 53. Weak Mutation 27: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp +1
   * Goal 54. Weak Mutation 28: cap5.Tabela.insere(Lcap4/Item;)V:22 - InsertUnaryOp -1
   * Goal 55. Weak Mutation 29: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceConstant - 1 -> 0
   * Goal 56. Weak Mutation 30: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> +
   * Goal 57. Weak Mutation 31: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> %
   * Goal 58. Weak Mutation 32: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> *
   * Goal 59. Weak Mutation 33: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceArithmeticOperator - -> /
   * Goal 60. Weak Mutation 36: cap5.Tabela.insere(Lcap4/Item;)V:22 - ReplaceComparisonOperator != -> >
   * Goal 61. Weak Mutation 39: cap5.Tabela.insere(Lcap4/Item;)V:24 - InsertUnaryOp Negation
   * Goal 62. Weak Mutation 40: cap5.Tabela.insere(Lcap4/Item;)V:24 - InsertUnaryOp +1
   * Goal 63. Weak Mutation 41: cap5.Tabela.insere(Lcap4/Item;)V:24 - InsertUnaryOp -1
   * Goal 64. Weak Mutation 42: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceConstant - 1 -> 0
   * Goal 65. Weak Mutation 43: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> %
   * Goal 66. Weak Mutation 44: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> -
   * Goal 67. Weak Mutation 45: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> *
   * Goal 68. Weak Mutation 46: cap5.Tabela.insere(Lcap4/Item;)V:24 - ReplaceArithmeticOperator + -> /
   */

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Tabela tabela0 = new Tabela();
      MeuItem meuItem0 = new MeuItem(0);
      tabela0.insere(meuItem0);
      MeuItem meuItem1 = new MeuItem(1);
      int int0 = tabela0.pesquisa(meuItem1);
      assertEquals(1, tabela0.n);
      assertEquals(0, int0);
  }
}
