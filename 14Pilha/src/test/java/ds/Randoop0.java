package ds;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Randoop0 {

  public static boolean debug = false;

  @Test
  public void test001() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test001"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj2 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);

  }

  @Test
  public void test002() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test002"); }


    ds.Pilha pilha0 = new ds.Pilha();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj1 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test003() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test003"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj4 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);

  }

  @Test
  public void test004() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test004"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj5 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);

  }

  @Test
  public void test005() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test005"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj5 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));

  }

  @Test
  public void test006() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test006"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    boolean b3 = pilha0.vazia();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj4 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);

  }

  @Test
  public void test007() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test007"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    boolean b5 = pilha0.vazia();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj6 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test008() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test008"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj6 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);

  }

  @Test
  public void test009() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test009"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj7 = pilha0.desempilha();
    int i8 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj9 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + (byte)10+ "'", obj7.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);

  }

  @Test
  public void test010() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test010"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    int i5 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj6 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);

  }

  @Test
  public void test011() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test011"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj5 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);

  }

  @Test
  public void test012() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test012"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj3 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);

  }

  @Test
  public void test013() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test013"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj3 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);

  }

  @Test
  public void test014() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test014"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)10.0f);
    boolean b8 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test015() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test015"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    boolean b6 = pilha0.vazia();
    int i7 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);

  }

  @Test
  public void test016() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test016"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj9 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + "hi!"+ "'", obj9.equals("hi!"));

  }

  @Test
  public void test017() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test017"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    boolean b4 = pilha0.vazia();
    ds.Pilha pilha5 = new ds.Pilha();
    int i6 = pilha5.tamanho();
    boolean b7 = pilha5.vazia();
    int i8 = pilha5.tamanho();
    int i9 = pilha5.tamanho();
    pilha5.empilha((java.lang.Object)(byte)10);
    pilha5.empilha((java.lang.Object)10.0d);
    ds.Pilha pilha14 = new ds.Pilha();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    pilha14.empilha((java.lang.Object)pilha15);
    boolean b20 = pilha14.vazia();
    pilha14.empilha((java.lang.Object)(short)1);
    boolean b23 = pilha14.vazia();
    java.lang.Object obj24 = pilha14.desempilha();
    pilha14.empilha((java.lang.Object)100.0f);
    int i27 = pilha14.tamanho();
    pilha5.empilha((java.lang.Object)i27);
    pilha0.empilha((java.lang.Object)i27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (short)1+ "'", obj24.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 2);

  }

  @Test
  public void test018() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test018"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha15 = new ds.Pilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha15.empilha((java.lang.Object)pilha16);
    pilha16.empilha((java.lang.Object)100);
    java.lang.Object obj23 = pilha16.desempilha();
    int i24 = pilha16.tamanho();
    pilha0.empilha((java.lang.Object)i24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj23 + "' != '" + 100+ "'", obj23.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);

  }

  @Test
  public void test019() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test019"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    boolean b5 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);

  }

  @Test
  public void test020() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test020"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)10.0d);
    java.lang.Object obj9 = pilha0.desempilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj17 = pilha10.desempilha();
    int i18 = pilha10.tamanho();
    pilha0.empilha((java.lang.Object)i18);
    boolean b20 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10.0d+ "'", obj9.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (byte)10+ "'", obj17.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test021() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test021"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj2 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);

  }

  @Test
  public void test022() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test022"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    java.lang.Object obj3 = pilha0.desempilha();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj4 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (short)0+ "'", obj3.equals((short)0));

  }

  @Test
  public void test023() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test023"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    boolean b4 = pilha0.vazia();
    boolean b5 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test024() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test024"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    ds.Pilha pilha16 = new ds.Pilha();
    pilha16.empilha((java.lang.Object)(short)0);
    pilha16.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)pilha16);
    boolean b22 = pilha16.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test025() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test025"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    boolean b5 = pilha0.vazia();
    boolean b6 = pilha0.vazia();
    boolean b7 = pilha0.vazia();
    int i8 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);

  }

  @Test
  public void test026() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test026"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    pilha0.empilha((java.lang.Object)i10);
    java.lang.Object obj12 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj12 + "' != '" + 0+ "'", obj12.equals(0));

  }

  @Test
  public void test027() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test027"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj8 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);

  }

  @Test
  public void test028() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test028"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj4 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);

  }

  @Test
  public void test029() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test029"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    boolean b3 = pilha0.vazia();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj6 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);

  }

  @Test
  public void test030() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test030"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    boolean b5 = pilha0.vazia();
    boolean b6 = pilha0.vazia();
    int i7 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);

  }

  @Test
  public void test031() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test031"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)"hi!");
    java.lang.Object obj14 = null;
    pilha10.empilha(obj14);
    int i16 = pilha10.tamanho();
    int i17 = pilha10.tamanho();
    java.lang.Object obj18 = pilha10.desempilha();
    pilha0.empilha((java.lang.Object)pilha10);
    java.lang.Object obj20 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)(byte)1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj20);

  }

  @Test
  public void test032() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test032"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    int i6 = pilha1.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj7 = pilha1.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);

  }

  @Test
  public void test033() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test033"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    int i8 = pilha0.tamanho();
    int i9 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);

  }

  @Test
  public void test034() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test034"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj16 = pilha10.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);

  }

  @Test
  public void test035() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test035"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    pilha1.empilha((java.lang.Object)100);
    java.lang.Object obj8 = pilha1.desempilha();
    int i9 = pilha1.tamanho();
    int i10 = pilha1.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj11 = pilha1.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + 100+ "'", obj8.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);

  }

  @Test
  public void test036() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test036"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    boolean b11 = pilha0.vazia();
    ds.Pilha pilha12 = new ds.Pilha();
    int i13 = pilha12.tamanho();
    boolean b14 = pilha12.vazia();
    int i15 = pilha12.tamanho();
    int i16 = pilha12.tamanho();
    int i17 = pilha12.tamanho();
    int i18 = pilha12.tamanho();
    pilha12.empilha((java.lang.Object)1.0d);
    ds.Pilha pilha21 = new ds.Pilha();
    int i22 = pilha21.tamanho();
    boolean b23 = pilha21.vazia();
    int i24 = pilha21.tamanho();
    pilha21.empilha((java.lang.Object)'a');
    pilha12.empilha((java.lang.Object)pilha21);
    java.lang.Object obj28 = pilha12.desempilha();
    pilha0.empilha(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + "hi!"+ "'", obj9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj28);

  }

  @Test
  public void test037() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test037"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(short)10);
    int i8 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);

  }

  @Test
  public void test038() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test038"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    java.lang.Object obj7 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + 1+ "'", obj7.equals(1));

  }

  @Test
  public void test039() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test039"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = null;
    pilha3.empilha(obj7);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    int i15 = pilha9.tamanho();
    int i16 = pilha9.tamanho();
    ds.Pilha pilha17 = new ds.Pilha();
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    pilha17.empilha((java.lang.Object)pilha18);
    int i23 = pilha17.tamanho();
    int i24 = pilha17.tamanho();
    pilha9.empilha((java.lang.Object)pilha17);
    pilha3.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha9);
    java.lang.Object obj28 = pilha9.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj28);

  }

  @Test
  public void test040() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test040"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    java.lang.Object obj16 = pilha0.desempilha();
    ds.Pilha pilha17 = new ds.Pilha();
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    pilha17.empilha((java.lang.Object)pilha18);
    boolean b23 = pilha17.vazia();
    pilha17.empilha((java.lang.Object)(short)1);
    boolean b26 = pilha17.vazia();
    pilha0.empilha((java.lang.Object)b26);
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    boolean b30 = pilha28.vazia();
    int i31 = pilha28.tamanho();
    int i32 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha35 = new ds.Pilha();
    int i36 = pilha35.tamanho();
    boolean b37 = pilha35.vazia();
    int i38 = pilha35.tamanho();
    int i39 = pilha35.tamanho();
    pilha35.empilha((java.lang.Object)(byte)10);
    pilha28.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj43 = pilha28.desempilha();
    java.lang.Object obj44 = pilha28.desempilha();
    pilha0.empilha((java.lang.Object)pilha28);
    boolean b46 = pilha28.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (byte)10+ "'", obj16.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (byte)10+ "'", obj43.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (byte)10+ "'", obj44.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);

  }

  @Test
  public void test041() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test041"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)100.0f);
    int i13 = pilha0.tamanho();
    int i14 = pilha0.tamanho();
    int i15 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 2);

  }

  @Test
  public void test042() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test042"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    int i6 = pilha1.tamanho();
    boolean b7 = pilha1.vazia();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj8 = pilha1.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);

  }

  @Test
  public void test043() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test043"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj11 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + "hi!"+ "'", obj9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test044() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test044"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)"hi!");
    java.lang.Object obj14 = null;
    pilha10.empilha(obj14);
    int i16 = pilha10.tamanho();
    int i17 = pilha10.tamanho();
    java.lang.Object obj18 = pilha10.desempilha();
    pilha0.empilha((java.lang.Object)pilha10);
    java.lang.Object obj20 = pilha0.desempilha();
    int i21 = pilha0.tamanho();
    java.lang.Object obj22 = pilha0.desempilha();
    boolean b23 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj22 + "' != '" + (short)1+ "'", obj22.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test045() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test045"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj18 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);

  }

  @Test
  public void test046() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test046"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    int i5 = pilha0.tamanho();
    boolean b6 = pilha0.vazia();
    int i7 = pilha0.tamanho();
    boolean b8 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);

  }

  @Test
  public void test047() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test047"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    boolean b7 = pilha0.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha8);
    ds.Pilha pilha15 = new ds.Pilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha15.empilha((java.lang.Object)pilha16);
    boolean b21 = pilha15.vazia();
    pilha15.empilha((java.lang.Object)(short)1);
    boolean b24 = pilha15.vazia();
    java.lang.Object obj25 = pilha15.desempilha();
    pilha15.empilha((java.lang.Object)100.0f);
    int i28 = pilha15.tamanho();
    ds.Pilha pilha29 = new ds.Pilha();
    ds.Pilha pilha30 = new ds.Pilha();
    int i31 = pilha30.tamanho();
    boolean b32 = pilha30.vazia();
    int i33 = pilha30.tamanho();
    pilha29.empilha((java.lang.Object)pilha30);
    boolean b35 = pilha29.vazia();
    pilha29.empilha((java.lang.Object)(short)1);
    boolean b38 = pilha29.vazia();
    java.lang.Object obj39 = pilha29.desempilha();
    pilha29.empilha((java.lang.Object)100.0f);
    pilha15.empilha((java.lang.Object)pilha29);
    pilha8.empilha((java.lang.Object)pilha15);
    int i44 = pilha8.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short)1+ "'", obj25.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short)1+ "'", obj39.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 2);

  }

  @Test
  public void test048() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test048"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    int i6 = pilha0.tamanho();
    ds.Pilha pilha7 = new ds.Pilha();
    ds.Pilha pilha8 = new ds.Pilha();
    int i9 = pilha8.tamanho();
    boolean b10 = pilha8.vazia();
    int i11 = pilha8.tamanho();
    pilha7.empilha((java.lang.Object)pilha8);
    int i13 = pilha7.tamanho();
    java.lang.Object obj14 = pilha7.desempilha();
    pilha0.empilha((java.lang.Object)pilha7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);

  }

  @Test
  public void test049() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test049"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    int i13 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)1);
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha9.empilha((java.lang.Object)i19);
    boolean b21 = pilha9.vazia();
    java.lang.Object obj22 = pilha9.desempilha();
    boolean b23 = pilha9.vazia();
    pilha0.empilha((java.lang.Object)b23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj22 + "' != '" + 0+ "'", obj22.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test050() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test050"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    java.lang.Object obj16 = pilha0.desempilha();
    int i17 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (byte)10+ "'", obj16.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);

  }

  @Test
  public void test051() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test051"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)10.0d);
    int i9 = pilha0.tamanho();
    java.lang.Object obj10 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + 10.0d+ "'", obj10.equals(10.0d));

  }

  @Test
  public void test052() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test052"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = pilha3.desempilha();
    pilha3.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha3);
    int i11 = pilha3.tamanho();
    int i12 = pilha3.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + "hi!"+ "'", obj7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 1);

  }

  @Test
  public void test053() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test053"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    int i5 = pilha0.tamanho();
    boolean b6 = pilha0.vazia();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = null;
    pilha0.empilha(obj8);
    java.lang.Object obj10 = pilha0.desempilha();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj11 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj10);

  }

  @Test
  public void test054() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test054"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    java.lang.Object obj9 = pilha0.desempilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    int i21 = pilha17.tamanho();
    pilha17.empilha((java.lang.Object)(byte)10);
    pilha10.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj25 = pilha10.desempilha();
    java.lang.Object obj26 = pilha10.desempilha();
    boolean b27 = pilha10.vazia();
    int i28 = pilha10.tamanho();
    int i29 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)(byte)(-1));
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b33 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100.0d+ "'", obj9.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (byte)10+ "'", obj25.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte)10+ "'", obj26.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);

  }

  @Test
  public void test055() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test055"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    int i6 = pilha5.tamanho();
    pilha5.empilha((java.lang.Object)"hi!");
    java.lang.Object obj9 = null;
    pilha5.empilha(obj9);
    int i11 = pilha5.tamanho();
    java.lang.Object obj12 = pilha5.desempilha();
    int i13 = pilha5.tamanho();
    int i14 = pilha5.tamanho();
    java.lang.Object obj15 = pilha5.desempilha();
    pilha0.empilha((java.lang.Object)pilha5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + "hi!"+ "'", obj15.equals("hi!"));

  }

  @Test
  public void test056() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test056"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    pilha1.empilha((java.lang.Object)100);
    java.lang.Object obj8 = pilha1.desempilha();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj9 = pilha1.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + 100+ "'", obj8.equals(100));

  }

  @Test
  public void test057() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test057"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    int i18 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj19 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);

  }

  @Test
  public void test058() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test058"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)1);
    boolean b18 = pilha11.vazia();
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    pilha11.empilha((java.lang.Object)pilha19);
    ds.Pilha pilha26 = new ds.Pilha();
    pilha26.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    pilha29.empilha((java.lang.Object)"hi!");
    java.lang.Object obj33 = pilha29.desempilha();
    pilha29.empilha((java.lang.Object)'4');
    pilha26.empilha((java.lang.Object)pilha29);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)"hi!");
    java.lang.Object obj41 = pilha37.desempilha();
    pilha37.empilha((java.lang.Object)'4');
    pilha29.empilha((java.lang.Object)'4');
    pilha11.empilha((java.lang.Object)pilha29);
    pilha0.empilha((java.lang.Object)pilha11);
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    pilha47.empilha((java.lang.Object)"hi!");
    java.lang.Object obj51 = null;
    pilha47.empilha(obj51);
    pilha47.empilha((java.lang.Object)100.0d);
    java.lang.Object obj55 = pilha47.desempilha();
    pilha11.empilha((java.lang.Object)pilha47);
    int i57 = pilha47.tamanho();
    java.lang.Object obj58 = pilha47.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + "hi!"+ "'", obj33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj41 + "' != '" + "hi!"+ "'", obj41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj55 + "' != '" + 100.0d+ "'", obj55.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i57 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj58);

  }

  @Test
  public void test059() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test059"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    boolean b4 = pilha0.vazia();
    int i5 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);

  }

  @Test
  public void test060() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test060"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    boolean b6 = pilha0.vazia();
    boolean b7 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test061() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test061"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    pilha0.empilha((java.lang.Object)i10);
    boolean b12 = pilha0.vazia();
    java.lang.Object obj13 = pilha0.desempilha();
    boolean b14 = pilha0.vazia();
    boolean b15 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj13 + "' != '" + 0+ "'", obj13.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test062() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test062"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)"hi!");
    java.lang.Object obj14 = null;
    pilha10.empilha(obj14);
    int i16 = pilha10.tamanho();
    int i17 = pilha10.tamanho();
    java.lang.Object obj18 = pilha10.desempilha();
    pilha0.empilha((java.lang.Object)pilha10);
    java.lang.Object obj20 = pilha0.desempilha();
    int i21 = pilha0.tamanho();
    int i22 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 2);

  }

  @Test
  public void test063() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test063"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    java.lang.Object obj9 = pilha0.desempilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)1);
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    pilha10.empilha((java.lang.Object)i20);
    pilha10.empilha((java.lang.Object)'4');
    int i24 = pilha10.tamanho();
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b26 = pilha10.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100.0d+ "'", obj9.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test064() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test064"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    int i8 = pilha0.tamanho();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    int i15 = pilha9.tamanho();
    int i16 = pilha9.tamanho();
    java.lang.Object obj17 = pilha9.desempilha();
    pilha0.empilha((java.lang.Object)pilha9);
    java.lang.Object obj19 = null;
    pilha9.empilha(obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);

  }

  @Test
  public void test065() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test065"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    int i9 = pilha0.tamanho();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)1);
    boolean b17 = pilha10.vazia();
    ds.Pilha pilha18 = new ds.Pilha();
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    boolean b21 = pilha19.vazia();
    int i22 = pilha19.tamanho();
    pilha18.empilha((java.lang.Object)pilha19);
    pilha10.empilha((java.lang.Object)pilha18);
    ds.Pilha pilha25 = new ds.Pilha();
    pilha25.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)"hi!");
    java.lang.Object obj32 = pilha28.desempilha();
    pilha28.empilha((java.lang.Object)'4');
    pilha25.empilha((java.lang.Object)pilha28);
    ds.Pilha pilha36 = new ds.Pilha();
    int i37 = pilha36.tamanho();
    pilha36.empilha((java.lang.Object)"hi!");
    java.lang.Object obj40 = pilha36.desempilha();
    pilha36.empilha((java.lang.Object)'4');
    pilha28.empilha((java.lang.Object)'4');
    pilha10.empilha((java.lang.Object)pilha28);
    pilha0.empilha((java.lang.Object)pilha10);
    java.lang.Object obj46 = pilha10.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + "hi!"+ "'", obj32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj40 + "' != '" + "hi!"+ "'", obj40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj46);

  }

  @Test
  public void test066() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test066"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    java.lang.Object obj16 = pilha0.desempilha();
    ds.Pilha pilha17 = new ds.Pilha();
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    pilha17.empilha((java.lang.Object)pilha18);
    boolean b23 = pilha17.vazia();
    pilha17.empilha((java.lang.Object)(short)1);
    boolean b26 = pilha17.vazia();
    pilha0.empilha((java.lang.Object)b26);
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    boolean b30 = pilha28.vazia();
    int i31 = pilha28.tamanho();
    int i32 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha35 = new ds.Pilha();
    int i36 = pilha35.tamanho();
    boolean b37 = pilha35.vazia();
    int i38 = pilha35.tamanho();
    int i39 = pilha35.tamanho();
    pilha35.empilha((java.lang.Object)(byte)10);
    pilha28.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj43 = pilha28.desempilha();
    java.lang.Object obj44 = pilha28.desempilha();
    pilha0.empilha((java.lang.Object)pilha28);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj46 = pilha28.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (byte)10+ "'", obj16.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (byte)10+ "'", obj43.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (byte)10+ "'", obj44.equals((byte)10));

  }

  @Test
  public void test067() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test067"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    java.lang.Object obj9 = pilha0.desempilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    int i21 = pilha17.tamanho();
    pilha17.empilha((java.lang.Object)(byte)10);
    pilha10.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj25 = pilha10.desempilha();
    java.lang.Object obj26 = pilha10.desempilha();
    boolean b27 = pilha10.vazia();
    int i28 = pilha10.tamanho();
    int i29 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)(byte)(-1));
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b33 = pilha10.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100.0d+ "'", obj9.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (byte)10+ "'", obj25.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte)10+ "'", obj26.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);

  }

  @Test
  public void test068() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test068"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = pilha3.desempilha();
    pilha3.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha3);
    java.lang.Object obj11 = pilha3.desempilha();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj12 = pilha3.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + "hi!"+ "'", obj7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj11 + "' != '" + '4'+ "'", obj11.equals('4'));

  }

  @Test
  public void test069() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test069"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    pilha9.empilha((java.lang.Object)100.0d);
    int i17 = pilha9.tamanho();
    java.lang.Object obj18 = pilha9.desempilha();
    pilha0.empilha(obj18);
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    int i22 = pilha20.tamanho();
    int i23 = pilha20.tamanho();
    pilha0.empilha((java.lang.Object)pilha20);
    ds.Pilha pilha25 = new ds.Pilha();
    ds.Pilha pilha26 = new ds.Pilha();
    int i27 = pilha26.tamanho();
    boolean b28 = pilha26.vazia();
    int i29 = pilha26.tamanho();
    pilha25.empilha((java.lang.Object)pilha26);
    boolean b31 = pilha25.vazia();
    pilha25.empilha((java.lang.Object)(short)1);
    boolean b34 = pilha25.vazia();
    java.lang.Object obj35 = pilha25.desempilha();
    pilha25.empilha((java.lang.Object)100.0f);
    int i38 = pilha25.tamanho();
    ds.Pilha pilha39 = new ds.Pilha();
    ds.Pilha pilha40 = new ds.Pilha();
    int i41 = pilha40.tamanho();
    boolean b42 = pilha40.vazia();
    int i43 = pilha40.tamanho();
    pilha39.empilha((java.lang.Object)pilha40);
    boolean b45 = pilha39.vazia();
    pilha39.empilha((java.lang.Object)(short)1);
    boolean b48 = pilha39.vazia();
    java.lang.Object obj49 = pilha39.desempilha();
    pilha39.empilha((java.lang.Object)100.0f);
    pilha25.empilha((java.lang.Object)pilha39);
    java.lang.Object obj53 = pilha25.desempilha();
    pilha0.empilha((java.lang.Object)pilha25);
    java.lang.Object obj55 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 100.0d+ "'", obj18.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short)1+ "'", obj35.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short)1+ "'", obj49.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj55);

  }

  @Test
  public void test070() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test070"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)100L);
    pilha0.empilha((java.lang.Object)100);
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    java.lang.Object obj11 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100+ "'", obj9.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 100L+ "'", obj11.equals(100L));

  }

  @Test
  public void test071() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test071"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    boolean b6 = pilha0.vazia();
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)"hi!");
    boolean b11 = pilha7.vazia();
    pilha0.empilha((java.lang.Object)pilha7);
    java.lang.Object obj13 = pilha7.desempilha();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj14 = pilha7.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj13 + "' != '" + "hi!"+ "'", obj13.equals("hi!"));

  }

  @Test
  public void test072() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test072"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj5 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);

  }

  @Test
  public void test073() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test073"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    int i14 = pilha8.tamanho();
    int i15 = pilha8.tamanho();
    pilha0.empilha((java.lang.Object)pilha8);
    java.lang.Object obj17 = pilha8.desempilha();
    int i18 = pilha8.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);

  }

  @Test
  public void test074() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test074"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b16 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)' ');
    java.lang.Object obj19 = pilha0.desempilha();
    java.lang.Object obj20 = pilha0.desempilha();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj21 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + ' '+ "'", obj19.equals(' '));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj20);

  }

  @Test
  public void test075() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test075"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    boolean b8 = pilha6.vazia();
    int i9 = pilha6.tamanho();
    ds.Pilha pilha10 = new ds.Pilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    pilha10.empilha((java.lang.Object)pilha11);
    boolean b16 = pilha10.vazia();
    pilha10.empilha((java.lang.Object)(short)1);
    boolean b19 = pilha10.vazia();
    java.lang.Object obj20 = pilha10.desempilha();
    ds.Pilha pilha21 = new ds.Pilha();
    int i22 = pilha21.tamanho();
    boolean b23 = pilha21.vazia();
    int i24 = pilha21.tamanho();
    int i25 = pilha21.tamanho();
    pilha21.empilha((java.lang.Object)1);
    boolean b28 = pilha21.vazia();
    ds.Pilha pilha29 = new ds.Pilha();
    ds.Pilha pilha30 = new ds.Pilha();
    int i31 = pilha30.tamanho();
    boolean b32 = pilha30.vazia();
    int i33 = pilha30.tamanho();
    pilha29.empilha((java.lang.Object)pilha30);
    pilha21.empilha((java.lang.Object)pilha29);
    ds.Pilha pilha36 = new ds.Pilha();
    pilha36.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha39 = new ds.Pilha();
    int i40 = pilha39.tamanho();
    pilha39.empilha((java.lang.Object)"hi!");
    java.lang.Object obj43 = pilha39.desempilha();
    pilha39.empilha((java.lang.Object)'4');
    pilha36.empilha((java.lang.Object)pilha39);
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    pilha47.empilha((java.lang.Object)"hi!");
    java.lang.Object obj51 = pilha47.desempilha();
    pilha47.empilha((java.lang.Object)'4');
    pilha39.empilha((java.lang.Object)'4');
    pilha21.empilha((java.lang.Object)pilha39);
    pilha10.empilha((java.lang.Object)pilha21);
    ds.Pilha pilha57 = new ds.Pilha();
    int i58 = pilha57.tamanho();
    pilha57.empilha((java.lang.Object)"hi!");
    java.lang.Object obj61 = null;
    pilha57.empilha(obj61);
    pilha57.empilha((java.lang.Object)100.0d);
    java.lang.Object obj65 = pilha57.desempilha();
    pilha21.empilha((java.lang.Object)pilha57);
    ds.Pilha pilha67 = new ds.Pilha();
    int i68 = pilha67.tamanho();
    boolean b69 = pilha67.vazia();
    int i70 = pilha67.tamanho();
    int i71 = pilha67.tamanho();
    pilha67.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha74 = new ds.Pilha();
    int i75 = pilha74.tamanho();
    boolean b76 = pilha74.vazia();
    int i77 = pilha74.tamanho();
    int i78 = pilha74.tamanho();
    pilha74.empilha((java.lang.Object)(byte)10);
    pilha67.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj82 = pilha67.desempilha();
    boolean b83 = pilha67.vazia();
    java.lang.Object obj84 = pilha67.desempilha();
    boolean b85 = pilha67.vazia();
    ds.Pilha pilha86 = new ds.Pilha();
    ds.Pilha pilha87 = new ds.Pilha();
    int i88 = pilha87.tamanho();
    boolean b89 = pilha87.vazia();
    int i90 = pilha87.tamanho();
    pilha86.empilha((java.lang.Object)pilha87);
    int i92 = pilha87.tamanho();
    pilha67.empilha((java.lang.Object)i92);
    java.lang.Object obj94 = pilha67.desempilha();
    pilha21.empilha((java.lang.Object)pilha67);
    pilha6.empilha((java.lang.Object)pilha67);
    pilha0.empilha((java.lang.Object)pilha67);
    java.lang.Object obj98 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short)1+ "'", obj20.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj43 + "' != '" + "hi!"+ "'", obj43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj51 + "' != '" + "hi!"+ "'", obj51.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj65 + "' != '" + 100.0d+ "'", obj65.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i70 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i71 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i75 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i77 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i78 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj82 + "' != '" + (byte)10+ "'", obj82.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj84 + "' != '" + (byte)10+ "'", obj84.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i88 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i90 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i92 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj94 + "' != '" + 0+ "'", obj94.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj98);

  }

  @Test
  public void test076() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test076"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    int i2 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj3 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);

  }

  @Test
  public void test077() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test077"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    java.lang.Object obj9 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 3+ "'", obj9.equals(3));

  }

  @Test
  public void test078() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test078"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    boolean b3 = pilha0.vazia();
    ds.Pilha pilha4 = new ds.Pilha();
    int i5 = pilha4.tamanho();
    pilha4.empilha((java.lang.Object)"hi!");
    java.lang.Object obj8 = null;
    pilha4.empilha(obj8);
    pilha0.empilha(obj8);
    java.lang.Object obj11 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);

  }

  @Test
  public void test079() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test079"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    boolean b15 = pilha9.vazia();
    pilha9.empilha((java.lang.Object)(short)1);
    boolean b18 = pilha9.vazia();
    java.lang.Object obj19 = pilha9.desempilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    int i24 = pilha20.tamanho();
    pilha20.empilha((java.lang.Object)1);
    boolean b27 = pilha20.vazia();
    ds.Pilha pilha28 = new ds.Pilha();
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    boolean b31 = pilha29.vazia();
    int i32 = pilha29.tamanho();
    pilha28.empilha((java.lang.Object)pilha29);
    pilha20.empilha((java.lang.Object)pilha28);
    ds.Pilha pilha35 = new ds.Pilha();
    pilha35.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha38 = new ds.Pilha();
    int i39 = pilha38.tamanho();
    pilha38.empilha((java.lang.Object)"hi!");
    java.lang.Object obj42 = pilha38.desempilha();
    pilha38.empilha((java.lang.Object)'4');
    pilha35.empilha((java.lang.Object)pilha38);
    ds.Pilha pilha46 = new ds.Pilha();
    int i47 = pilha46.tamanho();
    pilha46.empilha((java.lang.Object)"hi!");
    java.lang.Object obj50 = pilha46.desempilha();
    pilha46.empilha((java.lang.Object)'4');
    pilha38.empilha((java.lang.Object)'4');
    pilha20.empilha((java.lang.Object)pilha38);
    pilha9.empilha((java.lang.Object)pilha20);
    pilha0.empilha((java.lang.Object)pilha20);
    boolean b57 = pilha0.vazia();
    boolean b58 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short)1+ "'", obj19.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj42 + "' != '" + "hi!"+ "'", obj42.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj50 + "' != '" + "hi!"+ "'", obj50.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);

  }

  @Test
  public void test080() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test080"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    pilha0.empilha((java.lang.Object)i10);
    pilha0.empilha((java.lang.Object)'4');
    int i14 = pilha0.tamanho();
    boolean b15 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test081() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test081"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    boolean b8 = pilha6.vazia();
    int i9 = pilha6.tamanho();
    pilha5.empilha((java.lang.Object)pilha6);
    boolean b11 = pilha5.vazia();
    pilha5.empilha((java.lang.Object)(short)1);
    pilha0.empilha((java.lang.Object)(short)1);
    ds.Pilha pilha15 = new ds.Pilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha15.empilha((java.lang.Object)pilha16);
    int i21 = pilha15.tamanho();
    ds.Pilha pilha22 = new ds.Pilha();
    ds.Pilha pilha23 = new ds.Pilha();
    int i24 = pilha23.tamanho();
    boolean b25 = pilha23.vazia();
    int i26 = pilha23.tamanho();
    pilha22.empilha((java.lang.Object)pilha23);
    boolean b28 = pilha22.vazia();
    pilha22.empilha((java.lang.Object)(short)1);
    pilha15.empilha((java.lang.Object)pilha22);
    pilha0.empilha((java.lang.Object)pilha22);
    int i33 = pilha22.tamanho();
    ds.Pilha pilha34 = new ds.Pilha();
    int i35 = pilha34.tamanho();
    boolean b36 = pilha34.vazia();
    int i37 = pilha34.tamanho();
    int i38 = pilha34.tamanho();
    int i39 = pilha34.tamanho();
    ds.Pilha pilha40 = new ds.Pilha();
    int i41 = pilha40.tamanho();
    pilha40.empilha((java.lang.Object)"hi!");
    java.lang.Object obj44 = pilha40.desempilha();
    pilha40.empilha((java.lang.Object)'4');
    pilha40.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha49 = new ds.Pilha();
    int i50 = pilha49.tamanho();
    boolean b51 = pilha49.vazia();
    int i52 = pilha49.tamanho();
    int i53 = pilha49.tamanho();
    pilha49.empilha((java.lang.Object)(byte)10);
    pilha49.empilha((java.lang.Object)10.0d);
    java.lang.Object obj58 = pilha49.desempilha();
    ds.Pilha pilha59 = new ds.Pilha();
    int i60 = pilha59.tamanho();
    boolean b61 = pilha59.vazia();
    int i62 = pilha59.tamanho();
    int i63 = pilha59.tamanho();
    pilha59.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj66 = pilha59.desempilha();
    int i67 = pilha59.tamanho();
    pilha49.empilha((java.lang.Object)i67);
    pilha40.empilha((java.lang.Object)i67);
    pilha34.empilha((java.lang.Object)pilha40);
    ds.Pilha pilha71 = new ds.Pilha();
    ds.Pilha pilha72 = new ds.Pilha();
    int i73 = pilha72.tamanho();
    boolean b74 = pilha72.vazia();
    int i75 = pilha72.tamanho();
    pilha71.empilha((java.lang.Object)pilha72);
    boolean b77 = pilha71.vazia();
    pilha71.empilha((java.lang.Object)(short)1);
    boolean b80 = pilha71.vazia();
    java.lang.Object obj81 = pilha71.desempilha();
    java.lang.Object obj82 = pilha71.desempilha();
    pilha34.empilha(obj82);
    pilha22.empilha((java.lang.Object)pilha34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj44 + "' != '" + "hi!"+ "'", obj44.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i50 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj58 + "' != '" + 10.0d+ "'", obj58.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i60 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i62 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i63 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj66 + "' != '" + (byte)10+ "'", obj66.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i67 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i73 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i75 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj81 + "' != '" + (short)1+ "'", obj81.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj82);

  }

  @Test
  public void test082() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test082"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    int i9 = pilha0.tamanho();
    java.lang.Object obj10 = pilha0.desempilha();
    ds.Pilha pilha11 = new ds.Pilha();
    ds.Pilha pilha12 = new ds.Pilha();
    int i13 = pilha12.tamanho();
    boolean b14 = pilha12.vazia();
    int i15 = pilha12.tamanho();
    pilha11.empilha((java.lang.Object)pilha12);
    boolean b17 = pilha11.vazia();
    pilha11.empilha((java.lang.Object)(short)1);
    boolean b20 = pilha11.vazia();
    java.lang.Object obj21 = pilha11.desempilha();
    ds.Pilha pilha22 = new ds.Pilha();
    int i23 = pilha22.tamanho();
    boolean b24 = pilha22.vazia();
    int i25 = pilha22.tamanho();
    int i26 = pilha22.tamanho();
    pilha22.empilha((java.lang.Object)1);
    boolean b29 = pilha22.vazia();
    ds.Pilha pilha30 = new ds.Pilha();
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    boolean b33 = pilha31.vazia();
    int i34 = pilha31.tamanho();
    pilha30.empilha((java.lang.Object)pilha31);
    pilha22.empilha((java.lang.Object)pilha30);
    ds.Pilha pilha37 = new ds.Pilha();
    pilha37.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha40 = new ds.Pilha();
    int i41 = pilha40.tamanho();
    pilha40.empilha((java.lang.Object)"hi!");
    java.lang.Object obj44 = pilha40.desempilha();
    pilha40.empilha((java.lang.Object)'4');
    pilha37.empilha((java.lang.Object)pilha40);
    ds.Pilha pilha48 = new ds.Pilha();
    int i49 = pilha48.tamanho();
    pilha48.empilha((java.lang.Object)"hi!");
    java.lang.Object obj52 = pilha48.desempilha();
    pilha48.empilha((java.lang.Object)'4');
    pilha40.empilha((java.lang.Object)'4');
    pilha22.empilha((java.lang.Object)pilha40);
    pilha11.empilha((java.lang.Object)pilha22);
    ds.Pilha pilha58 = new ds.Pilha();
    int i59 = pilha58.tamanho();
    pilha58.empilha((java.lang.Object)"hi!");
    java.lang.Object obj62 = null;
    pilha58.empilha(obj62);
    pilha58.empilha((java.lang.Object)100.0d);
    java.lang.Object obj66 = pilha58.desempilha();
    pilha22.empilha((java.lang.Object)pilha58);
    pilha0.empilha((java.lang.Object)pilha58);
    int i69 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + 3+ "'", obj10.equals(3));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short)1+ "'", obj21.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj44 + "' != '" + "hi!"+ "'", obj44.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj52 + "' != '" + "hi!"+ "'", obj52.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj66 + "' != '" + 100.0d+ "'", obj66.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i69 == 2);

  }

  @Test
  public void test083() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test083"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    boolean b7 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);

  }

  @Test
  public void test084() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test084"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    java.lang.Object obj16 = pilha0.desempilha();
    boolean b17 = pilha0.vazia();
    int i18 = pilha0.tamanho();
    int i19 = pilha0.tamanho();
    int i20 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    int i23 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (byte)10+ "'", obj16.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 1);

  }

  @Test
  public void test085() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test085"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    int i7 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 1);

  }

  @Test
  public void test086() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test086"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    java.lang.Object obj9 = pilha0.desempilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)1);
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    pilha10.empilha((java.lang.Object)i20);
    pilha10.empilha((java.lang.Object)'4');
    int i24 = pilha10.tamanho();
    pilha0.empilha((java.lang.Object)pilha10);
    int i26 = pilha10.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100.0d+ "'", obj9.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 3);

  }

  @Test
  public void test087() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test087"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)"hi!");
    java.lang.Object obj14 = null;
    pilha10.empilha(obj14);
    int i16 = pilha10.tamanho();
    int i17 = pilha10.tamanho();
    java.lang.Object obj18 = pilha10.desempilha();
    pilha0.empilha((java.lang.Object)pilha10);
    java.lang.Object obj20 = pilha0.desempilha();
    boolean b21 = pilha0.vazia();
    int i22 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 2);

  }

  @Test
  public void test088() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test088"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = pilha6.desempilha();
    pilha6.empilha((java.lang.Object)'4');
    pilha6.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)(byte)10);
    pilha15.empilha((java.lang.Object)10.0d);
    java.lang.Object obj24 = pilha15.desempilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    int i29 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj32 = pilha25.desempilha();
    int i33 = pilha25.tamanho();
    pilha15.empilha((java.lang.Object)i33);
    pilha6.empilha((java.lang.Object)i33);
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)"hi!");
    java.lang.Object obj41 = null;
    pilha37.empilha(obj41);
    int i43 = pilha37.tamanho();
    int i44 = pilha37.tamanho();
    java.lang.Object obj45 = pilha37.desempilha();
    java.lang.Object obj46 = pilha37.desempilha();
    boolean b47 = pilha37.vazia();
    ds.Pilha pilha48 = new ds.Pilha();
    int i49 = pilha48.tamanho();
    boolean b50 = pilha48.vazia();
    int i51 = pilha48.tamanho();
    int i52 = pilha48.tamanho();
    int i53 = pilha48.tamanho();
    ds.Pilha pilha54 = new ds.Pilha();
    int i55 = pilha54.tamanho();
    int i56 = pilha54.tamanho();
    int i57 = pilha54.tamanho();
    pilha48.empilha((java.lang.Object)pilha54);
    pilha37.empilha((java.lang.Object)pilha54);
    pilha6.empilha((java.lang.Object)pilha54);
    int i61 = pilha6.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + 10.0d+ "'", obj24.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte)10+ "'", obj32.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj46 + "' != '" + "hi!"+ "'", obj46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i56 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i57 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 4);

  }

  @Test
  public void test089() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test089"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    boolean b3 = pilha0.vazia();
    int i4 = pilha0.tamanho();
    boolean b5 = pilha0.vazia();
    int i6 = pilha0.tamanho();
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj14 = pilha7.desempilha();
    int i15 = pilha7.tamanho();
    pilha0.empilha((java.lang.Object)i15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (byte)10+ "'", obj14.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);

  }

  @Test
  public void test090() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test090"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b16 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)' ');
    java.lang.Object obj19 = pilha0.desempilha();
    int i20 = pilha0.tamanho();
    java.lang.Object obj21 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + ' '+ "'", obj19.equals(' '));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj21);

  }

  @Test
  public void test091() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test091"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (byte)10+ "'", obj8.equals((byte)10));

  }

  @Test
  public void test092() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test092"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = pilha6.desempilha();
    pilha6.empilha((java.lang.Object)'4');
    pilha6.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)(byte)10);
    pilha15.empilha((java.lang.Object)10.0d);
    java.lang.Object obj24 = pilha15.desempilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    int i29 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj32 = pilha25.desempilha();
    int i33 = pilha25.tamanho();
    pilha15.empilha((java.lang.Object)i33);
    pilha6.empilha((java.lang.Object)i33);
    pilha0.empilha((java.lang.Object)pilha6);
    int i37 = pilha6.tamanho();
    boolean b38 = pilha6.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + 10.0d+ "'", obj24.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte)10+ "'", obj32.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);

  }

  @Test
  public void test093() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test093"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    ds.Pilha pilha3 = new ds.Pilha();
    boolean b4 = pilha3.vazia();
    int i5 = pilha3.tamanho();
    boolean b6 = pilha3.vazia();
    pilha0.empilha((java.lang.Object)b6);
    boolean b8 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test094() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test094"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)100L);
    pilha0.empilha((java.lang.Object)100);
    java.lang.Object obj9 = pilha0.desempilha();
    ds.Pilha pilha10 = new ds.Pilha();
    pilha10.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha13 = new ds.Pilha();
    int i14 = pilha13.tamanho();
    pilha13.empilha((java.lang.Object)"hi!");
    java.lang.Object obj17 = pilha13.desempilha();
    pilha13.empilha((java.lang.Object)'4');
    pilha10.empilha((java.lang.Object)pilha13);
    ds.Pilha pilha21 = new ds.Pilha();
    int i22 = pilha21.tamanho();
    pilha21.empilha((java.lang.Object)"hi!");
    java.lang.Object obj25 = pilha21.desempilha();
    pilha21.empilha((java.lang.Object)'4');
    pilha13.empilha((java.lang.Object)'4');
    ds.Pilha pilha29 = new ds.Pilha();
    ds.Pilha pilha30 = new ds.Pilha();
    int i31 = pilha30.tamanho();
    boolean b32 = pilha30.vazia();
    int i33 = pilha30.tamanho();
    pilha29.empilha((java.lang.Object)pilha30);
    boolean b35 = pilha29.vazia();
    pilha13.empilha((java.lang.Object)b35);
    pilha0.empilha((java.lang.Object)b35);
    boolean b38 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100+ "'", obj9.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj17 + "' != '" + "hi!"+ "'", obj17.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj25 + "' != '" + "hi!"+ "'", obj25.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);

  }

  @Test
  public void test095() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test095"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)10.0d);
    int i9 = pilha0.tamanho();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    int i12 = pilha10.tamanho();
    int i13 = pilha10.tamanho();
    pilha0.empilha((java.lang.Object)i13);
    java.lang.Object obj15 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + 0+ "'", obj15.equals(0));

  }

  @Test
  public void test096() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test096"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    boolean b9 = pilha0.vazia();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)"hi!");
    java.lang.Object obj14 = null;
    pilha10.empilha(obj14);
    pilha10.empilha((java.lang.Object)100.0d);
    int i18 = pilha10.tamanho();
    java.lang.Object obj19 = pilha10.desempilha();
    int i20 = pilha10.tamanho();
    pilha0.empilha((java.lang.Object)pilha10);
    int i22 = pilha10.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + 100.0d+ "'", obj19.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 2);

  }

  @Test
  public void test097() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test097"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    boolean b3 = pilha0.vazia();
    int i4 = pilha0.tamanho();
    boolean b5 = pilha0.vazia();
    int i6 = pilha0.tamanho();
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)1);
    pilha7.empilha((java.lang.Object)3);
    int i16 = pilha7.tamanho();
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    int i21 = pilha17.tamanho();
    pilha17.empilha((java.lang.Object)1);
    boolean b24 = pilha17.vazia();
    ds.Pilha pilha25 = new ds.Pilha();
    ds.Pilha pilha26 = new ds.Pilha();
    int i27 = pilha26.tamanho();
    boolean b28 = pilha26.vazia();
    int i29 = pilha26.tamanho();
    pilha25.empilha((java.lang.Object)pilha26);
    pilha17.empilha((java.lang.Object)pilha25);
    ds.Pilha pilha32 = new ds.Pilha();
    pilha32.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha35 = new ds.Pilha();
    int i36 = pilha35.tamanho();
    pilha35.empilha((java.lang.Object)"hi!");
    java.lang.Object obj39 = pilha35.desempilha();
    pilha35.empilha((java.lang.Object)'4');
    pilha32.empilha((java.lang.Object)pilha35);
    ds.Pilha pilha43 = new ds.Pilha();
    int i44 = pilha43.tamanho();
    pilha43.empilha((java.lang.Object)"hi!");
    java.lang.Object obj47 = pilha43.desempilha();
    pilha43.empilha((java.lang.Object)'4');
    pilha35.empilha((java.lang.Object)'4');
    pilha17.empilha((java.lang.Object)pilha35);
    pilha7.empilha((java.lang.Object)pilha17);
    java.lang.Object obj53 = pilha7.desempilha();
    int i54 = pilha7.tamanho();
    pilha0.empilha((java.lang.Object)pilha7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj39 + "' != '" + "hi!"+ "'", obj39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj47 + "' != '" + "hi!"+ "'", obj47.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i54 == 2);

  }

  @Test
  public void test098() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test098"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)10.0d);
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    boolean b15 = pilha9.vazia();
    pilha9.empilha((java.lang.Object)(short)1);
    boolean b18 = pilha9.vazia();
    java.lang.Object obj19 = pilha9.desempilha();
    pilha9.empilha((java.lang.Object)100.0f);
    int i22 = pilha9.tamanho();
    pilha0.empilha((java.lang.Object)i22);
    java.lang.Object obj24 = pilha0.desempilha();
    boolean b25 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short)1+ "'", obj19.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + 2+ "'", obj24.equals(2));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);

  }

  @Test
  public void test099() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test099"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)'a');
    java.lang.Object obj6 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj6 + "' != '" + 'a'+ "'", obj6.equals('a'));

  }

  @Test
  public void test100() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test100"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    int i7 = pilha0.tamanho();
    int i8 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);

  }

  @Test
  public void test101() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test101"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = pilha6.desempilha();
    pilha6.empilha((java.lang.Object)'4');
    pilha6.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)(byte)10);
    pilha15.empilha((java.lang.Object)10.0d);
    java.lang.Object obj24 = pilha15.desempilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    int i29 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj32 = pilha25.desempilha();
    int i33 = pilha25.tamanho();
    pilha15.empilha((java.lang.Object)i33);
    pilha6.empilha((java.lang.Object)i33);
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)"hi!");
    java.lang.Object obj41 = null;
    pilha37.empilha(obj41);
    int i43 = pilha37.tamanho();
    int i44 = pilha37.tamanho();
    java.lang.Object obj45 = pilha37.desempilha();
    java.lang.Object obj46 = pilha37.desempilha();
    boolean b47 = pilha37.vazia();
    ds.Pilha pilha48 = new ds.Pilha();
    int i49 = pilha48.tamanho();
    boolean b50 = pilha48.vazia();
    int i51 = pilha48.tamanho();
    int i52 = pilha48.tamanho();
    int i53 = pilha48.tamanho();
    ds.Pilha pilha54 = new ds.Pilha();
    int i55 = pilha54.tamanho();
    int i56 = pilha54.tamanho();
    int i57 = pilha54.tamanho();
    pilha48.empilha((java.lang.Object)pilha54);
    pilha37.empilha((java.lang.Object)pilha54);
    pilha6.empilha((java.lang.Object)pilha54);
    java.lang.Object obj61 = pilha6.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + 10.0d+ "'", obj24.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte)10+ "'", obj32.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj46 + "' != '" + "hi!"+ "'", obj46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i56 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i57 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj61);

  }

  @Test
  public void test102() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test102"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = pilha6.desempilha();
    pilha6.empilha((java.lang.Object)'4');
    pilha6.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)(byte)10);
    pilha15.empilha((java.lang.Object)10.0d);
    java.lang.Object obj24 = pilha15.desempilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    int i29 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj32 = pilha25.desempilha();
    int i33 = pilha25.tamanho();
    pilha15.empilha((java.lang.Object)i33);
    pilha6.empilha((java.lang.Object)i33);
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    boolean b39 = pilha37.vazia();
    int i40 = pilha37.tamanho();
    int i41 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha44 = new ds.Pilha();
    int i45 = pilha44.tamanho();
    boolean b46 = pilha44.vazia();
    int i47 = pilha44.tamanho();
    int i48 = pilha44.tamanho();
    pilha44.empilha((java.lang.Object)(byte)10);
    pilha37.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj52 = pilha37.desempilha();
    boolean b53 = pilha37.vazia();
    java.lang.Object obj54 = pilha37.desempilha();
    boolean b55 = pilha37.vazia();
    boolean b56 = pilha37.vazia();
    pilha37.empilha((java.lang.Object)'#');
    boolean b59 = pilha37.vazia();
    pilha0.empilha((java.lang.Object)pilha37);
    boolean b61 = pilha37.vazia();
    int i62 = pilha37.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + 10.0d+ "'", obj24.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte)10+ "'", obj32.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (byte)10+ "'", obj52.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (byte)10+ "'", obj54.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i62 == 1);

  }

  @Test
  public void test103() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test103"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    int i8 = pilha6.tamanho();
    int i9 = pilha6.tamanho();
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)1);
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    pilha11.empilha((java.lang.Object)i21);
    pilha11.empilha((java.lang.Object)'4');
    int i25 = pilha11.tamanho();
    java.lang.Object obj26 = pilha11.desempilha();
    pilha6.empilha(obj26);
    java.lang.Object obj28 = pilha6.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + '4'+ "'", obj26.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj28 + "' != '" + '4'+ "'", obj28.equals('4'));

  }

  @Test
  public void test104() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test104"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    boolean b6 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);

  }

  @Test
  public void test105() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test105"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    int i14 = pilha8.tamanho();
    int i15 = pilha8.tamanho();
    pilha0.empilha((java.lang.Object)pilha8);
    int i17 = pilha0.tamanho();
    int i18 = pilha0.tamanho();
    int i19 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 3);

  }

  @Test
  public void test106() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test106"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    boolean b4 = pilha0.vazia();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj5 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);

  }

  @Test
  public void test107() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test107"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    boolean b18 = pilha0.vazia();
    boolean b19 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)'#');
    boolean b22 = pilha0.vazia();
    java.lang.Object obj23 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (byte)10+ "'", obj17.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj23 + "' != '" + '#'+ "'", obj23.equals('#'));

  }

  @Test
  public void test108() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test108"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    java.lang.Object obj9 = pilha0.desempilha();
    int i10 = pilha0.tamanho();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)"hi!");
    java.lang.Object obj15 = null;
    pilha11.empilha(obj15);
    pilha11.empilha((java.lang.Object)100.0d);
    int i19 = pilha11.tamanho();
    boolean b20 = pilha11.vazia();
    boolean b21 = pilha11.vazia();
    pilha0.empilha((java.lang.Object)pilha11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100.0d+ "'", obj9.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test109() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test109"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    java.lang.Object obj16 = pilha0.desempilha();
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    int i21 = pilha17.tamanho();
    pilha17.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    boolean b26 = pilha24.vazia();
    int i27 = pilha24.tamanho();
    int i28 = pilha24.tamanho();
    pilha24.empilha((java.lang.Object)(byte)10);
    pilha17.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj32 = pilha17.desempilha();
    java.lang.Object obj33 = pilha17.desempilha();
    boolean b34 = pilha17.vazia();
    int i35 = pilha17.tamanho();
    pilha0.empilha((java.lang.Object)pilha17);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj37 = pilha17.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (byte)10+ "'", obj16.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte)10+ "'", obj32.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte)10+ "'", obj33.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);

  }

  @Test
  public void test110() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test110"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = pilha3.desempilha();
    pilha3.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha3);
    java.lang.Object obj11 = pilha3.desempilha();
    ds.Pilha pilha12 = new ds.Pilha();
    int i13 = pilha12.tamanho();
    boolean b14 = pilha12.vazia();
    int i15 = pilha12.tamanho();
    int i16 = pilha12.tamanho();
    pilha12.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    boolean b21 = pilha19.vazia();
    int i22 = pilha19.tamanho();
    int i23 = pilha19.tamanho();
    pilha19.empilha((java.lang.Object)(byte)10);
    pilha12.empilha((java.lang.Object)(byte)10);
    boolean b27 = pilha12.vazia();
    boolean b28 = pilha12.vazia();
    pilha3.empilha((java.lang.Object)pilha12);
    java.lang.Object obj30 = pilha3.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + "hi!"+ "'", obj7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj11 + "' != '" + '4'+ "'", obj11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj30);

  }

  @Test
  public void test111() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test111"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    boolean b15 = pilha9.vazia();
    pilha9.empilha((java.lang.Object)(short)1);
    boolean b18 = pilha9.vazia();
    java.lang.Object obj19 = pilha9.desempilha();
    ds.Pilha pilha20 = new ds.Pilha();
    ds.Pilha pilha21 = new ds.Pilha();
    int i22 = pilha21.tamanho();
    boolean b23 = pilha21.vazia();
    int i24 = pilha21.tamanho();
    pilha20.empilha((java.lang.Object)pilha21);
    int i26 = pilha21.tamanho();
    int i27 = pilha21.tamanho();
    pilha9.empilha((java.lang.Object)i27);
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    pilha29.empilha((java.lang.Object)"hi!");
    java.lang.Object obj33 = pilha29.desempilha();
    pilha29.empilha((java.lang.Object)'4');
    pilha29.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha38 = new ds.Pilha();
    pilha38.empilha((java.lang.Object)(short)0);
    pilha38.empilha((java.lang.Object)(byte)10);
    pilha38.empilha((java.lang.Object)100L);
    pilha29.empilha((java.lang.Object)100L);
    pilha9.empilha((java.lang.Object)pilha29);
    pilha0.empilha((java.lang.Object)pilha9);
    boolean b48 = pilha9.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + 100.0d+ "'", obj8.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short)1+ "'", obj19.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + "hi!"+ "'", obj33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);

  }

  @Test
  public void test112() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test112"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    boolean b8 = pilha6.vazia();
    int i9 = pilha6.tamanho();
    pilha5.empilha((java.lang.Object)pilha6);
    boolean b11 = pilha5.vazia();
    pilha5.empilha((java.lang.Object)(short)1);
    pilha0.empilha((java.lang.Object)(short)1);
    ds.Pilha pilha15 = new ds.Pilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha15.empilha((java.lang.Object)pilha16);
    int i21 = pilha15.tamanho();
    ds.Pilha pilha22 = new ds.Pilha();
    ds.Pilha pilha23 = new ds.Pilha();
    int i24 = pilha23.tamanho();
    boolean b25 = pilha23.vazia();
    int i26 = pilha23.tamanho();
    pilha22.empilha((java.lang.Object)pilha23);
    boolean b28 = pilha22.vazia();
    pilha22.empilha((java.lang.Object)(short)1);
    pilha15.empilha((java.lang.Object)pilha22);
    pilha0.empilha((java.lang.Object)pilha22);
    boolean b33 = pilha22.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);

  }

  @Test
  public void test113() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test113"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    int i22 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)(byte)10);
    pilha11.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj26 = pilha11.desempilha();
    pilha0.empilha(obj26);
    java.lang.Object obj28 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + "hi!"+ "'", obj9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte)10+ "'", obj26.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (byte)10+ "'", obj28.equals((byte)10));

  }

  @Test
  public void test114() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test114"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    boolean b18 = pilha0.vazia();
    boolean b19 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)'#');
    boolean b22 = pilha0.vazia();
    int i23 = pilha0.tamanho();
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    boolean b26 = pilha24.vazia();
    int i27 = pilha24.tamanho();
    int i28 = pilha24.tamanho();
    pilha24.empilha((java.lang.Object)(byte)10);
    pilha24.empilha((java.lang.Object)10.0d);
    java.lang.Object obj33 = pilha24.desempilha();
    pilha0.empilha(obj33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (byte)10+ "'", obj17.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + 10.0d+ "'", obj33.equals(10.0d));

  }

  @Test
  public void test115() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test115"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    boolean b8 = pilha6.vazia();
    int i9 = pilha6.tamanho();
    ds.Pilha pilha10 = new ds.Pilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    pilha10.empilha((java.lang.Object)pilha11);
    boolean b16 = pilha10.vazia();
    pilha10.empilha((java.lang.Object)(short)1);
    boolean b19 = pilha10.vazia();
    java.lang.Object obj20 = pilha10.desempilha();
    ds.Pilha pilha21 = new ds.Pilha();
    int i22 = pilha21.tamanho();
    boolean b23 = pilha21.vazia();
    int i24 = pilha21.tamanho();
    int i25 = pilha21.tamanho();
    pilha21.empilha((java.lang.Object)1);
    boolean b28 = pilha21.vazia();
    ds.Pilha pilha29 = new ds.Pilha();
    ds.Pilha pilha30 = new ds.Pilha();
    int i31 = pilha30.tamanho();
    boolean b32 = pilha30.vazia();
    int i33 = pilha30.tamanho();
    pilha29.empilha((java.lang.Object)pilha30);
    pilha21.empilha((java.lang.Object)pilha29);
    ds.Pilha pilha36 = new ds.Pilha();
    pilha36.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha39 = new ds.Pilha();
    int i40 = pilha39.tamanho();
    pilha39.empilha((java.lang.Object)"hi!");
    java.lang.Object obj43 = pilha39.desempilha();
    pilha39.empilha((java.lang.Object)'4');
    pilha36.empilha((java.lang.Object)pilha39);
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    pilha47.empilha((java.lang.Object)"hi!");
    java.lang.Object obj51 = pilha47.desempilha();
    pilha47.empilha((java.lang.Object)'4');
    pilha39.empilha((java.lang.Object)'4');
    pilha21.empilha((java.lang.Object)pilha39);
    pilha10.empilha((java.lang.Object)pilha21);
    ds.Pilha pilha57 = new ds.Pilha();
    int i58 = pilha57.tamanho();
    pilha57.empilha((java.lang.Object)"hi!");
    java.lang.Object obj61 = null;
    pilha57.empilha(obj61);
    pilha57.empilha((java.lang.Object)100.0d);
    java.lang.Object obj65 = pilha57.desempilha();
    pilha21.empilha((java.lang.Object)pilha57);
    ds.Pilha pilha67 = new ds.Pilha();
    int i68 = pilha67.tamanho();
    boolean b69 = pilha67.vazia();
    int i70 = pilha67.tamanho();
    int i71 = pilha67.tamanho();
    pilha67.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha74 = new ds.Pilha();
    int i75 = pilha74.tamanho();
    boolean b76 = pilha74.vazia();
    int i77 = pilha74.tamanho();
    int i78 = pilha74.tamanho();
    pilha74.empilha((java.lang.Object)(byte)10);
    pilha67.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj82 = pilha67.desempilha();
    boolean b83 = pilha67.vazia();
    java.lang.Object obj84 = pilha67.desempilha();
    boolean b85 = pilha67.vazia();
    ds.Pilha pilha86 = new ds.Pilha();
    ds.Pilha pilha87 = new ds.Pilha();
    int i88 = pilha87.tamanho();
    boolean b89 = pilha87.vazia();
    int i90 = pilha87.tamanho();
    pilha86.empilha((java.lang.Object)pilha87);
    int i92 = pilha87.tamanho();
    pilha67.empilha((java.lang.Object)i92);
    java.lang.Object obj94 = pilha67.desempilha();
    pilha21.empilha((java.lang.Object)pilha67);
    pilha6.empilha((java.lang.Object)pilha67);
    pilha0.empilha((java.lang.Object)pilha67);
    boolean b98 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short)1+ "'", obj20.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj43 + "' != '" + "hi!"+ "'", obj43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj51 + "' != '" + "hi!"+ "'", obj51.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj65 + "' != '" + 100.0d+ "'", obj65.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i70 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i71 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i75 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i77 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i78 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj82 + "' != '" + (byte)10+ "'", obj82.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj84 + "' != '" + (byte)10+ "'", obj84.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i88 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i90 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i92 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj94 + "' != '" + 0+ "'", obj94.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b98 == false);

  }

  @Test
  public void test116() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test116"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)1);
    boolean b18 = pilha11.vazia();
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    pilha11.empilha((java.lang.Object)pilha19);
    ds.Pilha pilha26 = new ds.Pilha();
    ds.Pilha pilha27 = new ds.Pilha();
    int i28 = pilha27.tamanho();
    boolean b29 = pilha27.vazia();
    int i30 = pilha27.tamanho();
    pilha26.empilha((java.lang.Object)pilha27);
    boolean b32 = pilha26.vazia();
    pilha26.empilha((java.lang.Object)(short)1);
    boolean b35 = pilha26.vazia();
    java.lang.Object obj36 = pilha26.desempilha();
    pilha26.empilha((java.lang.Object)100.0f);
    int i39 = pilha26.tamanho();
    ds.Pilha pilha40 = new ds.Pilha();
    ds.Pilha pilha41 = new ds.Pilha();
    int i42 = pilha41.tamanho();
    boolean b43 = pilha41.vazia();
    int i44 = pilha41.tamanho();
    pilha40.empilha((java.lang.Object)pilha41);
    boolean b46 = pilha40.vazia();
    pilha40.empilha((java.lang.Object)(short)1);
    boolean b49 = pilha40.vazia();
    java.lang.Object obj50 = pilha40.desempilha();
    pilha40.empilha((java.lang.Object)100.0f);
    pilha26.empilha((java.lang.Object)pilha40);
    pilha19.empilha((java.lang.Object)pilha26);
    java.lang.Object obj55 = pilha19.desempilha();
    ds.Pilha pilha56 = new ds.Pilha();
    int i57 = pilha56.tamanho();
    pilha56.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj60 = null;
    pilha56.empilha(obj60);
    int i62 = pilha56.tamanho();
    pilha19.empilha((java.lang.Object)i62);
    pilha0.empilha((java.lang.Object)i62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte)(-1)+ "'", obj10.equals((byte)(-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (short)1+ "'", obj36.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short)1+ "'", obj50.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i57 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i62 == 2);

  }

  @Test
  public void test117() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test117"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    boolean b18 = pilha0.vazia();
    boolean b19 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)'#');
    boolean b22 = pilha0.vazia();
    int i23 = pilha0.tamanho();
    int i24 = pilha0.tamanho();
    boolean b25 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (byte)10+ "'", obj17.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);

  }

  @Test
  public void test118() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test118"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    boolean b7 = pilha0.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha8);
    ds.Pilha pilha15 = new ds.Pilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha15.empilha((java.lang.Object)pilha16);
    boolean b21 = pilha15.vazia();
    pilha15.empilha((java.lang.Object)(short)1);
    boolean b24 = pilha15.vazia();
    java.lang.Object obj25 = pilha15.desempilha();
    pilha15.empilha((java.lang.Object)100.0f);
    boolean b28 = pilha15.vazia();
    pilha15.empilha((java.lang.Object)"hi!");
    pilha8.empilha((java.lang.Object)"hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short)1+ "'", obj25.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test119() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test119"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    pilha9.empilha((java.lang.Object)100.0d);
    int i17 = pilha9.tamanho();
    java.lang.Object obj18 = pilha9.desempilha();
    pilha0.empilha(obj18);
    int i20 = pilha0.tamanho();
    int i21 = pilha0.tamanho();
    int i22 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 100.0d+ "'", obj18.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 3);

  }

  @Test
  public void test120() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test120"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)100.0f);
    int i13 = pilha0.tamanho();
    ds.Pilha pilha14 = new ds.Pilha();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    pilha14.empilha((java.lang.Object)pilha15);
    boolean b20 = pilha14.vazia();
    pilha14.empilha((java.lang.Object)(short)1);
    boolean b23 = pilha14.vazia();
    java.lang.Object obj24 = pilha14.desempilha();
    pilha14.empilha((java.lang.Object)100.0f);
    pilha0.empilha((java.lang.Object)pilha14);
    int i28 = pilha14.tamanho();
    int i29 = pilha14.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (short)1+ "'", obj24.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 2);

  }

  @Test
  public void test121() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test121"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    int i6 = pilha0.tamanho();
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)1);
    pilha7.empilha((java.lang.Object)3);
    int i16 = pilha7.tamanho();
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    int i21 = pilha17.tamanho();
    pilha17.empilha((java.lang.Object)1);
    boolean b24 = pilha17.vazia();
    ds.Pilha pilha25 = new ds.Pilha();
    ds.Pilha pilha26 = new ds.Pilha();
    int i27 = pilha26.tamanho();
    boolean b28 = pilha26.vazia();
    int i29 = pilha26.tamanho();
    pilha25.empilha((java.lang.Object)pilha26);
    pilha17.empilha((java.lang.Object)pilha25);
    ds.Pilha pilha32 = new ds.Pilha();
    pilha32.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha35 = new ds.Pilha();
    int i36 = pilha35.tamanho();
    pilha35.empilha((java.lang.Object)"hi!");
    java.lang.Object obj39 = pilha35.desempilha();
    pilha35.empilha((java.lang.Object)'4');
    pilha32.empilha((java.lang.Object)pilha35);
    ds.Pilha pilha43 = new ds.Pilha();
    int i44 = pilha43.tamanho();
    pilha43.empilha((java.lang.Object)"hi!");
    java.lang.Object obj47 = pilha43.desempilha();
    pilha43.empilha((java.lang.Object)'4');
    pilha35.empilha((java.lang.Object)'4');
    pilha17.empilha((java.lang.Object)pilha35);
    pilha7.empilha((java.lang.Object)pilha17);
    pilha0.empilha((java.lang.Object)pilha7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj39 + "' != '" + "hi!"+ "'", obj39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj47 + "' != '" + "hi!"+ "'", obj47.equals("hi!"));

  }

  @Test
  public void test122() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test122"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    int i6 = pilha1.tamanho();
    int i7 = pilha1.tamanho();
    boolean b8 = pilha1.vazia();
    int i9 = pilha1.tamanho();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)1);
    pilha10.empilha((java.lang.Object)3);
    pilha1.empilha((java.lang.Object)3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);

  }

  @Test
  public void test123() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test123"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = pilha6.desempilha();
    pilha6.empilha((java.lang.Object)'4');
    pilha6.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)(byte)10);
    pilha15.empilha((java.lang.Object)10.0d);
    java.lang.Object obj24 = pilha15.desempilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    int i29 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj32 = pilha25.desempilha();
    int i33 = pilha25.tamanho();
    pilha15.empilha((java.lang.Object)i33);
    pilha6.empilha((java.lang.Object)i33);
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    boolean b39 = pilha37.vazia();
    int i40 = pilha37.tamanho();
    int i41 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha44 = new ds.Pilha();
    int i45 = pilha44.tamanho();
    boolean b46 = pilha44.vazia();
    int i47 = pilha44.tamanho();
    int i48 = pilha44.tamanho();
    pilha44.empilha((java.lang.Object)(byte)10);
    pilha37.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj52 = pilha37.desempilha();
    boolean b53 = pilha37.vazia();
    java.lang.Object obj54 = pilha37.desempilha();
    boolean b55 = pilha37.vazia();
    boolean b56 = pilha37.vazia();
    pilha37.empilha((java.lang.Object)'#');
    boolean b59 = pilha37.vazia();
    pilha0.empilha((java.lang.Object)pilha37);
    java.lang.Object obj61 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + 10.0d+ "'", obj24.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte)10+ "'", obj32.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (byte)10+ "'", obj52.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (byte)10+ "'", obj54.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj61);

  }

  @Test
  public void test124() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test124"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)'a');
    java.lang.Object obj8 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + 'a'+ "'", obj8.equals('a'));

  }

  @Test
  public void test125() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test125"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    boolean b5 = pilha0.vazia();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    boolean b8 = pilha6.vazia();
    int i9 = pilha6.tamanho();
    int i10 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)(byte)10);
    pilha6.empilha((java.lang.Object)10.0d);
    java.lang.Object obj15 = pilha6.desempilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    int i20 = pilha16.tamanho();
    pilha16.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj23 = pilha16.desempilha();
    int i24 = pilha16.tamanho();
    pilha6.empilha((java.lang.Object)i24);
    pilha0.empilha((java.lang.Object)pilha6);
    int i27 = pilha6.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + 10.0d+ "'", obj15.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (byte)10+ "'", obj23.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 2);

  }

  @Test
  public void test126() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test126"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = pilha3.desempilha();
    pilha3.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha3);
    boolean b11 = pilha3.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + "hi!"+ "'", obj7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test127() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test127"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    ds.Pilha pilha4 = new ds.Pilha();
    ds.Pilha pilha5 = new ds.Pilha();
    int i6 = pilha5.tamanho();
    boolean b7 = pilha5.vazia();
    int i8 = pilha5.tamanho();
    pilha4.empilha((java.lang.Object)pilha5);
    boolean b10 = pilha4.vazia();
    pilha4.empilha((java.lang.Object)(short)1);
    boolean b13 = pilha4.vazia();
    java.lang.Object obj14 = pilha4.desempilha();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)1);
    boolean b22 = pilha15.vazia();
    ds.Pilha pilha23 = new ds.Pilha();
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    boolean b26 = pilha24.vazia();
    int i27 = pilha24.tamanho();
    pilha23.empilha((java.lang.Object)pilha24);
    pilha15.empilha((java.lang.Object)pilha23);
    ds.Pilha pilha30 = new ds.Pilha();
    pilha30.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha33 = new ds.Pilha();
    int i34 = pilha33.tamanho();
    pilha33.empilha((java.lang.Object)"hi!");
    java.lang.Object obj37 = pilha33.desempilha();
    pilha33.empilha((java.lang.Object)'4');
    pilha30.empilha((java.lang.Object)pilha33);
    ds.Pilha pilha41 = new ds.Pilha();
    int i42 = pilha41.tamanho();
    pilha41.empilha((java.lang.Object)"hi!");
    java.lang.Object obj45 = pilha41.desempilha();
    pilha41.empilha((java.lang.Object)'4');
    pilha33.empilha((java.lang.Object)'4');
    pilha15.empilha((java.lang.Object)pilha33);
    pilha4.empilha((java.lang.Object)pilha15);
    ds.Pilha pilha51 = new ds.Pilha();
    int i52 = pilha51.tamanho();
    pilha51.empilha((java.lang.Object)"hi!");
    java.lang.Object obj55 = null;
    pilha51.empilha(obj55);
    pilha51.empilha((java.lang.Object)100.0d);
    java.lang.Object obj59 = pilha51.desempilha();
    pilha15.empilha((java.lang.Object)pilha51);
    ds.Pilha pilha61 = new ds.Pilha();
    int i62 = pilha61.tamanho();
    boolean b63 = pilha61.vazia();
    int i64 = pilha61.tamanho();
    int i65 = pilha61.tamanho();
    pilha61.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha68 = new ds.Pilha();
    int i69 = pilha68.tamanho();
    boolean b70 = pilha68.vazia();
    int i71 = pilha68.tamanho();
    int i72 = pilha68.tamanho();
    pilha68.empilha((java.lang.Object)(byte)10);
    pilha61.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj76 = pilha61.desempilha();
    boolean b77 = pilha61.vazia();
    java.lang.Object obj78 = pilha61.desempilha();
    boolean b79 = pilha61.vazia();
    ds.Pilha pilha80 = new ds.Pilha();
    ds.Pilha pilha81 = new ds.Pilha();
    int i82 = pilha81.tamanho();
    boolean b83 = pilha81.vazia();
    int i84 = pilha81.tamanho();
    pilha80.empilha((java.lang.Object)pilha81);
    int i86 = pilha81.tamanho();
    pilha61.empilha((java.lang.Object)i86);
    java.lang.Object obj88 = pilha61.desempilha();
    pilha15.empilha((java.lang.Object)pilha61);
    pilha0.empilha((java.lang.Object)pilha61);
    boolean b91 = pilha0.vazia();
    boolean b92 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short)1+ "'", obj14.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj37 + "' != '" + "hi!"+ "'", obj37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj45 + "' != '" + "hi!"+ "'", obj45.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj59 + "' != '" + 100.0d+ "'", obj59.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i62 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i64 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i65 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i69 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i71 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i72 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj76 + "' != '" + (byte)10+ "'", obj76.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj78 + "' != '" + (byte)10+ "'", obj78.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i82 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i84 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i86 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj88 + "' != '" + 0+ "'", obj88.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b92 == false);

  }

  @Test
  public void test128() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test128"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = null;
    pilha3.empilha(obj7);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    int i15 = pilha9.tamanho();
    int i16 = pilha9.tamanho();
    ds.Pilha pilha17 = new ds.Pilha();
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    pilha17.empilha((java.lang.Object)pilha18);
    int i23 = pilha17.tamanho();
    int i24 = pilha17.tamanho();
    pilha9.empilha((java.lang.Object)pilha17);
    pilha3.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha9);
    int i28 = pilha9.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 3);

  }

  @Test
  public void test129() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test129"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha9 = new ds.Pilha();
    pilha9.empilha((java.lang.Object)(short)0);
    pilha9.empilha((java.lang.Object)(byte)10);
    pilha9.empilha((java.lang.Object)100L);
    pilha0.empilha((java.lang.Object)100L);
    int i17 = pilha0.tamanho();
    boolean b18 = pilha0.vazia();
    boolean b19 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test130() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test130"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    boolean b8 = pilha6.vazia();
    int i9 = pilha6.tamanho();
    ds.Pilha pilha10 = new ds.Pilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    pilha10.empilha((java.lang.Object)pilha11);
    boolean b16 = pilha10.vazia();
    pilha10.empilha((java.lang.Object)(short)1);
    boolean b19 = pilha10.vazia();
    java.lang.Object obj20 = pilha10.desempilha();
    ds.Pilha pilha21 = new ds.Pilha();
    int i22 = pilha21.tamanho();
    boolean b23 = pilha21.vazia();
    int i24 = pilha21.tamanho();
    int i25 = pilha21.tamanho();
    pilha21.empilha((java.lang.Object)1);
    boolean b28 = pilha21.vazia();
    ds.Pilha pilha29 = new ds.Pilha();
    ds.Pilha pilha30 = new ds.Pilha();
    int i31 = pilha30.tamanho();
    boolean b32 = pilha30.vazia();
    int i33 = pilha30.tamanho();
    pilha29.empilha((java.lang.Object)pilha30);
    pilha21.empilha((java.lang.Object)pilha29);
    ds.Pilha pilha36 = new ds.Pilha();
    pilha36.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha39 = new ds.Pilha();
    int i40 = pilha39.tamanho();
    pilha39.empilha((java.lang.Object)"hi!");
    java.lang.Object obj43 = pilha39.desempilha();
    pilha39.empilha((java.lang.Object)'4');
    pilha36.empilha((java.lang.Object)pilha39);
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    pilha47.empilha((java.lang.Object)"hi!");
    java.lang.Object obj51 = pilha47.desempilha();
    pilha47.empilha((java.lang.Object)'4');
    pilha39.empilha((java.lang.Object)'4');
    pilha21.empilha((java.lang.Object)pilha39);
    pilha10.empilha((java.lang.Object)pilha21);
    ds.Pilha pilha57 = new ds.Pilha();
    int i58 = pilha57.tamanho();
    pilha57.empilha((java.lang.Object)"hi!");
    java.lang.Object obj61 = null;
    pilha57.empilha(obj61);
    pilha57.empilha((java.lang.Object)100.0d);
    java.lang.Object obj65 = pilha57.desempilha();
    pilha21.empilha((java.lang.Object)pilha57);
    ds.Pilha pilha67 = new ds.Pilha();
    int i68 = pilha67.tamanho();
    boolean b69 = pilha67.vazia();
    int i70 = pilha67.tamanho();
    int i71 = pilha67.tamanho();
    pilha67.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha74 = new ds.Pilha();
    int i75 = pilha74.tamanho();
    boolean b76 = pilha74.vazia();
    int i77 = pilha74.tamanho();
    int i78 = pilha74.tamanho();
    pilha74.empilha((java.lang.Object)(byte)10);
    pilha67.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj82 = pilha67.desempilha();
    boolean b83 = pilha67.vazia();
    java.lang.Object obj84 = pilha67.desempilha();
    boolean b85 = pilha67.vazia();
    ds.Pilha pilha86 = new ds.Pilha();
    ds.Pilha pilha87 = new ds.Pilha();
    int i88 = pilha87.tamanho();
    boolean b89 = pilha87.vazia();
    int i90 = pilha87.tamanho();
    pilha86.empilha((java.lang.Object)pilha87);
    int i92 = pilha87.tamanho();
    pilha67.empilha((java.lang.Object)i92);
    java.lang.Object obj94 = pilha67.desempilha();
    pilha21.empilha((java.lang.Object)pilha67);
    pilha6.empilha((java.lang.Object)pilha67);
    pilha0.empilha((java.lang.Object)pilha67);
    int i98 = pilha67.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj99 = pilha67.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short)1+ "'", obj20.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj43 + "' != '" + "hi!"+ "'", obj43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj51 + "' != '" + "hi!"+ "'", obj51.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj65 + "' != '" + 100.0d+ "'", obj65.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i70 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i71 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i75 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i77 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i78 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj82 + "' != '" + (byte)10+ "'", obj82.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj84 + "' != '" + (byte)10+ "'", obj84.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i88 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i90 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i92 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj94 + "' != '" + 0+ "'", obj94.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i98 == 0);

  }

  @Test
  public void test131() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test131"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    boolean b9 = pilha0.vazia();
    boolean b10 = pilha0.vazia();
    java.lang.Object obj11 = pilha0.desempilha();
    java.lang.Object obj12 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 100.0d+ "'", obj11.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);

  }

  @Test
  public void test132() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test132"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    java.lang.Object obj9 = pilha0.desempilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)1);
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    pilha10.empilha((java.lang.Object)i20);
    pilha10.empilha((java.lang.Object)'4');
    int i24 = pilha10.tamanho();
    pilha0.empilha((java.lang.Object)pilha10);
    java.lang.Object obj26 = pilha0.desempilha();
    boolean b27 = pilha0.vazia();
    int i28 = pilha0.tamanho();
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    boolean b31 = pilha29.vazia();
    int i32 = pilha29.tamanho();
    int i33 = pilha29.tamanho();
    pilha29.empilha((java.lang.Object)1);
    pilha29.empilha((java.lang.Object)3);
    int i38 = pilha29.tamanho();
    pilha0.empilha((java.lang.Object)i38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100.0d+ "'", obj9.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 2);

  }

  @Test
  public void test133() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test133"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)"hi!");
    java.lang.Object obj14 = null;
    pilha10.empilha(obj14);
    int i16 = pilha10.tamanho();
    int i17 = pilha10.tamanho();
    java.lang.Object obj18 = pilha10.desempilha();
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b20 = pilha0.vazia();
    boolean b21 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test134() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test134"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    int i6 = pilha1.tamanho();
    boolean b7 = pilha1.vazia();
    boolean b8 = pilha1.vazia();
    boolean b9 = pilha1.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test135() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test135"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)100.0f);
    boolean b13 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)"hi!");
    boolean b16 = pilha0.vazia();
    boolean b17 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test136() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test136"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    int i16 = pilha11.tamanho();
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    int i19 = pilha17.tamanho();
    int i20 = pilha17.tamanho();
    pilha11.empilha((java.lang.Object)pilha17);
    pilha0.empilha((java.lang.Object)pilha17);
    boolean b23 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + "hi!"+ "'", obj9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test137() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test137"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);

  }

  @Test
  public void test138() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test138"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(short)10);
    ds.Pilha pilha8 = new ds.Pilha();
    pilha8.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)"hi!");
    java.lang.Object obj15 = pilha11.desempilha();
    pilha11.empilha((java.lang.Object)'4');
    pilha8.empilha((java.lang.Object)pilha11);
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    pilha19.empilha((java.lang.Object)"hi!");
    java.lang.Object obj23 = pilha19.desempilha();
    pilha19.empilha((java.lang.Object)'4');
    pilha11.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha11);
    int i28 = pilha11.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + "hi!"+ "'", obj15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj23 + "' != '" + "hi!"+ "'", obj23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 2);

  }

  @Test
  public void test139() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test139"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    boolean b18 = pilha0.vazia();
    boolean b19 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)'#');
    boolean b22 = pilha0.vazia();
    ds.Pilha pilha23 = new ds.Pilha();
    int i24 = pilha23.tamanho();
    pilha23.empilha((java.lang.Object)"hi!");
    java.lang.Object obj27 = null;
    pilha23.empilha(obj27);
    int i29 = pilha23.tamanho();
    java.lang.Object obj30 = pilha23.desempilha();
    java.lang.Object obj31 = pilha23.desempilha();
    ds.Pilha pilha32 = new ds.Pilha();
    ds.Pilha pilha33 = new ds.Pilha();
    int i34 = pilha33.tamanho();
    boolean b35 = pilha33.vazia();
    int i36 = pilha33.tamanho();
    pilha32.empilha((java.lang.Object)pilha33);
    pilha23.empilha((java.lang.Object)pilha33);
    boolean b39 = pilha23.vazia();
    int i40 = pilha23.tamanho();
    pilha0.empilha((java.lang.Object)pilha23);
    int i42 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (byte)10+ "'", obj17.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj31 + "' != '" + "hi!"+ "'", obj31.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 2);

  }

  @Test
  public void test140() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test140"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    boolean b6 = pilha0.vazia();
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)"hi!");
    boolean b11 = pilha7.vazia();
    pilha0.empilha((java.lang.Object)pilha7);
    int i13 = pilha7.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 1);

  }

  @Test
  public void test141() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test141"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    boolean b9 = pilha0.vazia();
    boolean b10 = pilha0.vazia();
    boolean b11 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test142() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test142"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = pilha6.desempilha();
    pilha6.empilha((java.lang.Object)'4');
    pilha6.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)(byte)10);
    pilha15.empilha((java.lang.Object)10.0d);
    java.lang.Object obj24 = pilha15.desempilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    int i29 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj32 = pilha25.desempilha();
    int i33 = pilha25.tamanho();
    pilha15.empilha((java.lang.Object)i33);
    pilha6.empilha((java.lang.Object)i33);
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    boolean b39 = pilha37.vazia();
    int i40 = pilha37.tamanho();
    int i41 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha44 = new ds.Pilha();
    int i45 = pilha44.tamanho();
    boolean b46 = pilha44.vazia();
    int i47 = pilha44.tamanho();
    int i48 = pilha44.tamanho();
    pilha44.empilha((java.lang.Object)(byte)10);
    pilha37.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj52 = pilha37.desempilha();
    boolean b53 = pilha37.vazia();
    java.lang.Object obj54 = pilha37.desempilha();
    boolean b55 = pilha37.vazia();
    boolean b56 = pilha37.vazia();
    pilha37.empilha((java.lang.Object)'#');
    boolean b59 = pilha37.vazia();
    pilha0.empilha((java.lang.Object)pilha37);
    boolean b61 = pilha37.vazia();
    ds.Pilha pilha62 = new ds.Pilha();
    int i63 = pilha62.tamanho();
    pilha62.empilha((java.lang.Object)"hi!");
    java.lang.Object obj66 = null;
    pilha62.empilha(obj66);
    pilha62.empilha((java.lang.Object)100.0d);
    int i70 = pilha62.tamanho();
    java.lang.Object obj71 = pilha62.desempilha();
    pilha37.empilha((java.lang.Object)pilha62);
    ds.Pilha pilha73 = new ds.Pilha();
    pilha73.empilha((java.lang.Object)(short)0);
    boolean b76 = pilha73.vazia();
    pilha37.empilha((java.lang.Object)pilha73);
    java.lang.Object obj78 = pilha37.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + 10.0d+ "'", obj24.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte)10+ "'", obj32.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (byte)10+ "'", obj52.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (byte)10+ "'", obj54.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i63 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i70 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj71 + "' != '" + 100.0d+ "'", obj71.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj78);

  }

  @Test
  public void test143() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test143"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    pilha1.empilha((java.lang.Object)100);
    int i8 = pilha1.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);

  }

  @Test
  public void test144() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test144"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b16 = pilha0.vazia();
    int i17 = pilha0.tamanho();
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    int i22 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)1);
    pilha18.empilha((java.lang.Object)3);
    int i27 = pilha18.tamanho();
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    boolean b30 = pilha28.vazia();
    int i31 = pilha28.tamanho();
    int i32 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)1);
    boolean b35 = pilha28.vazia();
    ds.Pilha pilha36 = new ds.Pilha();
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    boolean b39 = pilha37.vazia();
    int i40 = pilha37.tamanho();
    pilha36.empilha((java.lang.Object)pilha37);
    pilha28.empilha((java.lang.Object)pilha36);
    ds.Pilha pilha43 = new ds.Pilha();
    pilha43.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha46 = new ds.Pilha();
    int i47 = pilha46.tamanho();
    pilha46.empilha((java.lang.Object)"hi!");
    java.lang.Object obj50 = pilha46.desempilha();
    pilha46.empilha((java.lang.Object)'4');
    pilha43.empilha((java.lang.Object)pilha46);
    ds.Pilha pilha54 = new ds.Pilha();
    int i55 = pilha54.tamanho();
    pilha54.empilha((java.lang.Object)"hi!");
    java.lang.Object obj58 = pilha54.desempilha();
    pilha54.empilha((java.lang.Object)'4');
    pilha46.empilha((java.lang.Object)'4');
    pilha28.empilha((java.lang.Object)pilha46);
    pilha18.empilha((java.lang.Object)pilha28);
    java.lang.Object obj64 = pilha18.desempilha();
    int i65 = pilha18.tamanho();
    pilha0.empilha((java.lang.Object)i65);
    int i67 = pilha0.tamanho();
    java.lang.Object obj68 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj50 + "' != '" + "hi!"+ "'", obj50.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj58 + "' != '" + "hi!"+ "'", obj58.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i65 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i67 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj68 + "' != '" + 2+ "'", obj68.equals(2));

  }

  @Test
  public void test145() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test145"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    int i13 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)(byte)10);
    pilha9.empilha((java.lang.Object)10.0d);
    java.lang.Object obj18 = pilha9.desempilha();
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    boolean b21 = pilha19.vazia();
    int i22 = pilha19.tamanho();
    int i23 = pilha19.tamanho();
    pilha19.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj26 = pilha19.desempilha();
    int i27 = pilha19.tamanho();
    pilha9.empilha((java.lang.Object)i27);
    pilha0.empilha((java.lang.Object)i27);
    java.lang.Object obj30 = pilha0.desempilha();
    ds.Pilha pilha31 = new ds.Pilha();
    boolean b32 = pilha31.vazia();
    boolean b33 = pilha31.vazia();
    pilha0.empilha((java.lang.Object)b33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 10.0d+ "'", obj18.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte)10+ "'", obj26.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj30 + "' != '" + 0+ "'", obj30.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);

  }

  @Test
  public void test146() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test146"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    boolean b7 = pilha0.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha8);
    ds.Pilha pilha15 = new ds.Pilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha15.empilha((java.lang.Object)pilha16);
    boolean b21 = pilha15.vazia();
    pilha15.empilha((java.lang.Object)(short)1);
    boolean b24 = pilha15.vazia();
    java.lang.Object obj25 = pilha15.desempilha();
    pilha15.empilha((java.lang.Object)100.0f);
    int i28 = pilha15.tamanho();
    ds.Pilha pilha29 = new ds.Pilha();
    ds.Pilha pilha30 = new ds.Pilha();
    int i31 = pilha30.tamanho();
    boolean b32 = pilha30.vazia();
    int i33 = pilha30.tamanho();
    pilha29.empilha((java.lang.Object)pilha30);
    boolean b35 = pilha29.vazia();
    pilha29.empilha((java.lang.Object)(short)1);
    boolean b38 = pilha29.vazia();
    java.lang.Object obj39 = pilha29.desempilha();
    pilha29.empilha((java.lang.Object)100.0f);
    pilha15.empilha((java.lang.Object)pilha29);
    pilha8.empilha((java.lang.Object)pilha15);
    java.lang.Object obj44 = pilha8.desempilha();
    int i45 = pilha8.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short)1+ "'", obj25.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short)1+ "'", obj39.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 1);

  }

  @Test
  public void test147() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test147"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    boolean b8 = pilha0.vazia();
    java.lang.Object obj9 = pilha0.desempilha();
    java.lang.Object obj10 = pilha0.desempilha();
    int i11 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte)(-1)+ "'", obj10.equals((byte)(-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);

  }

  @Test
  public void test148() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test148"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)100.0f);
    int i13 = pilha0.tamanho();
    ds.Pilha pilha14 = new ds.Pilha();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    pilha14.empilha((java.lang.Object)pilha15);
    boolean b20 = pilha14.vazia();
    pilha14.empilha((java.lang.Object)(short)1);
    boolean b23 = pilha14.vazia();
    java.lang.Object obj24 = pilha14.desempilha();
    pilha14.empilha((java.lang.Object)100.0f);
    pilha0.empilha((java.lang.Object)pilha14);
    boolean b28 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (short)1+ "'", obj24.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test149() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test149"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)(-1));
    int i4 = pilha0.tamanho();
    java.lang.Object obj5 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte)(-1)+ "'", obj5.equals((byte)(-1)));

  }

  @Test
  public void test150() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test150"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    boolean b7 = pilha0.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha8);
    ds.Pilha pilha15 = new ds.Pilha();
    pilha15.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)"hi!");
    java.lang.Object obj22 = pilha18.desempilha();
    pilha18.empilha((java.lang.Object)'4');
    pilha15.empilha((java.lang.Object)pilha18);
    ds.Pilha pilha26 = new ds.Pilha();
    int i27 = pilha26.tamanho();
    pilha26.empilha((java.lang.Object)"hi!");
    java.lang.Object obj30 = pilha26.desempilha();
    pilha26.empilha((java.lang.Object)'4');
    pilha18.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha18);
    pilha18.empilha((java.lang.Object)(byte)100);
    boolean b37 = pilha18.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj22 + "' != '" + "hi!"+ "'", obj22.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj30 + "' != '" + "hi!"+ "'", obj30.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);

  }

  @Test
  public void test151() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test151"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    pilha1.empilha((java.lang.Object)100);
    ds.Pilha pilha8 = new ds.Pilha();
    boolean b9 = pilha8.vazia();
    int i10 = pilha8.tamanho();
    int i11 = pilha8.tamanho();
    int i12 = pilha8.tamanho();
    int i13 = pilha8.tamanho();
    pilha1.empilha((java.lang.Object)pilha8);
    boolean b15 = pilha8.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);

  }

  @Test
  public void test152() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test152"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    java.lang.Object obj15 = pilha9.desempilha();
    pilha0.empilha(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);

  }

  @Test
  public void test153() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test153"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b16 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)' ');
    java.lang.Object obj19 = pilha0.desempilha();
    boolean b20 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + ' '+ "'", obj19.equals(' '));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test154() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test154"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    int i16 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 1);

  }

  @Test
  public void test155() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test155"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    boolean b6 = pilha0.vazia();
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)"hi!");
    boolean b11 = pilha7.vazia();
    pilha0.empilha((java.lang.Object)pilha7);
    ds.Pilha pilha13 = new ds.Pilha();
    int i14 = pilha13.tamanho();
    boolean b15 = pilha13.vazia();
    int i16 = pilha13.tamanho();
    int i17 = pilha13.tamanho();
    pilha13.empilha((java.lang.Object)1);
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha13.empilha((java.lang.Object)i23);
    boolean b25 = pilha13.vazia();
    int i26 = pilha13.tamanho();
    pilha0.empilha((java.lang.Object)pilha13);
    int i28 = pilha13.tamanho();
    java.lang.Object obj29 = pilha13.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj29 + "' != '" + 0+ "'", obj29.equals(0));

  }

  @Test
  public void test156() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test156"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    int i14 = pilha8.tamanho();
    int i15 = pilha8.tamanho();
    pilha0.empilha((java.lang.Object)pilha8);
    java.lang.Object obj17 = pilha8.desempilha();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj18 = pilha8.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);

  }

  @Test
  public void test157() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test157"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    boolean b3 = pilha0.vazia();
    int i4 = pilha0.tamanho();
    boolean b5 = pilha0.vazia();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj6 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test158() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test158"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b16 = pilha0.vazia();
    int i17 = pilha0.tamanho();
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    int i22 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)1);
    pilha18.empilha((java.lang.Object)3);
    int i27 = pilha18.tamanho();
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    boolean b30 = pilha28.vazia();
    int i31 = pilha28.tamanho();
    int i32 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)1);
    boolean b35 = pilha28.vazia();
    ds.Pilha pilha36 = new ds.Pilha();
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    boolean b39 = pilha37.vazia();
    int i40 = pilha37.tamanho();
    pilha36.empilha((java.lang.Object)pilha37);
    pilha28.empilha((java.lang.Object)pilha36);
    ds.Pilha pilha43 = new ds.Pilha();
    pilha43.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha46 = new ds.Pilha();
    int i47 = pilha46.tamanho();
    pilha46.empilha((java.lang.Object)"hi!");
    java.lang.Object obj50 = pilha46.desempilha();
    pilha46.empilha((java.lang.Object)'4');
    pilha43.empilha((java.lang.Object)pilha46);
    ds.Pilha pilha54 = new ds.Pilha();
    int i55 = pilha54.tamanho();
    pilha54.empilha((java.lang.Object)"hi!");
    java.lang.Object obj58 = pilha54.desempilha();
    pilha54.empilha((java.lang.Object)'4');
    pilha46.empilha((java.lang.Object)'4');
    pilha28.empilha((java.lang.Object)pilha46);
    pilha18.empilha((java.lang.Object)pilha28);
    java.lang.Object obj64 = pilha18.desempilha();
    int i65 = pilha18.tamanho();
    pilha0.empilha((java.lang.Object)i65);
    ds.Pilha pilha67 = new ds.Pilha();
    ds.Pilha pilha68 = new ds.Pilha();
    int i69 = pilha68.tamanho();
    boolean b70 = pilha68.vazia();
    int i71 = pilha68.tamanho();
    pilha67.empilha((java.lang.Object)pilha68);
    boolean b73 = pilha67.vazia();
    pilha67.empilha((java.lang.Object)(short)1);
    boolean b76 = pilha67.vazia();
    java.lang.Object obj77 = pilha67.desempilha();
    pilha67.empilha((java.lang.Object)100.0f);
    boolean b80 = pilha67.vazia();
    java.lang.Object obj81 = pilha67.desempilha();
    boolean b82 = pilha67.vazia();
    pilha0.empilha((java.lang.Object)b82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj50 + "' != '" + "hi!"+ "'", obj50.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj58 + "' != '" + "hi!"+ "'", obj58.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i65 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i69 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i71 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (short)1+ "'", obj77.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj81 + "' != '" + 100.0f+ "'", obj81.equals(100.0f));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b82 == false);

  }

  @Test
  public void test159() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test159"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = pilha3.desempilha();
    pilha3.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha3);
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)"hi!");
    java.lang.Object obj15 = pilha11.desempilha();
    pilha11.empilha((java.lang.Object)'4');
    pilha3.empilha((java.lang.Object)'4');
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    boolean b25 = pilha19.vazia();
    pilha3.empilha((java.lang.Object)b25);
    int i27 = pilha3.tamanho();
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)"hi!");
    java.lang.Object obj32 = pilha28.desempilha();
    int i33 = pilha28.tamanho();
    boolean b34 = pilha28.vazia();
    pilha3.empilha((java.lang.Object)b34);
    boolean b36 = pilha3.vazia();
    boolean b37 = pilha3.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + "hi!"+ "'", obj7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + "hi!"+ "'", obj15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + "hi!"+ "'", obj32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);

  }

  @Test
  public void test160() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test160"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    boolean b15 = pilha0.vazia();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    pilha16.empilha((java.lang.Object)"hi!");
    java.lang.Object obj20 = null;
    pilha16.empilha(obj20);
    ds.Pilha pilha22 = new ds.Pilha();
    int i23 = pilha22.tamanho();
    pilha22.empilha((java.lang.Object)"hi!");
    java.lang.Object obj26 = null;
    pilha22.empilha(obj26);
    int i28 = pilha22.tamanho();
    int i29 = pilha22.tamanho();
    ds.Pilha pilha30 = new ds.Pilha();
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    boolean b33 = pilha31.vazia();
    int i34 = pilha31.tamanho();
    pilha30.empilha((java.lang.Object)pilha31);
    int i36 = pilha30.tamanho();
    int i37 = pilha30.tamanho();
    pilha22.empilha((java.lang.Object)pilha30);
    pilha16.empilha((java.lang.Object)pilha22);
    pilha0.empilha((java.lang.Object)pilha16);
    java.lang.Object obj41 = pilha16.desempilha();
    ds.Pilha pilha42 = new ds.Pilha();
    int i43 = pilha42.tamanho();
    pilha42.empilha((java.lang.Object)"hi!");
    java.lang.Object obj46 = null;
    pilha42.empilha(obj46);
    int i48 = pilha42.tamanho();
    int i49 = pilha42.tamanho();
    java.lang.Object obj50 = pilha42.desempilha();
    java.lang.Object obj51 = pilha42.desempilha();
    boolean b52 = pilha42.vazia();
    boolean b53 = pilha42.vazia();
    int i54 = pilha42.tamanho();
    pilha16.empilha((java.lang.Object)pilha42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj51 + "' != '" + "hi!"+ "'", obj51.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i54 == 0);

  }

  @Test
  public void test161() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test161"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    boolean b7 = pilha0.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha8);
    ds.Pilha pilha15 = new ds.Pilha();
    pilha15.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)"hi!");
    java.lang.Object obj22 = pilha18.desempilha();
    pilha18.empilha((java.lang.Object)'4');
    pilha15.empilha((java.lang.Object)pilha18);
    ds.Pilha pilha26 = new ds.Pilha();
    int i27 = pilha26.tamanho();
    pilha26.empilha((java.lang.Object)"hi!");
    java.lang.Object obj30 = pilha26.desempilha();
    pilha26.empilha((java.lang.Object)'4');
    pilha18.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha18);
    int i35 = pilha0.tamanho();
    int i36 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj22 + "' != '" + "hi!"+ "'", obj22.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj30 + "' != '" + "hi!"+ "'", obj30.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 3);

  }

  @Test
  public void test162() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test162"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    boolean b3 = pilha0.vazia();
    int i4 = pilha0.tamanho();
    boolean b5 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);

  }

  @Test
  public void test163() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test163"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)1);
    boolean b18 = pilha11.vazia();
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    pilha11.empilha((java.lang.Object)pilha19);
    ds.Pilha pilha26 = new ds.Pilha();
    pilha26.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    pilha29.empilha((java.lang.Object)"hi!");
    java.lang.Object obj33 = pilha29.desempilha();
    pilha29.empilha((java.lang.Object)'4');
    pilha26.empilha((java.lang.Object)pilha29);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)"hi!");
    java.lang.Object obj41 = pilha37.desempilha();
    pilha37.empilha((java.lang.Object)'4');
    pilha29.empilha((java.lang.Object)'4');
    pilha11.empilha((java.lang.Object)pilha29);
    pilha0.empilha((java.lang.Object)pilha11);
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    pilha47.empilha((java.lang.Object)"hi!");
    java.lang.Object obj51 = null;
    pilha47.empilha(obj51);
    pilha47.empilha((java.lang.Object)100.0d);
    java.lang.Object obj55 = pilha47.desempilha();
    pilha11.empilha((java.lang.Object)pilha47);
    ds.Pilha pilha57 = new ds.Pilha();
    int i58 = pilha57.tamanho();
    boolean b59 = pilha57.vazia();
    int i60 = pilha57.tamanho();
    int i61 = pilha57.tamanho();
    pilha57.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha64 = new ds.Pilha();
    int i65 = pilha64.tamanho();
    boolean b66 = pilha64.vazia();
    int i67 = pilha64.tamanho();
    int i68 = pilha64.tamanho();
    pilha64.empilha((java.lang.Object)(byte)10);
    pilha57.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj72 = pilha57.desempilha();
    boolean b73 = pilha57.vazia();
    java.lang.Object obj74 = pilha57.desempilha();
    boolean b75 = pilha57.vazia();
    ds.Pilha pilha76 = new ds.Pilha();
    ds.Pilha pilha77 = new ds.Pilha();
    int i78 = pilha77.tamanho();
    boolean b79 = pilha77.vazia();
    int i80 = pilha77.tamanho();
    pilha76.empilha((java.lang.Object)pilha77);
    int i82 = pilha77.tamanho();
    pilha57.empilha((java.lang.Object)i82);
    java.lang.Object obj84 = pilha57.desempilha();
    pilha11.empilha((java.lang.Object)pilha57);
    boolean b86 = pilha11.vazia();
    boolean b87 = pilha11.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + "hi!"+ "'", obj33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj41 + "' != '" + "hi!"+ "'", obj41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj55 + "' != '" + 100.0d+ "'", obj55.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i60 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i65 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i67 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj72 + "' != '" + (byte)10+ "'", obj72.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj74 + "' != '" + (byte)10+ "'", obj74.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i78 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i80 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i82 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj84 + "' != '" + 0+ "'", obj84.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b87 == false);

  }

  @Test
  public void test164() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test164"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    boolean b5 = pilha0.vazia();
    boolean b6 = pilha0.vazia();
    ds.Pilha pilha7 = new ds.Pilha();
    ds.Pilha pilha8 = new ds.Pilha();
    int i9 = pilha8.tamanho();
    boolean b10 = pilha8.vazia();
    int i11 = pilha8.tamanho();
    pilha7.empilha((java.lang.Object)pilha8);
    int i13 = pilha7.tamanho();
    java.lang.Object obj14 = pilha7.desempilha();
    pilha0.empilha((java.lang.Object)pilha7);
    ds.Pilha pilha16 = new ds.Pilha();
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    pilha16.empilha((java.lang.Object)pilha17);
    boolean b22 = pilha16.vazia();
    pilha16.empilha((java.lang.Object)(short)1);
    boolean b25 = pilha16.vazia();
    java.lang.Object obj26 = pilha16.desempilha();
    ds.Pilha pilha27 = new ds.Pilha();
    int i28 = pilha27.tamanho();
    boolean b29 = pilha27.vazia();
    int i30 = pilha27.tamanho();
    int i31 = pilha27.tamanho();
    pilha27.empilha((java.lang.Object)1);
    boolean b34 = pilha27.vazia();
    ds.Pilha pilha35 = new ds.Pilha();
    ds.Pilha pilha36 = new ds.Pilha();
    int i37 = pilha36.tamanho();
    boolean b38 = pilha36.vazia();
    int i39 = pilha36.tamanho();
    pilha35.empilha((java.lang.Object)pilha36);
    pilha27.empilha((java.lang.Object)pilha35);
    ds.Pilha pilha42 = new ds.Pilha();
    pilha42.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha45 = new ds.Pilha();
    int i46 = pilha45.tamanho();
    pilha45.empilha((java.lang.Object)"hi!");
    java.lang.Object obj49 = pilha45.desempilha();
    pilha45.empilha((java.lang.Object)'4');
    pilha42.empilha((java.lang.Object)pilha45);
    ds.Pilha pilha53 = new ds.Pilha();
    int i54 = pilha53.tamanho();
    pilha53.empilha((java.lang.Object)"hi!");
    java.lang.Object obj57 = pilha53.desempilha();
    pilha53.empilha((java.lang.Object)'4');
    pilha45.empilha((java.lang.Object)'4');
    pilha27.empilha((java.lang.Object)pilha45);
    pilha16.empilha((java.lang.Object)pilha27);
    pilha7.empilha((java.lang.Object)pilha16);
    ds.Pilha pilha64 = new ds.Pilha();
    boolean b65 = pilha64.vazia();
    int i66 = pilha64.tamanho();
    boolean b67 = pilha64.vazia();
    int i68 = pilha64.tamanho();
    int i69 = pilha64.tamanho();
    pilha7.empilha((java.lang.Object)pilha64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short)1+ "'", obj26.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i46 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj49 + "' != '" + "hi!"+ "'", obj49.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i54 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj57 + "' != '" + "hi!"+ "'", obj57.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i66 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i69 == 0);

  }

  @Test
  public void test165() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test165"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)100L);
    pilha0.empilha((java.lang.Object)100);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = pilha9.desempilha();
    boolean b14 = pilha9.vazia();
    boolean b15 = pilha9.vazia();
    java.lang.Object obj16 = null;
    pilha9.empilha(obj16);
    pilha0.empilha(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj13 + "' != '" + "hi!"+ "'", obj13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);

  }

  @Test
  public void test166() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test166"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    boolean b3 = pilha0.vazia();
    ds.Pilha pilha4 = new ds.Pilha();
    int i5 = pilha4.tamanho();
    boolean b6 = pilha4.vazia();
    int i7 = pilha4.tamanho();
    int i8 = pilha4.tamanho();
    pilha4.empilha((java.lang.Object)1);
    pilha4.empilha((java.lang.Object)3);
    ds.Pilha pilha13 = new ds.Pilha();
    int i14 = pilha13.tamanho();
    pilha13.empilha((java.lang.Object)"hi!");
    java.lang.Object obj17 = null;
    pilha13.empilha(obj17);
    pilha13.empilha((java.lang.Object)100.0d);
    int i21 = pilha13.tamanho();
    java.lang.Object obj22 = pilha13.desempilha();
    pilha4.empilha(obj22);
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    int i26 = pilha24.tamanho();
    int i27 = pilha24.tamanho();
    pilha4.empilha((java.lang.Object)pilha24);
    pilha0.empilha((java.lang.Object)pilha24);
    int i30 = pilha0.tamanho();
    java.lang.Object obj31 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj22 + "' != '" + 100.0d+ "'", obj22.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj31);

  }

  @Test
  public void test167() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test167"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    int i6 = pilha1.tamanho();
    boolean b7 = pilha1.vazia();
    int i8 = pilha1.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);

  }

  @Test
  public void test168() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test168"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    boolean b8 = pilha6.vazia();
    int i9 = pilha6.tamanho();
    ds.Pilha pilha10 = new ds.Pilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    pilha10.empilha((java.lang.Object)pilha11);
    boolean b16 = pilha10.vazia();
    pilha10.empilha((java.lang.Object)(short)1);
    boolean b19 = pilha10.vazia();
    java.lang.Object obj20 = pilha10.desempilha();
    ds.Pilha pilha21 = new ds.Pilha();
    int i22 = pilha21.tamanho();
    boolean b23 = pilha21.vazia();
    int i24 = pilha21.tamanho();
    int i25 = pilha21.tamanho();
    pilha21.empilha((java.lang.Object)1);
    boolean b28 = pilha21.vazia();
    ds.Pilha pilha29 = new ds.Pilha();
    ds.Pilha pilha30 = new ds.Pilha();
    int i31 = pilha30.tamanho();
    boolean b32 = pilha30.vazia();
    int i33 = pilha30.tamanho();
    pilha29.empilha((java.lang.Object)pilha30);
    pilha21.empilha((java.lang.Object)pilha29);
    ds.Pilha pilha36 = new ds.Pilha();
    pilha36.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha39 = new ds.Pilha();
    int i40 = pilha39.tamanho();
    pilha39.empilha((java.lang.Object)"hi!");
    java.lang.Object obj43 = pilha39.desempilha();
    pilha39.empilha((java.lang.Object)'4');
    pilha36.empilha((java.lang.Object)pilha39);
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    pilha47.empilha((java.lang.Object)"hi!");
    java.lang.Object obj51 = pilha47.desempilha();
    pilha47.empilha((java.lang.Object)'4');
    pilha39.empilha((java.lang.Object)'4');
    pilha21.empilha((java.lang.Object)pilha39);
    pilha10.empilha((java.lang.Object)pilha21);
    ds.Pilha pilha57 = new ds.Pilha();
    int i58 = pilha57.tamanho();
    pilha57.empilha((java.lang.Object)"hi!");
    java.lang.Object obj61 = null;
    pilha57.empilha(obj61);
    pilha57.empilha((java.lang.Object)100.0d);
    java.lang.Object obj65 = pilha57.desempilha();
    pilha21.empilha((java.lang.Object)pilha57);
    ds.Pilha pilha67 = new ds.Pilha();
    int i68 = pilha67.tamanho();
    boolean b69 = pilha67.vazia();
    int i70 = pilha67.tamanho();
    int i71 = pilha67.tamanho();
    pilha67.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha74 = new ds.Pilha();
    int i75 = pilha74.tamanho();
    boolean b76 = pilha74.vazia();
    int i77 = pilha74.tamanho();
    int i78 = pilha74.tamanho();
    pilha74.empilha((java.lang.Object)(byte)10);
    pilha67.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj82 = pilha67.desempilha();
    boolean b83 = pilha67.vazia();
    java.lang.Object obj84 = pilha67.desempilha();
    boolean b85 = pilha67.vazia();
    ds.Pilha pilha86 = new ds.Pilha();
    ds.Pilha pilha87 = new ds.Pilha();
    int i88 = pilha87.tamanho();
    boolean b89 = pilha87.vazia();
    int i90 = pilha87.tamanho();
    pilha86.empilha((java.lang.Object)pilha87);
    int i92 = pilha87.tamanho();
    pilha67.empilha((java.lang.Object)i92);
    java.lang.Object obj94 = pilha67.desempilha();
    pilha21.empilha((java.lang.Object)pilha67);
    pilha6.empilha((java.lang.Object)pilha67);
    pilha0.empilha((java.lang.Object)pilha67);
    int i98 = pilha67.tamanho();
    boolean b99 = pilha67.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short)1+ "'", obj20.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj43 + "' != '" + "hi!"+ "'", obj43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj51 + "' != '" + "hi!"+ "'", obj51.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj65 + "' != '" + 100.0d+ "'", obj65.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i70 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i71 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i75 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i77 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i78 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj82 + "' != '" + (byte)10+ "'", obj82.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj84 + "' != '" + (byte)10+ "'", obj84.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i88 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i90 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i92 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj94 + "' != '" + 0+ "'", obj94.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i98 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b99 == true);

  }

  @Test
  public void test169() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test169"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    int i16 = pilha0.tamanho();
    boolean b17 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test170() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test170"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    int i8 = pilha6.tamanho();
    int i9 = pilha6.tamanho();
    pilha0.empilha((java.lang.Object)pilha6);
    java.lang.Object obj11 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);

  }

  @Test
  public void test171() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test171"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    boolean b18 = pilha0.vazia();
    boolean b19 = pilha0.vazia();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj20 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (byte)10+ "'", obj17.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test172() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test172"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = pilha6.desempilha();
    pilha6.empilha((java.lang.Object)'4');
    pilha6.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)(byte)10);
    pilha15.empilha((java.lang.Object)10.0d);
    java.lang.Object obj24 = pilha15.desempilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    int i29 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj32 = pilha25.desempilha();
    int i33 = pilha25.tamanho();
    pilha15.empilha((java.lang.Object)i33);
    pilha6.empilha((java.lang.Object)i33);
    pilha0.empilha((java.lang.Object)pilha6);
    int i37 = pilha6.tamanho();
    ds.Pilha pilha38 = new ds.Pilha();
    int i39 = pilha38.tamanho();
    boolean b40 = pilha38.vazia();
    int i41 = pilha38.tamanho();
    int i42 = pilha38.tamanho();
    pilha38.empilha((java.lang.Object)1);
    ds.Pilha pilha45 = new ds.Pilha();
    int i46 = pilha45.tamanho();
    boolean b47 = pilha45.vazia();
    int i48 = pilha45.tamanho();
    pilha38.empilha((java.lang.Object)i48);
    boolean b50 = pilha38.vazia();
    java.lang.Object obj51 = pilha38.desempilha();
    java.lang.Object obj52 = pilha38.desempilha();
    pilha6.empilha(obj52);
    java.lang.Object obj54 = null;
    pilha6.empilha(obj54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + 10.0d+ "'", obj24.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte)10+ "'", obj32.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i46 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj51 + "' != '" + 0+ "'", obj51.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj52 + "' != '" + 1+ "'", obj52.equals(1));

  }

  @Test
  public void test173() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test173"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha9 = new ds.Pilha();
    pilha9.empilha((java.lang.Object)(short)0);
    pilha9.empilha((java.lang.Object)(byte)10);
    pilha9.empilha((java.lang.Object)100L);
    pilha0.empilha((java.lang.Object)100L);
    int i17 = pilha0.tamanho();
    boolean b18 = pilha0.vazia();
    int i19 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 3);

  }

  @Test
  public void test174() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test174"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    int i9 = pilha0.tamanho();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)1);
    boolean b17 = pilha10.vazia();
    ds.Pilha pilha18 = new ds.Pilha();
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    boolean b21 = pilha19.vazia();
    int i22 = pilha19.tamanho();
    pilha18.empilha((java.lang.Object)pilha19);
    pilha10.empilha((java.lang.Object)pilha18);
    ds.Pilha pilha25 = new ds.Pilha();
    pilha25.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)"hi!");
    java.lang.Object obj32 = pilha28.desempilha();
    pilha28.empilha((java.lang.Object)'4');
    pilha25.empilha((java.lang.Object)pilha28);
    ds.Pilha pilha36 = new ds.Pilha();
    int i37 = pilha36.tamanho();
    pilha36.empilha((java.lang.Object)"hi!");
    java.lang.Object obj40 = pilha36.desempilha();
    pilha36.empilha((java.lang.Object)'4');
    pilha28.empilha((java.lang.Object)'4');
    pilha10.empilha((java.lang.Object)pilha28);
    pilha0.empilha((java.lang.Object)pilha10);
    ds.Pilha pilha46 = new ds.Pilha();
    int i47 = pilha46.tamanho();
    boolean b48 = pilha46.vazia();
    int i49 = pilha46.tamanho();
    int i50 = pilha46.tamanho();
    pilha46.empilha((java.lang.Object)1);
    boolean b53 = pilha46.vazia();
    ds.Pilha pilha54 = new ds.Pilha();
    ds.Pilha pilha55 = new ds.Pilha();
    int i56 = pilha55.tamanho();
    boolean b57 = pilha55.vazia();
    int i58 = pilha55.tamanho();
    pilha54.empilha((java.lang.Object)pilha55);
    pilha46.empilha((java.lang.Object)pilha54);
    ds.Pilha pilha61 = new ds.Pilha();
    ds.Pilha pilha62 = new ds.Pilha();
    int i63 = pilha62.tamanho();
    boolean b64 = pilha62.vazia();
    int i65 = pilha62.tamanho();
    pilha61.empilha((java.lang.Object)pilha62);
    boolean b67 = pilha61.vazia();
    pilha61.empilha((java.lang.Object)(short)1);
    boolean b70 = pilha61.vazia();
    java.lang.Object obj71 = pilha61.desempilha();
    pilha61.empilha((java.lang.Object)100.0f);
    int i74 = pilha61.tamanho();
    ds.Pilha pilha75 = new ds.Pilha();
    ds.Pilha pilha76 = new ds.Pilha();
    int i77 = pilha76.tamanho();
    boolean b78 = pilha76.vazia();
    int i79 = pilha76.tamanho();
    pilha75.empilha((java.lang.Object)pilha76);
    boolean b81 = pilha75.vazia();
    pilha75.empilha((java.lang.Object)(short)1);
    boolean b84 = pilha75.vazia();
    java.lang.Object obj85 = pilha75.desempilha();
    pilha75.empilha((java.lang.Object)100.0f);
    pilha61.empilha((java.lang.Object)pilha75);
    pilha54.empilha((java.lang.Object)pilha61);
    java.lang.Object obj90 = pilha54.desempilha();
    pilha0.empilha(obj90);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + "hi!"+ "'", obj32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj40 + "' != '" + "hi!"+ "'", obj40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i50 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i56 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i63 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i65 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj71 + "' != '" + (short)1+ "'", obj71.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i74 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i77 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i79 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj85 + "' != '" + (short)1+ "'", obj85.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj90);

  }

  @Test
  public void test175() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test175"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = null;
    pilha3.empilha(obj7);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    int i15 = pilha9.tamanho();
    int i16 = pilha9.tamanho();
    ds.Pilha pilha17 = new ds.Pilha();
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    pilha17.empilha((java.lang.Object)pilha18);
    int i23 = pilha17.tamanho();
    int i24 = pilha17.tamanho();
    pilha9.empilha((java.lang.Object)pilha17);
    pilha3.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha9);
    int i28 = pilha0.tamanho();
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    boolean b31 = pilha29.vazia();
    int i32 = pilha29.tamanho();
    int i33 = pilha29.tamanho();
    pilha29.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj36 = pilha29.desempilha();
    pilha0.empilha(obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (byte)10+ "'", obj36.equals((byte)10));

  }

  @Test
  public void test176() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test176"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj5 = null;
    pilha0.empilha(obj5);

  }

  @Test
  public void test177() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test177"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    int i8 = pilha6.tamanho();
    int i9 = pilha6.tamanho();
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)1);
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    pilha11.empilha((java.lang.Object)i21);
    pilha11.empilha((java.lang.Object)'4');
    int i25 = pilha11.tamanho();
    java.lang.Object obj26 = pilha11.desempilha();
    pilha6.empilha(obj26);
    pilha6.empilha((java.lang.Object)(short)(-1));
    int i30 = pilha6.tamanho();
    java.lang.Object obj31 = pilha6.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + '4'+ "'", obj26.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (short)(-1)+ "'", obj31.equals((short)(-1)));

  }

  @Test
  public void test178() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test178"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    java.lang.Object obj11 = pilha0.desempilha();
    int i12 = pilha0.tamanho();
    ds.Pilha pilha13 = new ds.Pilha();
    int i14 = pilha13.tamanho();
    boolean b15 = pilha13.vazia();
    int i16 = pilha13.tamanho();
    int i17 = pilha13.tamanho();
    pilha13.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    int i24 = pilha20.tamanho();
    pilha20.empilha((java.lang.Object)(byte)10);
    pilha13.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj28 = pilha13.desempilha();
    boolean b29 = pilha13.vazia();
    java.lang.Object obj30 = pilha13.desempilha();
    boolean b31 = pilha13.vazia();
    boolean b32 = pilha13.vazia();
    pilha13.empilha((java.lang.Object)'#');
    ds.Pilha pilha35 = new ds.Pilha();
    ds.Pilha pilha36 = new ds.Pilha();
    int i37 = pilha36.tamanho();
    boolean b38 = pilha36.vazia();
    int i39 = pilha36.tamanho();
    pilha35.empilha((java.lang.Object)pilha36);
    boolean b41 = pilha35.vazia();
    pilha35.empilha((java.lang.Object)(short)1);
    boolean b44 = pilha35.vazia();
    ds.Pilha pilha45 = new ds.Pilha();
    int i46 = pilha45.tamanho();
    pilha45.empilha((java.lang.Object)"hi!");
    java.lang.Object obj49 = null;
    pilha45.empilha(obj49);
    int i51 = pilha45.tamanho();
    int i52 = pilha45.tamanho();
    java.lang.Object obj53 = pilha45.desempilha();
    pilha35.empilha((java.lang.Object)pilha45);
    java.lang.Object obj55 = pilha35.desempilha();
    int i56 = pilha35.tamanho();
    boolean b57 = pilha35.vazia();
    pilha13.empilha((java.lang.Object)pilha35);
    pilha0.empilha((java.lang.Object)pilha13);
    int i60 = pilha13.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (byte)10+ "'", obj28.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (byte)10+ "'", obj30.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i46 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i56 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i60 == 2);

  }

  @Test
  public void test179() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test179"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    boolean b5 = pilha3.vazia();
    int i6 = pilha3.tamanho();
    int i7 = pilha3.tamanho();
    int i8 = pilha3.tamanho();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = pilha9.desempilha();
    pilha9.empilha((java.lang.Object)'4');
    pilha9.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    int i22 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)(byte)10);
    pilha18.empilha((java.lang.Object)10.0d);
    java.lang.Object obj27 = pilha18.desempilha();
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    boolean b30 = pilha28.vazia();
    int i31 = pilha28.tamanho();
    int i32 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj35 = pilha28.desempilha();
    int i36 = pilha28.tamanho();
    pilha18.empilha((java.lang.Object)i36);
    pilha9.empilha((java.lang.Object)i36);
    pilha3.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha3);
    boolean b41 = pilha0.vazia();
    boolean b42 = pilha0.vazia();
    ds.Pilha pilha43 = new ds.Pilha();
    int i44 = pilha43.tamanho();
    pilha43.empilha((java.lang.Object)"hi!");
    java.lang.Object obj47 = null;
    pilha43.empilha(obj47);
    pilha43.empilha((java.lang.Object)100.0d);
    int i51 = pilha43.tamanho();
    java.lang.Object obj52 = pilha43.desempilha();
    ds.Pilha pilha53 = new ds.Pilha();
    ds.Pilha pilha54 = new ds.Pilha();
    int i55 = pilha54.tamanho();
    boolean b56 = pilha54.vazia();
    int i57 = pilha54.tamanho();
    pilha53.empilha((java.lang.Object)pilha54);
    int i59 = pilha54.tamanho();
    int i60 = pilha54.tamanho();
    boolean b61 = pilha54.vazia();
    pilha43.empilha((java.lang.Object)pilha54);
    pilha0.empilha((java.lang.Object)pilha43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj13 + "' != '" + "hi!"+ "'", obj13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj27 + "' != '" + 10.0d+ "'", obj27.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte)10+ "'", obj35.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj52 + "' != '" + 100.0d+ "'", obj52.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i57 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i60 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);

  }

  @Test
  public void test180() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test180"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    ds.Pilha pilha4 = new ds.Pilha();
    pilha4.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)"hi!");
    java.lang.Object obj11 = pilha7.desempilha();
    pilha7.empilha((java.lang.Object)'4');
    pilha4.empilha((java.lang.Object)pilha7);
    int i15 = pilha7.tamanho();
    java.lang.Object obj16 = pilha7.desempilha();
    pilha0.empilha(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj11 + "' != '" + "hi!"+ "'", obj11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj16 + "' != '" + '4'+ "'", obj16.equals('4'));

  }

  @Test
  public void test181() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test181"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)100.0f);
    boolean b13 = pilha0.vazia();
    java.lang.Object obj14 = pilha0.desempilha();
    int i15 = pilha0.tamanho();
    java.lang.Object obj16 = pilha0.desempilha();
    ds.Pilha pilha17 = new ds.Pilha();
    boolean b18 = pilha17.vazia();
    boolean b19 = pilha17.vazia();
    boolean b20 = pilha17.vazia();
    int i21 = pilha17.tamanho();
    ds.Pilha pilha22 = new ds.Pilha();
    int i23 = pilha22.tamanho();
    pilha22.empilha((java.lang.Object)"hi!");
    java.lang.Object obj26 = null;
    pilha22.empilha(obj26);
    java.lang.Object obj28 = pilha22.desempilha();
    pilha17.empilha((java.lang.Object)pilha22);
    java.lang.Object obj30 = pilha22.desempilha();
    pilha0.empilha(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj14 + "' != '" + 100.0f+ "'", obj14.equals(100.0f));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj30 + "' != '" + "hi!"+ "'", obj30.equals("hi!"));

  }

  @Test
  public void test182() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test182"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)1);
    boolean b18 = pilha11.vazia();
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    pilha11.empilha((java.lang.Object)pilha19);
    ds.Pilha pilha26 = new ds.Pilha();
    pilha26.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    pilha29.empilha((java.lang.Object)"hi!");
    java.lang.Object obj33 = pilha29.desempilha();
    pilha29.empilha((java.lang.Object)'4');
    pilha26.empilha((java.lang.Object)pilha29);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)"hi!");
    java.lang.Object obj41 = pilha37.desempilha();
    pilha37.empilha((java.lang.Object)'4');
    pilha29.empilha((java.lang.Object)'4');
    pilha11.empilha((java.lang.Object)pilha29);
    pilha0.empilha((java.lang.Object)pilha11);
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    pilha47.empilha((java.lang.Object)"hi!");
    java.lang.Object obj51 = null;
    pilha47.empilha(obj51);
    pilha47.empilha((java.lang.Object)100.0d);
    java.lang.Object obj55 = pilha47.desempilha();
    pilha11.empilha((java.lang.Object)pilha47);
    ds.Pilha pilha57 = new ds.Pilha();
    int i58 = pilha57.tamanho();
    boolean b59 = pilha57.vazia();
    int i60 = pilha57.tamanho();
    int i61 = pilha57.tamanho();
    pilha57.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha64 = new ds.Pilha();
    int i65 = pilha64.tamanho();
    boolean b66 = pilha64.vazia();
    int i67 = pilha64.tamanho();
    int i68 = pilha64.tamanho();
    pilha64.empilha((java.lang.Object)(byte)10);
    pilha57.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj72 = pilha57.desempilha();
    boolean b73 = pilha57.vazia();
    java.lang.Object obj74 = pilha57.desempilha();
    boolean b75 = pilha57.vazia();
    ds.Pilha pilha76 = new ds.Pilha();
    ds.Pilha pilha77 = new ds.Pilha();
    int i78 = pilha77.tamanho();
    boolean b79 = pilha77.vazia();
    int i80 = pilha77.tamanho();
    pilha76.empilha((java.lang.Object)pilha77);
    int i82 = pilha77.tamanho();
    pilha57.empilha((java.lang.Object)i82);
    java.lang.Object obj84 = pilha57.desempilha();
    pilha11.empilha((java.lang.Object)pilha57);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj86 = pilha57.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + "hi!"+ "'", obj33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj41 + "' != '" + "hi!"+ "'", obj41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj55 + "' != '" + 100.0d+ "'", obj55.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i60 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i65 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i67 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj72 + "' != '" + (byte)10+ "'", obj72.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj74 + "' != '" + (byte)10+ "'", obj74.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i78 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i80 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i82 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj84 + "' != '" + 0+ "'", obj84.equals(0));

  }

  @Test
  public void test183() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test183"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = pilha3.desempilha();
    pilha3.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha3);
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)"hi!");
    java.lang.Object obj15 = pilha11.desempilha();
    pilha11.empilha((java.lang.Object)'4');
    pilha3.empilha((java.lang.Object)'4');
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    boolean b25 = pilha19.vazia();
    pilha3.empilha((java.lang.Object)b25);
    int i27 = pilha3.tamanho();
    boolean b28 = pilha3.vazia();
    boolean b29 = pilha3.vazia();
    ds.Pilha pilha30 = new ds.Pilha();
    int i31 = pilha30.tamanho();
    boolean b32 = pilha30.vazia();
    int i33 = pilha30.tamanho();
    int i34 = pilha30.tamanho();
    pilha30.empilha((java.lang.Object)1);
    boolean b37 = pilha30.vazia();
    ds.Pilha pilha38 = new ds.Pilha();
    ds.Pilha pilha39 = new ds.Pilha();
    int i40 = pilha39.tamanho();
    boolean b41 = pilha39.vazia();
    int i42 = pilha39.tamanho();
    pilha38.empilha((java.lang.Object)pilha39);
    pilha30.empilha((java.lang.Object)pilha38);
    ds.Pilha pilha45 = new ds.Pilha();
    ds.Pilha pilha46 = new ds.Pilha();
    int i47 = pilha46.tamanho();
    boolean b48 = pilha46.vazia();
    int i49 = pilha46.tamanho();
    pilha45.empilha((java.lang.Object)pilha46);
    boolean b51 = pilha45.vazia();
    pilha45.empilha((java.lang.Object)(short)1);
    boolean b54 = pilha45.vazia();
    java.lang.Object obj55 = pilha45.desempilha();
    pilha45.empilha((java.lang.Object)100.0f);
    int i58 = pilha45.tamanho();
    ds.Pilha pilha59 = new ds.Pilha();
    ds.Pilha pilha60 = new ds.Pilha();
    int i61 = pilha60.tamanho();
    boolean b62 = pilha60.vazia();
    int i63 = pilha60.tamanho();
    pilha59.empilha((java.lang.Object)pilha60);
    boolean b65 = pilha59.vazia();
    pilha59.empilha((java.lang.Object)(short)1);
    boolean b68 = pilha59.vazia();
    java.lang.Object obj69 = pilha59.desempilha();
    pilha59.empilha((java.lang.Object)100.0f);
    pilha45.empilha((java.lang.Object)pilha59);
    pilha38.empilha((java.lang.Object)pilha45);
    pilha3.empilha((java.lang.Object)pilha45);
    ds.Pilha pilha75 = new ds.Pilha();
    int i76 = pilha75.tamanho();
    boolean b77 = pilha75.vazia();
    boolean b78 = pilha75.vazia();
    ds.Pilha pilha79 = new ds.Pilha();
    int i80 = pilha79.tamanho();
    pilha79.empilha((java.lang.Object)"hi!");
    java.lang.Object obj83 = pilha79.desempilha();
    pilha79.empilha((java.lang.Object)'4');
    pilha79.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha88 = new ds.Pilha();
    pilha88.empilha((java.lang.Object)(short)0);
    pilha88.empilha((java.lang.Object)(byte)10);
    pilha88.empilha((java.lang.Object)100L);
    pilha79.empilha((java.lang.Object)100L);
    pilha75.empilha((java.lang.Object)pilha79);
    int i97 = pilha79.tamanho();
    pilha3.empilha((java.lang.Object)pilha79);
    boolean b99 = pilha79.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + "hi!"+ "'", obj7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + "hi!"+ "'", obj15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short)1+ "'", obj55.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i63 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj69 + "' != '" + (short)1+ "'", obj69.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i76 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i80 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj83 + "' != '" + "hi!"+ "'", obj83.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i97 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b99 == false);

  }

  @Test
  public void test184() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test184"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    boolean b3 = pilha0.vazia();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    int i6 = pilha5.tamanho();
    pilha5.empilha((java.lang.Object)"hi!");
    java.lang.Object obj9 = null;
    pilha5.empilha(obj9);
    java.lang.Object obj11 = pilha5.desempilha();
    pilha0.empilha((java.lang.Object)pilha5);
    java.lang.Object obj13 = pilha5.desempilha();
    ds.Pilha pilha14 = new ds.Pilha();
    int i15 = pilha14.tamanho();
    pilha14.empilha((java.lang.Object)"hi!");
    boolean b18 = pilha14.vazia();
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    boolean b21 = pilha19.vazia();
    int i22 = pilha19.tamanho();
    int i23 = pilha19.tamanho();
    pilha19.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha26 = new ds.Pilha();
    int i27 = pilha26.tamanho();
    boolean b28 = pilha26.vazia();
    int i29 = pilha26.tamanho();
    int i30 = pilha26.tamanho();
    pilha26.empilha((java.lang.Object)(byte)10);
    pilha19.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj34 = pilha19.desempilha();
    boolean b35 = pilha19.vazia();
    pilha14.empilha((java.lang.Object)pilha19);
    boolean b37 = pilha14.vazia();
    pilha5.empilha((java.lang.Object)b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj13 + "' != '" + "hi!"+ "'", obj13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (byte)10+ "'", obj34.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);

  }

  @Test
  public void test185() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test185"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    int i8 = pilha0.tamanho();
    int i9 = pilha0.tamanho();
    int i10 = pilha0.tamanho();
    java.lang.Object obj11 = pilha0.desempilha();
    boolean b12 = pilha0.vazia();
    ds.Pilha pilha13 = new ds.Pilha();
    pilha13.empilha((java.lang.Object)(short)0);
    pilha13.empilha((java.lang.Object)(byte)10);
    pilha13.empilha((java.lang.Object)100L);
    int i20 = pilha13.tamanho();
    boolean b21 = pilha13.vazia();
    pilha0.empilha((java.lang.Object)pilha13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj11 + "' != '" + "hi!"+ "'", obj11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);

  }

  @Test
  public void test186() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test186"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    int i8 = pilha0.tamanho();
    boolean b9 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test187() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test187"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    ds.Pilha pilha11 = new ds.Pilha();
    ds.Pilha pilha12 = new ds.Pilha();
    int i13 = pilha12.tamanho();
    boolean b14 = pilha12.vazia();
    int i15 = pilha12.tamanho();
    pilha11.empilha((java.lang.Object)pilha12);
    int i17 = pilha12.tamanho();
    int i18 = pilha12.tamanho();
    pilha0.empilha((java.lang.Object)i18);
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    int i24 = pilha20.tamanho();
    pilha20.empilha((java.lang.Object)1);
    pilha20.empilha((java.lang.Object)3);
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    pilha29.empilha((java.lang.Object)"hi!");
    java.lang.Object obj33 = null;
    pilha29.empilha(obj33);
    pilha29.empilha((java.lang.Object)100.0d);
    int i37 = pilha29.tamanho();
    java.lang.Object obj38 = pilha29.desempilha();
    pilha20.empilha(obj38);
    ds.Pilha pilha40 = new ds.Pilha();
    int i41 = pilha40.tamanho();
    int i42 = pilha40.tamanho();
    int i43 = pilha40.tamanho();
    pilha20.empilha((java.lang.Object)pilha40);
    pilha0.empilha((java.lang.Object)pilha20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj38 + "' != '" + 100.0d+ "'", obj38.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);

  }

  @Test
  public void test188() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test188"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    int i8 = pilha6.tamanho();
    int i9 = pilha6.tamanho();
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)1);
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    pilha11.empilha((java.lang.Object)i21);
    pilha11.empilha((java.lang.Object)'4');
    int i25 = pilha11.tamanho();
    java.lang.Object obj26 = pilha11.desempilha();
    pilha6.empilha(obj26);
    pilha6.empilha((java.lang.Object)(short)(-1));
    int i30 = pilha6.tamanho();
    int i31 = pilha6.tamanho();
    int i32 = pilha6.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + '4'+ "'", obj26.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 2);

  }

  @Test
  public void test189() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test189"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    boolean b5 = pilha0.vazia();
    boolean b6 = pilha0.vazia();
    boolean b7 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);

  }

  @Test
  public void test190() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test190"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    int i6 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1.0d);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)'a');
    pilha0.empilha((java.lang.Object)pilha9);
    int i16 = pilha9.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 1);

  }

  @Test
  public void test191() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test191"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = pilha3.desempilha();
    pilha3.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha3);
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)"hi!");
    java.lang.Object obj15 = pilha11.desempilha();
    pilha11.empilha((java.lang.Object)'4');
    pilha3.empilha((java.lang.Object)'4');
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    boolean b25 = pilha19.vazia();
    pilha3.empilha((java.lang.Object)b25);
    int i27 = pilha3.tamanho();
    boolean b28 = pilha3.vazia();
    boolean b29 = pilha3.vazia();
    ds.Pilha pilha30 = new ds.Pilha();
    int i31 = pilha30.tamanho();
    boolean b32 = pilha30.vazia();
    int i33 = pilha30.tamanho();
    int i34 = pilha30.tamanho();
    pilha30.empilha((java.lang.Object)1);
    boolean b37 = pilha30.vazia();
    ds.Pilha pilha38 = new ds.Pilha();
    ds.Pilha pilha39 = new ds.Pilha();
    int i40 = pilha39.tamanho();
    boolean b41 = pilha39.vazia();
    int i42 = pilha39.tamanho();
    pilha38.empilha((java.lang.Object)pilha39);
    pilha30.empilha((java.lang.Object)pilha38);
    ds.Pilha pilha45 = new ds.Pilha();
    ds.Pilha pilha46 = new ds.Pilha();
    int i47 = pilha46.tamanho();
    boolean b48 = pilha46.vazia();
    int i49 = pilha46.tamanho();
    pilha45.empilha((java.lang.Object)pilha46);
    boolean b51 = pilha45.vazia();
    pilha45.empilha((java.lang.Object)(short)1);
    boolean b54 = pilha45.vazia();
    java.lang.Object obj55 = pilha45.desempilha();
    pilha45.empilha((java.lang.Object)100.0f);
    int i58 = pilha45.tamanho();
    ds.Pilha pilha59 = new ds.Pilha();
    ds.Pilha pilha60 = new ds.Pilha();
    int i61 = pilha60.tamanho();
    boolean b62 = pilha60.vazia();
    int i63 = pilha60.tamanho();
    pilha59.empilha((java.lang.Object)pilha60);
    boolean b65 = pilha59.vazia();
    pilha59.empilha((java.lang.Object)(short)1);
    boolean b68 = pilha59.vazia();
    java.lang.Object obj69 = pilha59.desempilha();
    pilha59.empilha((java.lang.Object)100.0f);
    pilha45.empilha((java.lang.Object)pilha59);
    pilha38.empilha((java.lang.Object)pilha45);
    pilha3.empilha((java.lang.Object)pilha45);
    boolean b75 = pilha3.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + "hi!"+ "'", obj7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + "hi!"+ "'", obj15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (short)1+ "'", obj55.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i63 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj69 + "' != '" + (short)1+ "'", obj69.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);

  }

  @Test
  public void test192() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test192"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    boolean b8 = pilha6.vazia();
    int i9 = pilha6.tamanho();
    ds.Pilha pilha10 = new ds.Pilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    pilha10.empilha((java.lang.Object)pilha11);
    boolean b16 = pilha10.vazia();
    pilha10.empilha((java.lang.Object)(short)1);
    boolean b19 = pilha10.vazia();
    java.lang.Object obj20 = pilha10.desempilha();
    ds.Pilha pilha21 = new ds.Pilha();
    int i22 = pilha21.tamanho();
    boolean b23 = pilha21.vazia();
    int i24 = pilha21.tamanho();
    int i25 = pilha21.tamanho();
    pilha21.empilha((java.lang.Object)1);
    boolean b28 = pilha21.vazia();
    ds.Pilha pilha29 = new ds.Pilha();
    ds.Pilha pilha30 = new ds.Pilha();
    int i31 = pilha30.tamanho();
    boolean b32 = pilha30.vazia();
    int i33 = pilha30.tamanho();
    pilha29.empilha((java.lang.Object)pilha30);
    pilha21.empilha((java.lang.Object)pilha29);
    ds.Pilha pilha36 = new ds.Pilha();
    pilha36.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha39 = new ds.Pilha();
    int i40 = pilha39.tamanho();
    pilha39.empilha((java.lang.Object)"hi!");
    java.lang.Object obj43 = pilha39.desempilha();
    pilha39.empilha((java.lang.Object)'4');
    pilha36.empilha((java.lang.Object)pilha39);
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    pilha47.empilha((java.lang.Object)"hi!");
    java.lang.Object obj51 = pilha47.desempilha();
    pilha47.empilha((java.lang.Object)'4');
    pilha39.empilha((java.lang.Object)'4');
    pilha21.empilha((java.lang.Object)pilha39);
    pilha10.empilha((java.lang.Object)pilha21);
    ds.Pilha pilha57 = new ds.Pilha();
    int i58 = pilha57.tamanho();
    pilha57.empilha((java.lang.Object)"hi!");
    java.lang.Object obj61 = null;
    pilha57.empilha(obj61);
    pilha57.empilha((java.lang.Object)100.0d);
    java.lang.Object obj65 = pilha57.desempilha();
    pilha21.empilha((java.lang.Object)pilha57);
    ds.Pilha pilha67 = new ds.Pilha();
    int i68 = pilha67.tamanho();
    boolean b69 = pilha67.vazia();
    int i70 = pilha67.tamanho();
    int i71 = pilha67.tamanho();
    pilha67.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha74 = new ds.Pilha();
    int i75 = pilha74.tamanho();
    boolean b76 = pilha74.vazia();
    int i77 = pilha74.tamanho();
    int i78 = pilha74.tamanho();
    pilha74.empilha((java.lang.Object)(byte)10);
    pilha67.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj82 = pilha67.desempilha();
    boolean b83 = pilha67.vazia();
    java.lang.Object obj84 = pilha67.desempilha();
    boolean b85 = pilha67.vazia();
    ds.Pilha pilha86 = new ds.Pilha();
    ds.Pilha pilha87 = new ds.Pilha();
    int i88 = pilha87.tamanho();
    boolean b89 = pilha87.vazia();
    int i90 = pilha87.tamanho();
    pilha86.empilha((java.lang.Object)pilha87);
    int i92 = pilha87.tamanho();
    pilha67.empilha((java.lang.Object)i92);
    java.lang.Object obj94 = pilha67.desempilha();
    pilha21.empilha((java.lang.Object)pilha67);
    pilha6.empilha((java.lang.Object)pilha67);
    pilha0.empilha((java.lang.Object)pilha67);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj98 = pilha67.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short)1+ "'", obj20.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj43 + "' != '" + "hi!"+ "'", obj43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj51 + "' != '" + "hi!"+ "'", obj51.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj65 + "' != '" + 100.0d+ "'", obj65.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i70 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i71 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i75 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i77 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i78 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj82 + "' != '" + (byte)10+ "'", obj82.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj84 + "' != '" + (byte)10+ "'", obj84.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b85 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i88 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b89 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i90 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i92 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj94 + "' != '" + 0+ "'", obj94.equals(0));

  }

  @Test
  public void test193() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test193"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    java.lang.Object obj9 = pilha0.desempilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)1);
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    pilha10.empilha((java.lang.Object)i20);
    pilha10.empilha((java.lang.Object)'4');
    int i24 = pilha10.tamanho();
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b26 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100.0d+ "'", obj9.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test194() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test194"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    ds.Pilha pilha4 = new ds.Pilha();
    int i5 = pilha4.tamanho();
    pilha4.empilha((java.lang.Object)"hi!");
    java.lang.Object obj8 = pilha4.desempilha();
    pilha4.empilha((java.lang.Object)'4');
    pilha4.empilha((java.lang.Object)"hi!");
    pilha0.empilha((java.lang.Object)pilha4);
    ds.Pilha pilha14 = new ds.Pilha();
    int i15 = pilha14.tamanho();
    pilha14.empilha((java.lang.Object)"hi!");
    java.lang.Object obj18 = null;
    pilha14.empilha(obj18);
    int i20 = pilha14.tamanho();
    java.lang.Object obj21 = pilha14.desempilha();
    java.lang.Object obj22 = pilha14.desempilha();
    ds.Pilha pilha23 = new ds.Pilha();
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    boolean b26 = pilha24.vazia();
    int i27 = pilha24.tamanho();
    pilha23.empilha((java.lang.Object)pilha24);
    pilha14.empilha((java.lang.Object)pilha24);
    pilha0.empilha((java.lang.Object)pilha24);
    java.lang.Object obj31 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj22 + "' != '" + "hi!"+ "'", obj22.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj31);

  }

  @Test
  public void test195() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test195"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = null;
    pilha6.empilha(obj10);
    int i12 = pilha6.tamanho();
    int i13 = pilha6.tamanho();
    ds.Pilha pilha14 = new ds.Pilha();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    pilha14.empilha((java.lang.Object)pilha15);
    int i20 = pilha14.tamanho();
    int i21 = pilha14.tamanho();
    pilha6.empilha((java.lang.Object)pilha14);
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    boolean b26 = pilha24.vazia();
    int i27 = pilha24.tamanho();
    int i28 = pilha24.tamanho();
    pilha24.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    boolean b33 = pilha31.vazia();
    int i34 = pilha31.tamanho();
    int i35 = pilha31.tamanho();
    pilha31.empilha((java.lang.Object)(byte)10);
    pilha24.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj39 = pilha24.desempilha();
    java.lang.Object obj40 = pilha24.desempilha();
    boolean b41 = pilha24.vazia();
    int i42 = pilha24.tamanho();
    int i43 = pilha24.tamanho();
    pilha24.empilha((java.lang.Object)(byte)(-1));
    pilha6.empilha((java.lang.Object)(byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (byte)10+ "'", obj39.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (byte)10+ "'", obj40.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);

  }

  @Test
  public void test196() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test196"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    java.lang.Object obj9 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (byte)(-1)+ "'", obj9.equals((byte)(-1)));

  }

  @Test
  public void test197() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test197"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    int i8 = pilha0.tamanho();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    int i15 = pilha9.tamanho();
    int i16 = pilha9.tamanho();
    java.lang.Object obj17 = pilha9.desempilha();
    pilha0.empilha((java.lang.Object)pilha9);
    java.lang.Object obj19 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj19);

  }

  @Test
  public void test198() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test198"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    boolean b3 = pilha0.vazia();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    int i6 = pilha5.tamanho();
    pilha5.empilha((java.lang.Object)"hi!");
    java.lang.Object obj9 = null;
    pilha5.empilha(obj9);
    java.lang.Object obj11 = pilha5.desempilha();
    pilha0.empilha((java.lang.Object)pilha5);
    boolean b13 = pilha0.vazia();
    ds.Pilha pilha14 = new ds.Pilha();
    int i15 = pilha14.tamanho();
    boolean b16 = pilha14.vazia();
    int i17 = pilha14.tamanho();
    int i18 = pilha14.tamanho();
    pilha14.empilha((java.lang.Object)1);
    boolean b21 = pilha14.vazia();
    ds.Pilha pilha22 = new ds.Pilha();
    int i23 = pilha22.tamanho();
    pilha22.empilha((java.lang.Object)"hi!");
    java.lang.Object obj26 = null;
    pilha22.empilha(obj26);
    int i28 = pilha22.tamanho();
    int i29 = pilha22.tamanho();
    java.lang.Object obj30 = pilha22.desempilha();
    java.lang.Object obj31 = pilha22.desempilha();
    boolean b32 = pilha22.vazia();
    pilha14.empilha((java.lang.Object)b32);
    pilha0.empilha((java.lang.Object)b32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj31 + "' != '" + "hi!"+ "'", obj31.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);

  }

  @Test
  public void test199() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test199"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    ds.Pilha pilha5 = new ds.Pilha();
    int i6 = pilha5.tamanho();
    pilha5.empilha((java.lang.Object)"hi!");
    java.lang.Object obj9 = pilha5.desempilha();
    pilha5.empilha((java.lang.Object)'4');
    boolean b12 = pilha5.vazia();
    pilha0.empilha((java.lang.Object)pilha5);
    java.lang.Object obj14 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + "hi!"+ "'", obj9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);

  }

  @Test
  public void test200() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test200"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    boolean b4 = pilha0.vazia();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = pilha6.desempilha();
    int i11 = pilha6.tamanho();
    boolean b12 = pilha6.vazia();
    int i13 = pilha6.tamanho();
    java.lang.Object obj14 = null;
    pilha6.empilha(obj14);
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha17 = new ds.Pilha();
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    pilha17.empilha((java.lang.Object)pilha18);
    int i23 = pilha18.tamanho();
    boolean b24 = pilha18.vazia();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj29 = null;
    pilha25.empilha(obj29);
    int i31 = pilha25.tamanho();
    int i32 = pilha25.tamanho();
    pilha18.empilha((java.lang.Object)pilha25);
    pilha6.empilha((java.lang.Object)pilha25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 2);

  }

  @Test
  public void test201() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test201"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    int i14 = pilha8.tamanho();
    int i15 = pilha8.tamanho();
    pilha0.empilha((java.lang.Object)pilha8);
    java.lang.Object obj17 = pilha8.desempilha();
    boolean b18 = pilha8.vazia();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj19 = pilha8.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);

  }

  @Test
  public void test202() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test202"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    boolean b6 = pilha0.vazia();
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)"hi!");
    boolean b11 = pilha7.vazia();
    pilha0.empilha((java.lang.Object)pilha7);
    boolean b13 = pilha7.vazia();
    boolean b14 = pilha7.vazia();
    boolean b15 = pilha7.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test203() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test203"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    boolean b15 = pilha0.vazia();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    pilha16.empilha((java.lang.Object)"hi!");
    java.lang.Object obj20 = null;
    pilha16.empilha(obj20);
    ds.Pilha pilha22 = new ds.Pilha();
    int i23 = pilha22.tamanho();
    pilha22.empilha((java.lang.Object)"hi!");
    java.lang.Object obj26 = null;
    pilha22.empilha(obj26);
    int i28 = pilha22.tamanho();
    int i29 = pilha22.tamanho();
    ds.Pilha pilha30 = new ds.Pilha();
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    boolean b33 = pilha31.vazia();
    int i34 = pilha31.tamanho();
    pilha30.empilha((java.lang.Object)pilha31);
    int i36 = pilha30.tamanho();
    int i37 = pilha30.tamanho();
    pilha22.empilha((java.lang.Object)pilha30);
    pilha16.empilha((java.lang.Object)pilha22);
    pilha0.empilha((java.lang.Object)pilha16);
    int i41 = pilha16.tamanho();
    int i42 = pilha16.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 3);

  }

  @Test
  public void test204() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test204"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    java.lang.Object obj8 = pilha0.desempilha();
    java.lang.Object obj9 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + 100.0d+ "'", obj8.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);

  }

  @Test
  public void test205() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test205"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)100L);
    pilha0.empilha((java.lang.Object)100);
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    int i11 = pilha0.tamanho();
    ds.Pilha pilha12 = new ds.Pilha();
    int i13 = pilha12.tamanho();
    pilha12.empilha((java.lang.Object)"hi!");
    java.lang.Object obj16 = pilha12.desempilha();
    boolean b17 = pilha12.vazia();
    pilha0.empilha((java.lang.Object)pilha12);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj19 = pilha12.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100+ "'", obj9.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj16 + "' != '" + "hi!"+ "'", obj16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);

  }

  @Test
  public void test206() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test206"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)"hi!");
    java.lang.Object obj11 = null;
    pilha7.empilha(obj11);
    boolean b13 = pilha7.vazia();
    ds.Pilha pilha14 = new ds.Pilha();
    int i15 = pilha14.tamanho();
    pilha14.empilha((java.lang.Object)"hi!");
    boolean b18 = pilha14.vazia();
    pilha7.empilha((java.lang.Object)pilha14);
    pilha0.empilha((java.lang.Object)pilha14);
    java.lang.Object obj21 = pilha14.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj21 + "' != '" + "hi!"+ "'", obj21.equals("hi!"));

  }

  @Test
  public void test207() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test207"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    boolean b7 = pilha0.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    boolean b9 = pilha8.vazia();
    boolean b10 = pilha8.vazia();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    int i16 = pilha11.tamanho();
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    pilha17.empilha((java.lang.Object)"hi!");
    java.lang.Object obj21 = pilha17.desempilha();
    pilha17.empilha((java.lang.Object)'4');
    pilha17.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha26 = new ds.Pilha();
    int i27 = pilha26.tamanho();
    boolean b28 = pilha26.vazia();
    int i29 = pilha26.tamanho();
    int i30 = pilha26.tamanho();
    pilha26.empilha((java.lang.Object)(byte)10);
    pilha26.empilha((java.lang.Object)10.0d);
    java.lang.Object obj35 = pilha26.desempilha();
    ds.Pilha pilha36 = new ds.Pilha();
    int i37 = pilha36.tamanho();
    boolean b38 = pilha36.vazia();
    int i39 = pilha36.tamanho();
    int i40 = pilha36.tamanho();
    pilha36.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj43 = pilha36.desempilha();
    int i44 = pilha36.tamanho();
    pilha26.empilha((java.lang.Object)i44);
    pilha17.empilha((java.lang.Object)i44);
    pilha11.empilha((java.lang.Object)pilha17);
    pilha8.empilha((java.lang.Object)pilha11);
    boolean b49 = pilha8.vazia();
    int i50 = pilha8.tamanho();
    boolean b51 = pilha8.vazia();
    pilha0.empilha((java.lang.Object)pilha8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj21 + "' != '" + "hi!"+ "'", obj21.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj35 + "' != '" + 10.0d+ "'", obj35.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (byte)10+ "'", obj43.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);

  }

  @Test
  public void test208() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test208"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    int i9 = pilha0.tamanho();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)1);
    boolean b17 = pilha10.vazia();
    ds.Pilha pilha18 = new ds.Pilha();
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    boolean b21 = pilha19.vazia();
    int i22 = pilha19.tamanho();
    pilha18.empilha((java.lang.Object)pilha19);
    pilha10.empilha((java.lang.Object)pilha18);
    ds.Pilha pilha25 = new ds.Pilha();
    pilha25.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)"hi!");
    java.lang.Object obj32 = pilha28.desempilha();
    pilha28.empilha((java.lang.Object)'4');
    pilha25.empilha((java.lang.Object)pilha28);
    ds.Pilha pilha36 = new ds.Pilha();
    int i37 = pilha36.tamanho();
    pilha36.empilha((java.lang.Object)"hi!");
    java.lang.Object obj40 = pilha36.desempilha();
    pilha36.empilha((java.lang.Object)'4');
    pilha28.empilha((java.lang.Object)'4');
    pilha10.empilha((java.lang.Object)pilha28);
    pilha0.empilha((java.lang.Object)pilha10);
    java.lang.Object obj46 = pilha0.desempilha();
    int i47 = pilha0.tamanho();
    java.lang.Object obj48 = pilha0.desempilha();
    boolean b49 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + "hi!"+ "'", obj32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj40 + "' != '" + "hi!"+ "'", obj40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj48 + "' != '" + 3+ "'", obj48.equals(3));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);

  }

  @Test
  public void test209() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test209"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    boolean b8 = pilha0.vazia();
    int i9 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 2);

  }

  @Test
  public void test210() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test210"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)'a');
    ds.Pilha pilha8 = new ds.Pilha();
    boolean b9 = pilha8.vazia();
    boolean b10 = pilha8.vazia();
    pilha0.empilha((java.lang.Object)pilha8);
    boolean b12 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test211() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test211"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj5 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte)10+ "'", obj5.equals((byte)10));

  }

  @Test
  public void test212() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test212"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)100.0f);
    int i13 = pilha0.tamanho();
    ds.Pilha pilha14 = new ds.Pilha();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    pilha14.empilha((java.lang.Object)pilha15);
    boolean b20 = pilha14.vazia();
    pilha14.empilha((java.lang.Object)(short)1);
    boolean b23 = pilha14.vazia();
    java.lang.Object obj24 = pilha14.desempilha();
    pilha14.empilha((java.lang.Object)100.0f);
    pilha0.empilha((java.lang.Object)pilha14);
    java.lang.Object obj28 = pilha0.desempilha();
    java.lang.Object obj29 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (short)1+ "'", obj24.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj29 + "' != '" + 100.0f+ "'", obj29.equals(100.0f));

  }

  @Test
  public void test213() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test213"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    boolean b7 = pilha0.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha8);
    java.lang.Object obj15 = pilha0.desempilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    int i20 = pilha16.tamanho();
    pilha16.empilha((java.lang.Object)1);
    boolean b23 = pilha16.vazia();
    ds.Pilha pilha24 = new ds.Pilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    pilha24.empilha((java.lang.Object)pilha25);
    pilha16.empilha((java.lang.Object)pilha24);
    ds.Pilha pilha31 = new ds.Pilha();
    pilha31.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha34 = new ds.Pilha();
    int i35 = pilha34.tamanho();
    pilha34.empilha((java.lang.Object)"hi!");
    java.lang.Object obj38 = pilha34.desempilha();
    pilha34.empilha((java.lang.Object)'4');
    pilha31.empilha((java.lang.Object)pilha34);
    ds.Pilha pilha42 = new ds.Pilha();
    int i43 = pilha42.tamanho();
    pilha42.empilha((java.lang.Object)"hi!");
    java.lang.Object obj46 = pilha42.desempilha();
    pilha42.empilha((java.lang.Object)'4');
    pilha34.empilha((java.lang.Object)'4');
    pilha16.empilha((java.lang.Object)pilha34);
    ds.Pilha pilha51 = new ds.Pilha();
    ds.Pilha pilha52 = new ds.Pilha();
    int i53 = pilha52.tamanho();
    boolean b54 = pilha52.vazia();
    int i55 = pilha52.tamanho();
    pilha51.empilha((java.lang.Object)pilha52);
    boolean b57 = pilha51.vazia();
    pilha51.empilha((java.lang.Object)(short)1);
    boolean b60 = pilha51.vazia();
    java.lang.Object obj61 = pilha51.desempilha();
    pilha51.empilha((java.lang.Object)100.0f);
    boolean b64 = pilha51.vazia();
    pilha16.empilha((java.lang.Object)pilha51);
    pilha0.empilha((java.lang.Object)pilha51);
    int i67 = pilha51.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj38 + "' != '" + "hi!"+ "'", obj38.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj46 + "' != '" + "hi!"+ "'", obj46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short)1+ "'", obj61.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i67 == 2);

  }

  @Test
  public void test214() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test214"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    boolean b8 = pilha6.vazia();
    int i9 = pilha6.tamanho();
    pilha5.empilha((java.lang.Object)pilha6);
    boolean b11 = pilha5.vazia();
    pilha5.empilha((java.lang.Object)(short)1);
    pilha0.empilha((java.lang.Object)(short)1);
    ds.Pilha pilha15 = new ds.Pilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha15.empilha((java.lang.Object)pilha16);
    int i21 = pilha15.tamanho();
    ds.Pilha pilha22 = new ds.Pilha();
    ds.Pilha pilha23 = new ds.Pilha();
    int i24 = pilha23.tamanho();
    boolean b25 = pilha23.vazia();
    int i26 = pilha23.tamanho();
    pilha22.empilha((java.lang.Object)pilha23);
    boolean b28 = pilha22.vazia();
    pilha22.empilha((java.lang.Object)(short)1);
    pilha15.empilha((java.lang.Object)pilha22);
    pilha0.empilha((java.lang.Object)pilha22);
    boolean b33 = pilha0.vazia();
    boolean b34 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test215() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test215"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    boolean b6 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);

  }

  @Test
  public void test216() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test216"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    java.lang.Object obj9 = pilha0.desempilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)1);
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    pilha10.empilha((java.lang.Object)i20);
    pilha10.empilha((java.lang.Object)'4');
    int i24 = pilha10.tamanho();
    pilha0.empilha((java.lang.Object)pilha10);
    java.lang.Object obj26 = pilha0.desempilha();
    int i27 = pilha0.tamanho();
    boolean b28 = pilha0.vazia();
    int i29 = pilha0.tamanho();
    java.lang.Object obj30 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100.0d+ "'", obj9.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj30);

  }

  @Test
  public void test217() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test217"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    boolean b3 = pilha0.vazia();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    int i6 = pilha5.tamanho();
    pilha5.empilha((java.lang.Object)"hi!");
    java.lang.Object obj9 = null;
    pilha5.empilha(obj9);
    java.lang.Object obj11 = pilha5.desempilha();
    pilha0.empilha((java.lang.Object)pilha5);
    java.lang.Object obj13 = pilha0.desempilha();
    int i14 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);

  }

  @Test
  public void test218() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test218"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    pilha9.empilha((java.lang.Object)100.0d);
    int i17 = pilha9.tamanho();
    java.lang.Object obj18 = pilha9.desempilha();
    pilha0.empilha(obj18);
    java.lang.Object obj20 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 100.0d+ "'", obj18.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj20 + "' != '" + 100.0d+ "'", obj20.equals(100.0d));

  }

  @Test
  public void test219() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test219"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = null;
    pilha6.empilha(obj10);
    int i12 = pilha6.tamanho();
    int i13 = pilha6.tamanho();
    ds.Pilha pilha14 = new ds.Pilha();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    pilha14.empilha((java.lang.Object)pilha15);
    int i20 = pilha14.tamanho();
    int i21 = pilha14.tamanho();
    pilha6.empilha((java.lang.Object)pilha14);
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha24 = new ds.Pilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    pilha24.empilha((java.lang.Object)pilha25);
    boolean b30 = pilha24.vazia();
    pilha24.empilha((java.lang.Object)(short)1);
    boolean b33 = pilha24.vazia();
    java.lang.Object obj34 = pilha24.desempilha();
    ds.Pilha pilha35 = new ds.Pilha();
    int i36 = pilha35.tamanho();
    boolean b37 = pilha35.vazia();
    int i38 = pilha35.tamanho();
    int i39 = pilha35.tamanho();
    pilha35.empilha((java.lang.Object)1);
    boolean b42 = pilha35.vazia();
    ds.Pilha pilha43 = new ds.Pilha();
    ds.Pilha pilha44 = new ds.Pilha();
    int i45 = pilha44.tamanho();
    boolean b46 = pilha44.vazia();
    int i47 = pilha44.tamanho();
    pilha43.empilha((java.lang.Object)pilha44);
    pilha35.empilha((java.lang.Object)pilha43);
    ds.Pilha pilha50 = new ds.Pilha();
    pilha50.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha53 = new ds.Pilha();
    int i54 = pilha53.tamanho();
    pilha53.empilha((java.lang.Object)"hi!");
    java.lang.Object obj57 = pilha53.desempilha();
    pilha53.empilha((java.lang.Object)'4');
    pilha50.empilha((java.lang.Object)pilha53);
    ds.Pilha pilha61 = new ds.Pilha();
    int i62 = pilha61.tamanho();
    pilha61.empilha((java.lang.Object)"hi!");
    java.lang.Object obj65 = pilha61.desempilha();
    pilha61.empilha((java.lang.Object)'4');
    pilha53.empilha((java.lang.Object)'4');
    pilha35.empilha((java.lang.Object)pilha53);
    pilha24.empilha((java.lang.Object)pilha35);
    ds.Pilha pilha71 = new ds.Pilha();
    int i72 = pilha71.tamanho();
    pilha71.empilha((java.lang.Object)"hi!");
    java.lang.Object obj75 = null;
    pilha71.empilha(obj75);
    pilha71.empilha((java.lang.Object)100.0d);
    java.lang.Object obj79 = pilha71.desempilha();
    pilha35.empilha((java.lang.Object)pilha71);
    java.lang.Object obj81 = pilha71.desempilha();
    pilha6.empilha(obj81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short)1+ "'", obj34.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i54 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj57 + "' != '" + "hi!"+ "'", obj57.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i62 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj65 + "' != '" + "hi!"+ "'", obj65.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i72 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj79 + "' != '" + 100.0d+ "'", obj79.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj81);

  }

  @Test
  public void test220() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test220"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    ds.Pilha pilha4 = new ds.Pilha();
    int i5 = pilha4.tamanho();
    pilha4.empilha((java.lang.Object)"hi!");
    java.lang.Object obj8 = pilha4.desempilha();
    pilha4.empilha((java.lang.Object)'4');
    pilha4.empilha((java.lang.Object)"hi!");
    pilha0.empilha((java.lang.Object)pilha4);
    boolean b14 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test221() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test221"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    java.lang.Object obj9 = pilha0.desempilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)1);
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    pilha10.empilha((java.lang.Object)i20);
    pilha10.empilha((java.lang.Object)'4');
    int i24 = pilha10.tamanho();
    pilha0.empilha((java.lang.Object)pilha10);
    java.lang.Object obj26 = pilha0.desempilha();
    int i27 = pilha0.tamanho();
    boolean b28 = pilha0.vazia();
    int i29 = pilha0.tamanho();
    int i30 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100.0d+ "'", obj9.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 2);

  }

  @Test
  public void test222() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test222"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    boolean b7 = pilha0.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha8);
    boolean b15 = pilha8.vazia();
    boolean b16 = pilha8.vazia();
    int i17 = pilha8.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 1);

  }

  @Test
  public void test223() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test223"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    int i8 = pilha0.tamanho();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    int i15 = pilha9.tamanho();
    int i16 = pilha9.tamanho();
    java.lang.Object obj17 = pilha9.desempilha();
    pilha0.empilha((java.lang.Object)pilha9);
    int i19 = pilha9.tamanho();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    pilha20.empilha((java.lang.Object)"hi!");
    java.lang.Object obj24 = null;
    pilha20.empilha(obj24);
    int i26 = pilha20.tamanho();
    java.lang.Object obj27 = pilha20.desempilha();
    java.lang.Object obj28 = pilha20.desempilha();
    ds.Pilha pilha29 = new ds.Pilha();
    ds.Pilha pilha30 = new ds.Pilha();
    int i31 = pilha30.tamanho();
    boolean b32 = pilha30.vazia();
    int i33 = pilha30.tamanho();
    pilha29.empilha((java.lang.Object)pilha30);
    pilha20.empilha((java.lang.Object)pilha30);
    ds.Pilha pilha36 = new ds.Pilha();
    boolean b37 = pilha36.vazia();
    int i38 = pilha36.tamanho();
    int i39 = pilha36.tamanho();
    int i40 = pilha36.tamanho();
    pilha30.empilha((java.lang.Object)i40);
    pilha9.empilha((java.lang.Object)pilha30);
    java.lang.Object obj43 = pilha9.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj28 + "' != '" + "hi!"+ "'", obj28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj43);

  }

  @Test
  public void test224() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test224"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    java.lang.Object obj9 = pilha0.desempilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    int i21 = pilha17.tamanho();
    pilha17.empilha((java.lang.Object)(byte)10);
    pilha10.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj25 = pilha10.desempilha();
    java.lang.Object obj26 = pilha10.desempilha();
    boolean b27 = pilha10.vazia();
    int i28 = pilha10.tamanho();
    int i29 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)(byte)(-1));
    pilha0.empilha((java.lang.Object)pilha10);
    int i33 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100.0d+ "'", obj9.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (byte)10+ "'", obj25.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte)10+ "'", obj26.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 3);

  }

  @Test
  public void test225() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test225"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)10.0d);
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    boolean b15 = pilha9.vazia();
    pilha9.empilha((java.lang.Object)(short)1);
    boolean b18 = pilha9.vazia();
    java.lang.Object obj19 = pilha9.desempilha();
    pilha9.empilha((java.lang.Object)100.0f);
    int i22 = pilha9.tamanho();
    pilha0.empilha((java.lang.Object)i22);
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    boolean b26 = pilha24.vazia();
    int i27 = pilha24.tamanho();
    int i28 = pilha24.tamanho();
    pilha24.empilha((java.lang.Object)1);
    boolean b31 = pilha24.vazia();
    ds.Pilha pilha32 = new ds.Pilha();
    ds.Pilha pilha33 = new ds.Pilha();
    int i34 = pilha33.tamanho();
    boolean b35 = pilha33.vazia();
    int i36 = pilha33.tamanho();
    pilha32.empilha((java.lang.Object)pilha33);
    pilha24.empilha((java.lang.Object)pilha32);
    ds.Pilha pilha39 = new ds.Pilha();
    pilha39.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha42 = new ds.Pilha();
    int i43 = pilha42.tamanho();
    pilha42.empilha((java.lang.Object)"hi!");
    java.lang.Object obj46 = pilha42.desempilha();
    pilha42.empilha((java.lang.Object)'4');
    pilha39.empilha((java.lang.Object)pilha42);
    ds.Pilha pilha50 = new ds.Pilha();
    int i51 = pilha50.tamanho();
    pilha50.empilha((java.lang.Object)"hi!");
    java.lang.Object obj54 = pilha50.desempilha();
    pilha50.empilha((java.lang.Object)'4');
    pilha42.empilha((java.lang.Object)'4');
    pilha24.empilha((java.lang.Object)pilha42);
    pilha0.empilha((java.lang.Object)pilha24);
    int i60 = pilha0.tamanho();
    boolean b61 = pilha0.vazia();
    java.lang.Object obj62 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short)1+ "'", obj19.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj46 + "' != '" + "hi!"+ "'", obj46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj54 + "' != '" + "hi!"+ "'", obj54.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i60 == 4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj62);

  }

  @Test
  public void test226() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test226"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    java.lang.Object obj16 = pilha0.desempilha();
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    int i21 = pilha17.tamanho();
    pilha17.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    boolean b26 = pilha24.vazia();
    int i27 = pilha24.tamanho();
    int i28 = pilha24.tamanho();
    pilha24.empilha((java.lang.Object)(byte)10);
    pilha17.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj32 = pilha17.desempilha();
    java.lang.Object obj33 = pilha17.desempilha();
    boolean b34 = pilha17.vazia();
    int i35 = pilha17.tamanho();
    pilha0.empilha((java.lang.Object)pilha17);
    int i37 = pilha17.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (byte)10+ "'", obj16.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte)10+ "'", obj32.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte)10+ "'", obj33.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);

  }

  @Test
  public void test227() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test227"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    pilha9.empilha((java.lang.Object)100.0d);
    int i17 = pilha9.tamanho();
    java.lang.Object obj18 = pilha9.desempilha();
    pilha0.empilha(obj18);
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    int i22 = pilha20.tamanho();
    int i23 = pilha20.tamanho();
    pilha0.empilha((java.lang.Object)pilha20);
    ds.Pilha pilha25 = new ds.Pilha();
    ds.Pilha pilha26 = new ds.Pilha();
    int i27 = pilha26.tamanho();
    boolean b28 = pilha26.vazia();
    int i29 = pilha26.tamanho();
    pilha25.empilha((java.lang.Object)pilha26);
    boolean b31 = pilha25.vazia();
    pilha25.empilha((java.lang.Object)(short)1);
    boolean b34 = pilha25.vazia();
    java.lang.Object obj35 = pilha25.desempilha();
    pilha25.empilha((java.lang.Object)100.0f);
    int i38 = pilha25.tamanho();
    ds.Pilha pilha39 = new ds.Pilha();
    ds.Pilha pilha40 = new ds.Pilha();
    int i41 = pilha40.tamanho();
    boolean b42 = pilha40.vazia();
    int i43 = pilha40.tamanho();
    pilha39.empilha((java.lang.Object)pilha40);
    boolean b45 = pilha39.vazia();
    pilha39.empilha((java.lang.Object)(short)1);
    boolean b48 = pilha39.vazia();
    java.lang.Object obj49 = pilha39.desempilha();
    pilha39.empilha((java.lang.Object)100.0f);
    pilha25.empilha((java.lang.Object)pilha39);
    java.lang.Object obj53 = pilha25.desempilha();
    pilha0.empilha((java.lang.Object)pilha25);
    int i55 = pilha0.tamanho();
    boolean b56 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 100.0d+ "'", obj18.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short)1+ "'", obj35.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short)1+ "'", obj49.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);

  }

  @Test
  public void test228() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test228"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    int i5 = pilha0.tamanho();
    boolean b6 = pilha0.vazia();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj7 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);

  }

  @Test
  public void test229() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test229"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)10.0d);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    boolean b13 = pilha9.vazia();
    int i14 = pilha9.tamanho();
    ds.Pilha pilha15 = new ds.Pilha();
    boolean b16 = pilha15.vazia();
    int i17 = pilha15.tamanho();
    boolean b18 = pilha15.vazia();
    int i19 = pilha15.tamanho();
    int i20 = pilha15.tamanho();
    boolean b21 = pilha15.vazia();
    pilha9.empilha((java.lang.Object)pilha15);
    pilha0.empilha((java.lang.Object)pilha15);
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    pilha24.empilha((java.lang.Object)"hi!");
    java.lang.Object obj28 = null;
    pilha24.empilha(obj28);
    int i30 = pilha24.tamanho();
    int i31 = pilha24.tamanho();
    java.lang.Object obj32 = pilha24.desempilha();
    java.lang.Object obj33 = pilha24.desempilha();
    pilha15.empilha(obj33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + "hi!"+ "'", obj33.equals("hi!"));

  }

  @Test
  public void test230() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test230"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)100.0f);
    boolean b13 = pilha0.vazia();
    java.lang.Object obj14 = pilha0.desempilha();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha22 = new ds.Pilha();
    int i23 = pilha22.tamanho();
    boolean b24 = pilha22.vazia();
    int i25 = pilha22.tamanho();
    int i26 = pilha22.tamanho();
    pilha22.empilha((java.lang.Object)(byte)10);
    pilha15.empilha((java.lang.Object)(byte)10);
    boolean b30 = pilha15.vazia();
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    pilha31.empilha((java.lang.Object)"hi!");
    java.lang.Object obj35 = null;
    pilha31.empilha(obj35);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)"hi!");
    java.lang.Object obj41 = null;
    pilha37.empilha(obj41);
    int i43 = pilha37.tamanho();
    int i44 = pilha37.tamanho();
    ds.Pilha pilha45 = new ds.Pilha();
    ds.Pilha pilha46 = new ds.Pilha();
    int i47 = pilha46.tamanho();
    boolean b48 = pilha46.vazia();
    int i49 = pilha46.tamanho();
    pilha45.empilha((java.lang.Object)pilha46);
    int i51 = pilha45.tamanho();
    int i52 = pilha45.tamanho();
    pilha37.empilha((java.lang.Object)pilha45);
    pilha31.empilha((java.lang.Object)pilha37);
    pilha15.empilha((java.lang.Object)pilha31);
    int i56 = pilha31.tamanho();
    pilha0.empilha((java.lang.Object)i56);
    boolean b58 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj14 + "' != '" + 100.0f+ "'", obj14.equals(100.0f));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i56 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);

  }

  @Test
  public void test231() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test231"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    pilha9.empilha((java.lang.Object)100.0d);
    int i17 = pilha9.tamanho();
    java.lang.Object obj18 = pilha9.desempilha();
    pilha0.empilha(obj18);
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    int i22 = pilha20.tamanho();
    int i23 = pilha20.tamanho();
    pilha0.empilha((java.lang.Object)pilha20);
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)"hi!");
    boolean b29 = pilha25.vazia();
    pilha20.empilha((java.lang.Object)pilha25);
    int i31 = pilha25.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 100.0d+ "'", obj18.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 1);

  }

  @Test
  public void test232() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test232"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    ds.Pilha pilha3 = new ds.Pilha();
    boolean b4 = pilha3.vazia();
    int i5 = pilha3.tamanho();
    boolean b6 = pilha3.vazia();
    pilha0.empilha((java.lang.Object)b6);
    ds.Pilha pilha8 = new ds.Pilha();
    int i9 = pilha8.tamanho();
    boolean b10 = pilha8.vazia();
    int i11 = pilha8.tamanho();
    int i12 = pilha8.tamanho();
    pilha8.empilha((java.lang.Object)(byte)10);
    pilha8.empilha((java.lang.Object)10.0d);
    ds.Pilha pilha17 = new ds.Pilha();
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    pilha17.empilha((java.lang.Object)pilha18);
    boolean b23 = pilha17.vazia();
    pilha17.empilha((java.lang.Object)(short)1);
    boolean b26 = pilha17.vazia();
    java.lang.Object obj27 = pilha17.desempilha();
    pilha17.empilha((java.lang.Object)100.0f);
    int i30 = pilha17.tamanho();
    pilha8.empilha((java.lang.Object)i30);
    ds.Pilha pilha32 = new ds.Pilha();
    int i33 = pilha32.tamanho();
    boolean b34 = pilha32.vazia();
    int i35 = pilha32.tamanho();
    int i36 = pilha32.tamanho();
    pilha32.empilha((java.lang.Object)1);
    boolean b39 = pilha32.vazia();
    ds.Pilha pilha40 = new ds.Pilha();
    ds.Pilha pilha41 = new ds.Pilha();
    int i42 = pilha41.tamanho();
    boolean b43 = pilha41.vazia();
    int i44 = pilha41.tamanho();
    pilha40.empilha((java.lang.Object)pilha41);
    pilha32.empilha((java.lang.Object)pilha40);
    ds.Pilha pilha47 = new ds.Pilha();
    pilha47.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha50 = new ds.Pilha();
    int i51 = pilha50.tamanho();
    pilha50.empilha((java.lang.Object)"hi!");
    java.lang.Object obj54 = pilha50.desempilha();
    pilha50.empilha((java.lang.Object)'4');
    pilha47.empilha((java.lang.Object)pilha50);
    ds.Pilha pilha58 = new ds.Pilha();
    int i59 = pilha58.tamanho();
    pilha58.empilha((java.lang.Object)"hi!");
    java.lang.Object obj62 = pilha58.desempilha();
    pilha58.empilha((java.lang.Object)'4');
    pilha50.empilha((java.lang.Object)'4');
    pilha32.empilha((java.lang.Object)pilha50);
    pilha8.empilha((java.lang.Object)pilha32);
    int i68 = pilha8.tamanho();
    boolean b69 = pilha8.vazia();
    pilha0.empilha((java.lang.Object)b69);
    boolean b71 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short)1+ "'", obj27.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj54 + "' != '" + "hi!"+ "'", obj54.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj62 + "' != '" + "hi!"+ "'", obj62.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);

  }

  @Test
  public void test233() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test233"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = pilha3.desempilha();
    pilha3.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha3);
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)"hi!");
    java.lang.Object obj15 = pilha11.desempilha();
    pilha11.empilha((java.lang.Object)'4');
    pilha3.empilha((java.lang.Object)'4');
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    boolean b25 = pilha19.vazia();
    pilha3.empilha((java.lang.Object)b25);
    int i27 = pilha3.tamanho();
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)"hi!");
    java.lang.Object obj32 = pilha28.desempilha();
    int i33 = pilha28.tamanho();
    boolean b34 = pilha28.vazia();
    pilha3.empilha((java.lang.Object)b34);
    int i36 = pilha3.tamanho();
    boolean b37 = pilha3.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + "hi!"+ "'", obj7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + "hi!"+ "'", obj15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + "hi!"+ "'", obj32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);

  }

  @Test
  public void test234() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test234"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    boolean b3 = pilha0.vazia();
    ds.Pilha pilha4 = new ds.Pilha();
    int i5 = pilha4.tamanho();
    boolean b6 = pilha4.vazia();
    int i7 = pilha4.tamanho();
    int i8 = pilha4.tamanho();
    pilha4.empilha((java.lang.Object)1);
    pilha4.empilha((java.lang.Object)3);
    ds.Pilha pilha13 = new ds.Pilha();
    int i14 = pilha13.tamanho();
    pilha13.empilha((java.lang.Object)"hi!");
    java.lang.Object obj17 = null;
    pilha13.empilha(obj17);
    pilha13.empilha((java.lang.Object)100.0d);
    int i21 = pilha13.tamanho();
    java.lang.Object obj22 = pilha13.desempilha();
    pilha4.empilha(obj22);
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    int i26 = pilha24.tamanho();
    int i27 = pilha24.tamanho();
    pilha4.empilha((java.lang.Object)pilha24);
    pilha0.empilha((java.lang.Object)pilha24);
    int i30 = pilha24.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj22 + "' != '" + 100.0d+ "'", obj22.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);

  }

  @Test
  public void test235() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test235"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    int i6 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1.0d);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)'a');
    pilha0.empilha((java.lang.Object)pilha9);
    java.lang.Object obj16 = pilha9.desempilha();
    java.lang.Object obj17 = null;
    pilha9.empilha(obj17);
    boolean b19 = pilha9.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 'a'+ "'", obj16.equals('a'));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test236() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test236"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    boolean b4 = pilha0.vazia();
    ds.Pilha pilha5 = new ds.Pilha();
    int i6 = pilha5.tamanho();
    boolean b7 = pilha5.vazia();
    int i8 = pilha5.tamanho();
    int i9 = pilha5.tamanho();
    pilha5.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha12 = new ds.Pilha();
    int i13 = pilha12.tamanho();
    boolean b14 = pilha12.vazia();
    int i15 = pilha12.tamanho();
    int i16 = pilha12.tamanho();
    pilha12.empilha((java.lang.Object)(byte)10);
    pilha5.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj20 = pilha5.desempilha();
    boolean b21 = pilha5.vazia();
    pilha0.empilha((java.lang.Object)pilha5);
    java.lang.Object obj23 = pilha0.desempilha();
    boolean b24 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (byte)10+ "'", obj20.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test237() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test237"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    pilha1.empilha((java.lang.Object)100);
    ds.Pilha pilha8 = new ds.Pilha();
    boolean b9 = pilha8.vazia();
    int i10 = pilha8.tamanho();
    int i11 = pilha8.tamanho();
    int i12 = pilha8.tamanho();
    int i13 = pilha8.tamanho();
    pilha1.empilha((java.lang.Object)pilha8);
    boolean b15 = pilha1.vazia();
    boolean b16 = pilha1.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test238() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test238"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    boolean b18 = pilha0.vazia();
    boolean b19 = pilha0.vazia();
    int i20 = pilha0.tamanho();
    int i21 = pilha0.tamanho();
    boolean b22 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (byte)10+ "'", obj17.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);

  }

  @Test
  public void test239() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test239"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    boolean b3 = pilha0.vazia();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    int i6 = pilha5.tamanho();
    pilha5.empilha((java.lang.Object)"hi!");
    java.lang.Object obj9 = null;
    pilha5.empilha(obj9);
    java.lang.Object obj11 = pilha5.desempilha();
    pilha0.empilha((java.lang.Object)pilha5);
    java.lang.Object obj13 = pilha0.desempilha();
    boolean b14 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);

  }

  @Test
  public void test240() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test240"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)100.0f);
    boolean b13 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)"hi!");
    boolean b16 = pilha0.vazia();
    int i17 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 3);

  }

  @Test
  public void test241() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test241"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    int i5 = pilha0.tamanho();
    int i6 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);

  }

  @Test
  public void test242() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test242"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    int i9 = pilha0.tamanho();
    boolean b10 = pilha0.vazia();
    int i11 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 2);

  }

  @Test
  public void test243() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test243"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    boolean b5 = pilha0.vazia();
    boolean b6 = pilha0.vazia();
    ds.Pilha pilha7 = new ds.Pilha();
    ds.Pilha pilha8 = new ds.Pilha();
    int i9 = pilha8.tamanho();
    boolean b10 = pilha8.vazia();
    int i11 = pilha8.tamanho();
    pilha7.empilha((java.lang.Object)pilha8);
    int i13 = pilha7.tamanho();
    java.lang.Object obj14 = pilha7.desempilha();
    pilha0.empilha((java.lang.Object)pilha7);
    boolean b16 = pilha7.vazia();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj17 = pilha7.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);

  }

  @Test
  public void test244() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test244"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)100.0f);
    boolean b13 = pilha0.vazia();
    java.lang.Object obj14 = pilha0.desempilha();
    int i15 = pilha0.tamanho();
    java.lang.Object obj16 = pilha0.desempilha();
    int i17 = pilha0.tamanho();
    ds.Pilha pilha18 = new ds.Pilha();
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    boolean b21 = pilha19.vazia();
    int i22 = pilha19.tamanho();
    pilha18.empilha((java.lang.Object)pilha19);
    boolean b24 = pilha18.vazia();
    pilha18.empilha((java.lang.Object)(short)1);
    boolean b27 = pilha18.vazia();
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)"hi!");
    java.lang.Object obj32 = null;
    pilha28.empilha(obj32);
    int i34 = pilha28.tamanho();
    int i35 = pilha28.tamanho();
    java.lang.Object obj36 = pilha28.desempilha();
    pilha18.empilha((java.lang.Object)pilha28);
    java.lang.Object obj38 = pilha18.desempilha();
    pilha0.empilha(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj14 + "' != '" + 100.0f+ "'", obj14.equals(100.0f));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj38);

  }

  @Test
  public void test245() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test245"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    int i16 = pilha11.tamanho();
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    int i19 = pilha17.tamanho();
    int i20 = pilha17.tamanho();
    pilha11.empilha((java.lang.Object)pilha17);
    pilha0.empilha((java.lang.Object)pilha17);
    boolean b23 = pilha17.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + "hi!"+ "'", obj9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);

  }

  @Test
  public void test246() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test246"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    boolean b9 = pilha0.vazia();
    int i10 = pilha0.tamanho();
    int i11 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 3);

  }

  @Test
  public void test247() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test247"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    pilha9.empilha((java.lang.Object)100.0d);
    int i17 = pilha9.tamanho();
    java.lang.Object obj18 = pilha9.desempilha();
    pilha0.empilha(obj18);
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    int i22 = pilha20.tamanho();
    int i23 = pilha20.tamanho();
    pilha0.empilha((java.lang.Object)pilha20);
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)"hi!");
    boolean b29 = pilha25.vazia();
    pilha20.empilha((java.lang.Object)pilha25);
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    boolean b33 = pilha31.vazia();
    int i34 = pilha31.tamanho();
    int i35 = pilha31.tamanho();
    int i36 = pilha31.tamanho();
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)"hi!");
    java.lang.Object obj41 = pilha37.desempilha();
    pilha37.empilha((java.lang.Object)'4');
    pilha37.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha46 = new ds.Pilha();
    int i47 = pilha46.tamanho();
    boolean b48 = pilha46.vazia();
    int i49 = pilha46.tamanho();
    int i50 = pilha46.tamanho();
    pilha46.empilha((java.lang.Object)(byte)10);
    pilha46.empilha((java.lang.Object)10.0d);
    java.lang.Object obj55 = pilha46.desempilha();
    ds.Pilha pilha56 = new ds.Pilha();
    int i57 = pilha56.tamanho();
    boolean b58 = pilha56.vazia();
    int i59 = pilha56.tamanho();
    int i60 = pilha56.tamanho();
    pilha56.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj63 = pilha56.desempilha();
    int i64 = pilha56.tamanho();
    pilha46.empilha((java.lang.Object)i64);
    pilha37.empilha((java.lang.Object)i64);
    pilha31.empilha((java.lang.Object)pilha37);
    ds.Pilha pilha68 = new ds.Pilha();
    ds.Pilha pilha69 = new ds.Pilha();
    int i70 = pilha69.tamanho();
    boolean b71 = pilha69.vazia();
    int i72 = pilha69.tamanho();
    pilha68.empilha((java.lang.Object)pilha69);
    boolean b74 = pilha68.vazia();
    pilha68.empilha((java.lang.Object)(short)1);
    boolean b77 = pilha68.vazia();
    java.lang.Object obj78 = pilha68.desempilha();
    java.lang.Object obj79 = pilha68.desempilha();
    pilha31.empilha(obj79);
    java.lang.Object obj81 = pilha31.desempilha();
    pilha20.empilha(obj81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 100.0d+ "'", obj18.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj41 + "' != '" + "hi!"+ "'", obj41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i50 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj55 + "' != '" + 10.0d+ "'", obj55.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i57 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i60 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (byte)10+ "'", obj63.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i64 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i70 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i72 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj78 + "' != '" + (short)1+ "'", obj78.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj81);

  }

  @Test
  public void test248() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test248"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)100L);
    pilha0.empilha((java.lang.Object)100);
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    int i11 = pilha0.tamanho();
    ds.Pilha pilha12 = new ds.Pilha();
    int i13 = pilha12.tamanho();
    pilha12.empilha((java.lang.Object)"hi!");
    java.lang.Object obj16 = pilha12.desempilha();
    boolean b17 = pilha12.vazia();
    pilha0.empilha((java.lang.Object)pilha12);
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    pilha19.empilha((java.lang.Object)"hi!");
    java.lang.Object obj23 = pilha19.desempilha();
    pilha19.empilha((java.lang.Object)'4');
    boolean b26 = pilha19.vazia();
    pilha0.empilha((java.lang.Object)pilha19);
    boolean b28 = pilha19.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100+ "'", obj9.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj16 + "' != '" + "hi!"+ "'", obj16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj23 + "' != '" + "hi!"+ "'", obj23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test249() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test249"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    ds.Pilha pilha6 = new ds.Pilha();
    boolean b7 = pilha6.vazia();
    boolean b8 = pilha6.vazia();
    pilha0.empilha((java.lang.Object)b8);
    int i10 = pilha0.tamanho();
    boolean b11 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test250() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test250"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    ds.Pilha pilha4 = new ds.Pilha();
    int i5 = pilha4.tamanho();
    pilha4.empilha((java.lang.Object)"hi!");
    java.lang.Object obj8 = null;
    pilha4.empilha(obj8);
    int i10 = pilha4.tamanho();
    int i11 = pilha4.tamanho();
    java.lang.Object obj12 = pilha4.desempilha();
    java.lang.Object obj13 = pilha4.desempilha();
    boolean b14 = pilha4.vazia();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    int i20 = pilha15.tamanho();
    ds.Pilha pilha21 = new ds.Pilha();
    int i22 = pilha21.tamanho();
    int i23 = pilha21.tamanho();
    int i24 = pilha21.tamanho();
    pilha15.empilha((java.lang.Object)pilha21);
    pilha4.empilha((java.lang.Object)pilha21);
    int i27 = pilha4.tamanho();
    pilha0.empilha((java.lang.Object)pilha4);
    java.lang.Object obj29 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj13 + "' != '" + "hi!"+ "'", obj13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj29);

  }

  @Test
  public void test251() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test251"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)10.0d);
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    boolean b15 = pilha9.vazia();
    pilha9.empilha((java.lang.Object)(short)1);
    boolean b18 = pilha9.vazia();
    java.lang.Object obj19 = pilha9.desempilha();
    pilha9.empilha((java.lang.Object)100.0f);
    int i22 = pilha9.tamanho();
    pilha0.empilha((java.lang.Object)i22);
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    boolean b26 = pilha24.vazia();
    int i27 = pilha24.tamanho();
    int i28 = pilha24.tamanho();
    pilha24.empilha((java.lang.Object)1);
    boolean b31 = pilha24.vazia();
    ds.Pilha pilha32 = new ds.Pilha();
    ds.Pilha pilha33 = new ds.Pilha();
    int i34 = pilha33.tamanho();
    boolean b35 = pilha33.vazia();
    int i36 = pilha33.tamanho();
    pilha32.empilha((java.lang.Object)pilha33);
    pilha24.empilha((java.lang.Object)pilha32);
    ds.Pilha pilha39 = new ds.Pilha();
    pilha39.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha42 = new ds.Pilha();
    int i43 = pilha42.tamanho();
    pilha42.empilha((java.lang.Object)"hi!");
    java.lang.Object obj46 = pilha42.desempilha();
    pilha42.empilha((java.lang.Object)'4');
    pilha39.empilha((java.lang.Object)pilha42);
    ds.Pilha pilha50 = new ds.Pilha();
    int i51 = pilha50.tamanho();
    pilha50.empilha((java.lang.Object)"hi!");
    java.lang.Object obj54 = pilha50.desempilha();
    pilha50.empilha((java.lang.Object)'4');
    pilha42.empilha((java.lang.Object)'4');
    pilha24.empilha((java.lang.Object)pilha42);
    pilha0.empilha((java.lang.Object)pilha24);
    int i60 = pilha0.tamanho();
    boolean b61 = pilha0.vazia();
    boolean b62 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short)1+ "'", obj19.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj46 + "' != '" + "hi!"+ "'", obj46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj54 + "' != '" + "hi!"+ "'", obj54.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i60 == 4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);

  }

  @Test
  public void test252() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test252"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)100L);
    int i7 = pilha0.tamanho();
    boolean b8 = pilha0.vazia();
    boolean b9 = pilha0.vazia();
    int i10 = pilha0.tamanho();
    int i11 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 3);

  }

  @Test
  public void test253() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test253"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)1);
    boolean b18 = pilha11.vazia();
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    pilha11.empilha((java.lang.Object)pilha19);
    ds.Pilha pilha26 = new ds.Pilha();
    pilha26.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    pilha29.empilha((java.lang.Object)"hi!");
    java.lang.Object obj33 = pilha29.desempilha();
    pilha29.empilha((java.lang.Object)'4');
    pilha26.empilha((java.lang.Object)pilha29);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)"hi!");
    java.lang.Object obj41 = pilha37.desempilha();
    pilha37.empilha((java.lang.Object)'4');
    pilha29.empilha((java.lang.Object)'4');
    pilha11.empilha((java.lang.Object)pilha29);
    pilha0.empilha((java.lang.Object)pilha11);
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    pilha47.empilha((java.lang.Object)"hi!");
    java.lang.Object obj51 = null;
    pilha47.empilha(obj51);
    pilha47.empilha((java.lang.Object)100.0d);
    java.lang.Object obj55 = pilha47.desempilha();
    pilha11.empilha((java.lang.Object)pilha47);
    java.lang.Object obj57 = pilha47.desempilha();
    ds.Pilha pilha58 = new ds.Pilha();
    ds.Pilha pilha59 = new ds.Pilha();
    int i60 = pilha59.tamanho();
    boolean b61 = pilha59.vazia();
    int i62 = pilha59.tamanho();
    pilha58.empilha((java.lang.Object)pilha59);
    int i64 = pilha59.tamanho();
    boolean b65 = pilha59.vazia();
    pilha47.empilha((java.lang.Object)b65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + "hi!"+ "'", obj33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj41 + "' != '" + "hi!"+ "'", obj41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj55 + "' != '" + 100.0d+ "'", obj55.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i60 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i62 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i64 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);

  }

  @Test
  public void test254() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test254"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    pilha1.empilha((java.lang.Object)100);
    java.lang.Object obj8 = pilha1.desempilha();
    boolean b9 = pilha1.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + 100+ "'", obj8.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);

  }

  @Test
  public void test255() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test255"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    boolean b5 = pilha3.vazia();
    int i6 = pilha3.tamanho();
    int i7 = pilha3.tamanho();
    int i8 = pilha3.tamanho();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = pilha9.desempilha();
    pilha9.empilha((java.lang.Object)'4');
    pilha9.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    int i22 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)(byte)10);
    pilha18.empilha((java.lang.Object)10.0d);
    java.lang.Object obj27 = pilha18.desempilha();
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    boolean b30 = pilha28.vazia();
    int i31 = pilha28.tamanho();
    int i32 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj35 = pilha28.desempilha();
    int i36 = pilha28.tamanho();
    pilha18.empilha((java.lang.Object)i36);
    pilha9.empilha((java.lang.Object)i36);
    pilha3.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha3);
    int i41 = pilha3.tamanho();
    java.lang.Object obj42 = pilha3.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj13 + "' != '" + "hi!"+ "'", obj13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj27 + "' != '" + 10.0d+ "'", obj27.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte)10+ "'", obj35.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj42);

  }

  @Test
  public void test256() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test256"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    int i6 = pilha1.tamanho();
    boolean b7 = pilha1.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    int i9 = pilha8.tamanho();
    pilha8.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj12 = null;
    pilha8.empilha(obj12);
    int i14 = pilha8.tamanho();
    int i15 = pilha8.tamanho();
    pilha1.empilha((java.lang.Object)pilha8);
    java.lang.Object obj17 = pilha8.desempilha();
    int i18 = pilha8.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 1);

  }

  @Test
  public void test257() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test257"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    int i14 = pilha8.tamanho();
    int i15 = pilha8.tamanho();
    pilha0.empilha((java.lang.Object)pilha8);
    int i17 = pilha0.tamanho();
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    int i22 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    int i29 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)(byte)10);
    pilha18.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj33 = pilha18.desempilha();
    java.lang.Object obj34 = pilha18.desempilha();
    ds.Pilha pilha35 = new ds.Pilha();
    int i36 = pilha35.tamanho();
    boolean b37 = pilha35.vazia();
    int i38 = pilha35.tamanho();
    int i39 = pilha35.tamanho();
    pilha35.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha42 = new ds.Pilha();
    int i43 = pilha42.tamanho();
    boolean b44 = pilha42.vazia();
    int i45 = pilha42.tamanho();
    int i46 = pilha42.tamanho();
    pilha42.empilha((java.lang.Object)(byte)10);
    pilha35.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj50 = pilha35.desempilha();
    java.lang.Object obj51 = pilha35.desempilha();
    boolean b52 = pilha35.vazia();
    int i53 = pilha35.tamanho();
    pilha18.empilha((java.lang.Object)pilha35);
    pilha0.empilha((java.lang.Object)pilha18);
    int i56 = pilha18.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte)10+ "'", obj33.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (byte)10+ "'", obj34.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i46 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (byte)10+ "'", obj50.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (byte)10+ "'", obj51.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i56 == 1);

  }

  @Test
  public void test258() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test258"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    pilha0.empilha((java.lang.Object)i10);
    boolean b12 = pilha0.vazia();
    java.lang.Object obj13 = pilha0.desempilha();
    java.lang.Object obj14 = pilha0.desempilha();
    boolean b15 = pilha0.vazia();
    boolean b16 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj13 + "' != '" + 0+ "'", obj13.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj14 + "' != '" + 1+ "'", obj14.equals(1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);

  }

  @Test
  public void test259() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test259"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    boolean b8 = pilha0.vazia();
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    boolean b11 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test260() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test260"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    boolean b8 = pilha6.vazia();
    int i9 = pilha6.tamanho();
    pilha5.empilha((java.lang.Object)pilha6);
    boolean b11 = pilha5.vazia();
    pilha5.empilha((java.lang.Object)(short)1);
    pilha0.empilha((java.lang.Object)(short)1);
    ds.Pilha pilha15 = new ds.Pilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha15.empilha((java.lang.Object)pilha16);
    int i21 = pilha15.tamanho();
    ds.Pilha pilha22 = new ds.Pilha();
    ds.Pilha pilha23 = new ds.Pilha();
    int i24 = pilha23.tamanho();
    boolean b25 = pilha23.vazia();
    int i26 = pilha23.tamanho();
    pilha22.empilha((java.lang.Object)pilha23);
    boolean b28 = pilha22.vazia();
    pilha22.empilha((java.lang.Object)(short)1);
    pilha15.empilha((java.lang.Object)pilha22);
    pilha0.empilha((java.lang.Object)pilha22);
    java.lang.Object obj33 = pilha22.desempilha();
    int i34 = pilha22.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (short)1+ "'", obj33.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 1);

  }

  @Test
  public void test261() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test261"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    int i8 = pilha0.tamanho();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    boolean b15 = pilha9.vazia();
    pilha9.empilha((java.lang.Object)(short)1);
    boolean b18 = pilha9.vazia();
    java.lang.Object obj19 = pilha9.desempilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    int i24 = pilha20.tamanho();
    pilha20.empilha((java.lang.Object)1);
    boolean b27 = pilha20.vazia();
    ds.Pilha pilha28 = new ds.Pilha();
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    boolean b31 = pilha29.vazia();
    int i32 = pilha29.tamanho();
    pilha28.empilha((java.lang.Object)pilha29);
    pilha20.empilha((java.lang.Object)pilha28);
    ds.Pilha pilha35 = new ds.Pilha();
    pilha35.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha38 = new ds.Pilha();
    int i39 = pilha38.tamanho();
    pilha38.empilha((java.lang.Object)"hi!");
    java.lang.Object obj42 = pilha38.desempilha();
    pilha38.empilha((java.lang.Object)'4');
    pilha35.empilha((java.lang.Object)pilha38);
    ds.Pilha pilha46 = new ds.Pilha();
    int i47 = pilha46.tamanho();
    pilha46.empilha((java.lang.Object)"hi!");
    java.lang.Object obj50 = pilha46.desempilha();
    pilha46.empilha((java.lang.Object)'4');
    pilha38.empilha((java.lang.Object)'4');
    pilha20.empilha((java.lang.Object)pilha38);
    pilha9.empilha((java.lang.Object)pilha20);
    int i56 = pilha9.tamanho();
    pilha0.empilha((java.lang.Object)i56);
    int i58 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short)1+ "'", obj19.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj42 + "' != '" + "hi!"+ "'", obj42.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj50 + "' != '" + "hi!"+ "'", obj50.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i56 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 2);

  }

  @Test
  public void test262() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test262"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    ds.Pilha pilha10 = new ds.Pilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    pilha10.empilha((java.lang.Object)pilha11);
    boolean b16 = pilha10.vazia();
    pilha10.empilha((java.lang.Object)(short)1);
    boolean b19 = pilha10.vazia();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    pilha20.empilha((java.lang.Object)"hi!");
    java.lang.Object obj24 = null;
    pilha20.empilha(obj24);
    int i26 = pilha20.tamanho();
    int i27 = pilha20.tamanho();
    java.lang.Object obj28 = pilha20.desempilha();
    pilha10.empilha((java.lang.Object)pilha20);
    java.lang.Object obj30 = pilha10.desempilha();
    pilha0.empilha(obj30);
    ds.Pilha pilha32 = new ds.Pilha();
    int i33 = pilha32.tamanho();
    boolean b34 = pilha32.vazia();
    int i35 = pilha32.tamanho();
    int i36 = pilha32.tamanho();
    pilha32.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha39 = new ds.Pilha();
    int i40 = pilha39.tamanho();
    boolean b41 = pilha39.vazia();
    int i42 = pilha39.tamanho();
    int i43 = pilha39.tamanho();
    pilha39.empilha((java.lang.Object)(byte)10);
    pilha32.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj47 = pilha32.desempilha();
    java.lang.Object obj48 = pilha32.desempilha();
    boolean b49 = pilha32.vazia();
    pilha0.empilha((java.lang.Object)b49);
    int i51 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (byte)10+ "'", obj47.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj48 + "' != '" + (byte)10+ "'", obj48.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 4);

  }

  @Test
  public void test263() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test263"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    boolean b4 = pilha0.vazia();
    boolean b5 = pilha0.vazia();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)(byte)(-1));
    int i10 = pilha6.tamanho();
    int i11 = pilha6.tamanho();
    pilha0.empilha((java.lang.Object)pilha6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 1);

  }

  @Test
  public void test264() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test264"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    boolean b5 = pilha0.vazia();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    boolean b8 = pilha6.vazia();
    int i9 = pilha6.tamanho();
    int i10 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)(byte)10);
    pilha6.empilha((java.lang.Object)10.0d);
    java.lang.Object obj15 = pilha6.desempilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    int i20 = pilha16.tamanho();
    pilha16.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj23 = pilha16.desempilha();
    int i24 = pilha16.tamanho();
    pilha6.empilha((java.lang.Object)i24);
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha27 = new ds.Pilha();
    int i28 = pilha27.tamanho();
    pilha27.empilha((java.lang.Object)"hi!");
    java.lang.Object obj31 = null;
    pilha27.empilha(obj31);
    int i33 = pilha27.tamanho();
    int i34 = pilha27.tamanho();
    ds.Pilha pilha35 = new ds.Pilha();
    ds.Pilha pilha36 = new ds.Pilha();
    int i37 = pilha36.tamanho();
    boolean b38 = pilha36.vazia();
    int i39 = pilha36.tamanho();
    pilha35.empilha((java.lang.Object)pilha36);
    int i41 = pilha35.tamanho();
    int i42 = pilha35.tamanho();
    pilha27.empilha((java.lang.Object)pilha35);
    int i44 = pilha27.tamanho();
    int i45 = pilha27.tamanho();
    pilha0.empilha((java.lang.Object)pilha27);
    boolean b47 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + 10.0d+ "'", obj15.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (byte)10+ "'", obj23.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);

  }

  @Test
  public void test265() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test265"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    boolean b5 = pilha3.vazia();
    int i6 = pilha3.tamanho();
    int i7 = pilha3.tamanho();
    int i8 = pilha3.tamanho();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = pilha9.desempilha();
    pilha9.empilha((java.lang.Object)'4');
    pilha9.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    int i22 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)(byte)10);
    pilha18.empilha((java.lang.Object)10.0d);
    java.lang.Object obj27 = pilha18.desempilha();
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    boolean b30 = pilha28.vazia();
    int i31 = pilha28.tamanho();
    int i32 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj35 = pilha28.desempilha();
    int i36 = pilha28.tamanho();
    pilha18.empilha((java.lang.Object)i36);
    pilha9.empilha((java.lang.Object)i36);
    pilha3.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha3);
    int i41 = pilha3.tamanho();
    ds.Pilha pilha42 = new ds.Pilha();
    int i43 = pilha42.tamanho();
    pilha42.empilha((java.lang.Object)"hi!");
    java.lang.Object obj46 = null;
    pilha42.empilha(obj46);
    int i48 = pilha42.tamanho();
    java.lang.Object obj49 = pilha42.desempilha();
    java.lang.Object obj50 = pilha42.desempilha();
    ds.Pilha pilha51 = new ds.Pilha();
    ds.Pilha pilha52 = new ds.Pilha();
    int i53 = pilha52.tamanho();
    boolean b54 = pilha52.vazia();
    int i55 = pilha52.tamanho();
    pilha51.empilha((java.lang.Object)pilha52);
    pilha42.empilha((java.lang.Object)pilha52);
    boolean b58 = pilha42.vazia();
    pilha42.empilha((java.lang.Object)' ');
    java.lang.Object obj61 = pilha42.desempilha();
    int i62 = pilha42.tamanho();
    ds.Pilha pilha63 = new ds.Pilha();
    int i64 = pilha63.tamanho();
    boolean b65 = pilha63.vazia();
    int i66 = pilha63.tamanho();
    int i67 = pilha63.tamanho();
    int i68 = pilha63.tamanho();
    int i69 = pilha63.tamanho();
    pilha63.empilha((java.lang.Object)1.0d);
    ds.Pilha pilha72 = new ds.Pilha();
    int i73 = pilha72.tamanho();
    boolean b74 = pilha72.vazia();
    int i75 = pilha72.tamanho();
    pilha72.empilha((java.lang.Object)'a');
    pilha63.empilha((java.lang.Object)pilha72);
    java.lang.Object obj79 = pilha63.desempilha();
    pilha42.empilha(obj79);
    pilha3.empilha(obj79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj13 + "' != '" + "hi!"+ "'", obj13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj27 + "' != '" + 10.0d+ "'", obj27.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte)10+ "'", obj35.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj50 + "' != '" + "hi!"+ "'", obj50.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj61 + "' != '" + ' '+ "'", obj61.equals(' '));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i64 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i66 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i67 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i69 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i73 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i75 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj79);

  }

  @Test
  public void test266() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test266"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    boolean b7 = pilha0.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha8);
    java.lang.Object obj15 = pilha0.desempilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    int i20 = pilha16.tamanho();
    int i21 = pilha16.tamanho();
    ds.Pilha pilha22 = new ds.Pilha();
    int i23 = pilha22.tamanho();
    pilha22.empilha((java.lang.Object)"hi!");
    java.lang.Object obj26 = pilha22.desempilha();
    pilha22.empilha((java.lang.Object)'4');
    pilha22.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    boolean b33 = pilha31.vazia();
    int i34 = pilha31.tamanho();
    int i35 = pilha31.tamanho();
    pilha31.empilha((java.lang.Object)(byte)10);
    pilha31.empilha((java.lang.Object)10.0d);
    java.lang.Object obj40 = pilha31.desempilha();
    ds.Pilha pilha41 = new ds.Pilha();
    int i42 = pilha41.tamanho();
    boolean b43 = pilha41.vazia();
    int i44 = pilha41.tamanho();
    int i45 = pilha41.tamanho();
    pilha41.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj48 = pilha41.desempilha();
    int i49 = pilha41.tamanho();
    pilha31.empilha((java.lang.Object)i49);
    pilha22.empilha((java.lang.Object)i49);
    pilha16.empilha((java.lang.Object)pilha22);
    ds.Pilha pilha53 = new ds.Pilha();
    int i54 = pilha53.tamanho();
    boolean b55 = pilha53.vazia();
    int i56 = pilha53.tamanho();
    int i57 = pilha53.tamanho();
    pilha53.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha60 = new ds.Pilha();
    int i61 = pilha60.tamanho();
    boolean b62 = pilha60.vazia();
    int i63 = pilha60.tamanho();
    int i64 = pilha60.tamanho();
    pilha60.empilha((java.lang.Object)(byte)10);
    pilha53.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj68 = pilha53.desempilha();
    boolean b69 = pilha53.vazia();
    java.lang.Object obj70 = pilha53.desempilha();
    boolean b71 = pilha53.vazia();
    boolean b72 = pilha53.vazia();
    pilha53.empilha((java.lang.Object)'#');
    boolean b75 = pilha53.vazia();
    pilha16.empilha((java.lang.Object)pilha53);
    boolean b77 = pilha53.vazia();
    ds.Pilha pilha78 = new ds.Pilha();
    int i79 = pilha78.tamanho();
    pilha78.empilha((java.lang.Object)"hi!");
    java.lang.Object obj82 = null;
    pilha78.empilha(obj82);
    pilha78.empilha((java.lang.Object)100.0d);
    int i86 = pilha78.tamanho();
    java.lang.Object obj87 = pilha78.desempilha();
    pilha53.empilha((java.lang.Object)pilha78);
    pilha0.empilha((java.lang.Object)pilha53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + "hi!"+ "'", obj26.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj40 + "' != '" + 10.0d+ "'", obj40.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj48 + "' != '" + (byte)10+ "'", obj48.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i54 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i56 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i57 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i63 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i64 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (byte)10+ "'", obj68.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (byte)10+ "'", obj70.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i79 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i86 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj87 + "' != '" + 100.0d+ "'", obj87.equals(100.0d));

  }

  @Test
  public void test267() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test267"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    int i8 = pilha0.tamanho();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    int i15 = pilha9.tamanho();
    int i16 = pilha9.tamanho();
    java.lang.Object obj17 = pilha9.desempilha();
    pilha0.empilha((java.lang.Object)pilha9);
    int i19 = pilha0.tamanho();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    int i24 = pilha20.tamanho();
    pilha20.empilha((java.lang.Object)1);
    ds.Pilha pilha27 = new ds.Pilha();
    int i28 = pilha27.tamanho();
    boolean b29 = pilha27.vazia();
    int i30 = pilha27.tamanho();
    pilha20.empilha((java.lang.Object)i30);
    boolean b32 = pilha20.vazia();
    java.lang.Object obj33 = pilha20.desempilha();
    java.lang.Object obj34 = pilha20.desempilha();
    pilha0.empilha((java.lang.Object)pilha20);
    int i36 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + 0+ "'", obj33.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj34 + "' != '" + 1+ "'", obj34.equals(1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 3);

  }

  @Test
  public void test268() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test268"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    int i5 = pilha0.tamanho();
    boolean b6 = pilha0.vazia();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = null;
    pilha0.empilha(obj8);
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)"hi!");
    java.lang.Object obj14 = null;
    pilha10.empilha(obj14);
    pilha10.empilha((java.lang.Object)100.0d);
    int i18 = pilha10.tamanho();
    boolean b19 = pilha10.vazia();
    pilha0.empilha((java.lang.Object)pilha10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test269() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test269"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    boolean b16 = pilha0.vazia();
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    int i21 = pilha17.tamanho();
    pilha17.empilha((java.lang.Object)1);
    boolean b24 = pilha17.vazia();
    ds.Pilha pilha25 = new ds.Pilha();
    ds.Pilha pilha26 = new ds.Pilha();
    int i27 = pilha26.tamanho();
    boolean b28 = pilha26.vazia();
    int i29 = pilha26.tamanho();
    pilha25.empilha((java.lang.Object)pilha26);
    pilha17.empilha((java.lang.Object)pilha25);
    ds.Pilha pilha32 = new ds.Pilha();
    ds.Pilha pilha33 = new ds.Pilha();
    int i34 = pilha33.tamanho();
    boolean b35 = pilha33.vazia();
    int i36 = pilha33.tamanho();
    pilha32.empilha((java.lang.Object)pilha33);
    boolean b38 = pilha32.vazia();
    pilha32.empilha((java.lang.Object)(short)1);
    boolean b41 = pilha32.vazia();
    java.lang.Object obj42 = pilha32.desempilha();
    pilha32.empilha((java.lang.Object)100.0f);
    int i45 = pilha32.tamanho();
    ds.Pilha pilha46 = new ds.Pilha();
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    boolean b49 = pilha47.vazia();
    int i50 = pilha47.tamanho();
    pilha46.empilha((java.lang.Object)pilha47);
    boolean b52 = pilha46.vazia();
    pilha46.empilha((java.lang.Object)(short)1);
    boolean b55 = pilha46.vazia();
    java.lang.Object obj56 = pilha46.desempilha();
    pilha46.empilha((java.lang.Object)100.0f);
    pilha32.empilha((java.lang.Object)pilha46);
    pilha25.empilha((java.lang.Object)pilha32);
    java.lang.Object obj61 = pilha25.desempilha();
    ds.Pilha pilha62 = new ds.Pilha();
    int i63 = pilha62.tamanho();
    pilha62.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj66 = null;
    pilha62.empilha(obj66);
    int i68 = pilha62.tamanho();
    pilha25.empilha((java.lang.Object)i68);
    pilha0.empilha((java.lang.Object)i68);
    boolean b71 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (short)1+ "'", obj42.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i50 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (short)1+ "'", obj56.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i63 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);

  }

  @Test
  public void test270() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test270"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    boolean b9 = pilha0.vazia();
    int i10 = pilha0.tamanho();
    ds.Pilha pilha11 = new ds.Pilha();
    ds.Pilha pilha12 = new ds.Pilha();
    int i13 = pilha12.tamanho();
    boolean b14 = pilha12.vazia();
    int i15 = pilha12.tamanho();
    pilha11.empilha((java.lang.Object)pilha12);
    boolean b17 = pilha11.vazia();
    pilha11.empilha((java.lang.Object)(short)1);
    boolean b20 = pilha11.vazia();
    java.lang.Object obj21 = pilha11.desempilha();
    ds.Pilha pilha22 = new ds.Pilha();
    int i23 = pilha22.tamanho();
    boolean b24 = pilha22.vazia();
    int i25 = pilha22.tamanho();
    int i26 = pilha22.tamanho();
    pilha22.empilha((java.lang.Object)1);
    boolean b29 = pilha22.vazia();
    ds.Pilha pilha30 = new ds.Pilha();
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    boolean b33 = pilha31.vazia();
    int i34 = pilha31.tamanho();
    pilha30.empilha((java.lang.Object)pilha31);
    pilha22.empilha((java.lang.Object)pilha30);
    ds.Pilha pilha37 = new ds.Pilha();
    pilha37.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha40 = new ds.Pilha();
    int i41 = pilha40.tamanho();
    pilha40.empilha((java.lang.Object)"hi!");
    java.lang.Object obj44 = pilha40.desempilha();
    pilha40.empilha((java.lang.Object)'4');
    pilha37.empilha((java.lang.Object)pilha40);
    ds.Pilha pilha48 = new ds.Pilha();
    int i49 = pilha48.tamanho();
    pilha48.empilha((java.lang.Object)"hi!");
    java.lang.Object obj52 = pilha48.desempilha();
    pilha48.empilha((java.lang.Object)'4');
    pilha40.empilha((java.lang.Object)'4');
    pilha22.empilha((java.lang.Object)pilha40);
    pilha11.empilha((java.lang.Object)pilha22);
    int i58 = pilha11.tamanho();
    boolean b59 = pilha11.vazia();
    pilha0.empilha((java.lang.Object)b59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short)1+ "'", obj21.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj44 + "' != '" + "hi!"+ "'", obj44.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj52 + "' != '" + "hi!"+ "'", obj52.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);

  }

  @Test
  public void test271() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test271"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    int i8 = pilha0.tamanho();
    int i9 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 1);

  }

  @Test
  public void test272() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test272"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    boolean b5 = pilha0.vazia();
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(byte)0);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    int i13 = pilha9.tamanho();
    int i14 = pilha9.tamanho();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)"hi!");
    java.lang.Object obj19 = pilha15.desempilha();
    pilha15.empilha((java.lang.Object)'4');
    pilha15.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    boolean b26 = pilha24.vazia();
    int i27 = pilha24.tamanho();
    int i28 = pilha24.tamanho();
    pilha24.empilha((java.lang.Object)(byte)10);
    pilha24.empilha((java.lang.Object)10.0d);
    java.lang.Object obj33 = pilha24.desempilha();
    ds.Pilha pilha34 = new ds.Pilha();
    int i35 = pilha34.tamanho();
    boolean b36 = pilha34.vazia();
    int i37 = pilha34.tamanho();
    int i38 = pilha34.tamanho();
    pilha34.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj41 = pilha34.desempilha();
    int i42 = pilha34.tamanho();
    pilha24.empilha((java.lang.Object)i42);
    pilha15.empilha((java.lang.Object)i42);
    pilha9.empilha((java.lang.Object)pilha15);
    java.lang.Object obj46 = pilha9.desempilha();
    pilha0.empilha(obj46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + "hi!"+ "'", obj19.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + 10.0d+ "'", obj33.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte)10+ "'", obj41.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj46);

  }

  @Test
  public void test273() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test273"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    boolean b6 = pilha0.vazia();
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)"hi!");
    boolean b11 = pilha7.vazia();
    pilha0.empilha((java.lang.Object)pilha7);
    ds.Pilha pilha13 = new ds.Pilha();
    int i14 = pilha13.tamanho();
    boolean b15 = pilha13.vazia();
    int i16 = pilha13.tamanho();
    int i17 = pilha13.tamanho();
    pilha13.empilha((java.lang.Object)1);
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha13.empilha((java.lang.Object)i23);
    boolean b25 = pilha13.vazia();
    int i26 = pilha13.tamanho();
    pilha0.empilha((java.lang.Object)pilha13);
    java.lang.Object obj28 = pilha13.desempilha();
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    pilha29.empilha((java.lang.Object)"hi!");
    java.lang.Object obj33 = null;
    pilha29.empilha(obj33);
    int i35 = pilha29.tamanho();
    int i36 = pilha29.tamanho();
    ds.Pilha pilha37 = new ds.Pilha();
    ds.Pilha pilha38 = new ds.Pilha();
    int i39 = pilha38.tamanho();
    boolean b40 = pilha38.vazia();
    int i41 = pilha38.tamanho();
    pilha37.empilha((java.lang.Object)pilha38);
    int i43 = pilha37.tamanho();
    int i44 = pilha37.tamanho();
    pilha29.empilha((java.lang.Object)pilha37);
    pilha13.empilha((java.lang.Object)pilha29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj28 + "' != '" + 0+ "'", obj28.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 1);

  }

  @Test
  public void test274() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test274"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    boolean b4 = pilha0.vazia();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = pilha6.desempilha();
    int i11 = pilha6.tamanho();
    boolean b12 = pilha6.vazia();
    int i13 = pilha6.tamanho();
    java.lang.Object obj14 = null;
    pilha6.empilha(obj14);
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha17 = new ds.Pilha();
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    pilha17.empilha((java.lang.Object)pilha18);
    boolean b23 = pilha17.vazia();
    pilha17.empilha((java.lang.Object)(short)1);
    boolean b26 = pilha17.vazia();
    java.lang.Object obj27 = pilha17.desempilha();
    pilha17.empilha((java.lang.Object)100.0f);
    int i30 = pilha17.tamanho();
    int i31 = pilha17.tamanho();
    boolean b32 = pilha17.vazia();
    pilha0.empilha((java.lang.Object)pilha17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short)1+ "'", obj27.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);

  }

  @Test
  public void test275() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test275"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b16 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)' ');
    java.lang.Object obj19 = pilha0.desempilha();
    int i20 = pilha0.tamanho();
    int i21 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + ' '+ "'", obj19.equals(' '));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 1);

  }

  @Test
  public void test276() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test276"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = pilha6.desempilha();
    pilha6.empilha((java.lang.Object)'4');
    pilha6.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)(byte)10);
    pilha15.empilha((java.lang.Object)10.0d);
    java.lang.Object obj24 = pilha15.desempilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    int i29 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj32 = pilha25.desempilha();
    int i33 = pilha25.tamanho();
    pilha15.empilha((java.lang.Object)i33);
    pilha6.empilha((java.lang.Object)i33);
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    boolean b39 = pilha37.vazia();
    int i40 = pilha37.tamanho();
    int i41 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha44 = new ds.Pilha();
    int i45 = pilha44.tamanho();
    boolean b46 = pilha44.vazia();
    int i47 = pilha44.tamanho();
    int i48 = pilha44.tamanho();
    pilha44.empilha((java.lang.Object)(byte)10);
    pilha37.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj52 = pilha37.desempilha();
    boolean b53 = pilha37.vazia();
    java.lang.Object obj54 = pilha37.desempilha();
    boolean b55 = pilha37.vazia();
    boolean b56 = pilha37.vazia();
    pilha37.empilha((java.lang.Object)'#');
    boolean b59 = pilha37.vazia();
    pilha0.empilha((java.lang.Object)pilha37);
    boolean b61 = pilha37.vazia();
    boolean b62 = pilha37.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + 10.0d+ "'", obj24.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte)10+ "'", obj32.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (byte)10+ "'", obj52.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (byte)10+ "'", obj54.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);

  }

  @Test
  public void test277() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test277"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    boolean b6 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);

  }

  @Test
  public void test278() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test278"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    boolean b15 = pilha9.vazia();
    pilha9.empilha((java.lang.Object)(short)1);
    boolean b18 = pilha9.vazia();
    java.lang.Object obj19 = pilha9.desempilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    int i24 = pilha20.tamanho();
    pilha20.empilha((java.lang.Object)1);
    boolean b27 = pilha20.vazia();
    ds.Pilha pilha28 = new ds.Pilha();
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    boolean b31 = pilha29.vazia();
    int i32 = pilha29.tamanho();
    pilha28.empilha((java.lang.Object)pilha29);
    pilha20.empilha((java.lang.Object)pilha28);
    ds.Pilha pilha35 = new ds.Pilha();
    pilha35.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha38 = new ds.Pilha();
    int i39 = pilha38.tamanho();
    pilha38.empilha((java.lang.Object)"hi!");
    java.lang.Object obj42 = pilha38.desempilha();
    pilha38.empilha((java.lang.Object)'4');
    pilha35.empilha((java.lang.Object)pilha38);
    ds.Pilha pilha46 = new ds.Pilha();
    int i47 = pilha46.tamanho();
    pilha46.empilha((java.lang.Object)"hi!");
    java.lang.Object obj50 = pilha46.desempilha();
    pilha46.empilha((java.lang.Object)'4');
    pilha38.empilha((java.lang.Object)'4');
    pilha20.empilha((java.lang.Object)pilha38);
    pilha9.empilha((java.lang.Object)pilha20);
    pilha0.empilha((java.lang.Object)pilha20);
    java.lang.Object obj57 = pilha20.desempilha();
    boolean b58 = pilha20.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short)1+ "'", obj19.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj42 + "' != '" + "hi!"+ "'", obj42.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj50 + "' != '" + "hi!"+ "'", obj50.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);

  }

  @Test
  public void test279() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test279"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    boolean b9 = pilha0.vazia();
    int i10 = pilha0.tamanho();
    boolean b11 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);

  }

  @Test
  public void test280() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test280"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    boolean b7 = pilha0.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha8);
    ds.Pilha pilha15 = new ds.Pilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha15.empilha((java.lang.Object)pilha16);
    boolean b21 = pilha15.vazia();
    pilha15.empilha((java.lang.Object)(short)1);
    boolean b24 = pilha15.vazia();
    java.lang.Object obj25 = pilha15.desempilha();
    pilha15.empilha((java.lang.Object)100.0f);
    int i28 = pilha15.tamanho();
    ds.Pilha pilha29 = new ds.Pilha();
    ds.Pilha pilha30 = new ds.Pilha();
    int i31 = pilha30.tamanho();
    boolean b32 = pilha30.vazia();
    int i33 = pilha30.tamanho();
    pilha29.empilha((java.lang.Object)pilha30);
    boolean b35 = pilha29.vazia();
    pilha29.empilha((java.lang.Object)(short)1);
    boolean b38 = pilha29.vazia();
    java.lang.Object obj39 = pilha29.desempilha();
    pilha29.empilha((java.lang.Object)100.0f);
    pilha15.empilha((java.lang.Object)pilha29);
    pilha8.empilha((java.lang.Object)pilha15);
    java.lang.Object obj44 = pilha8.desempilha();
    boolean b45 = pilha8.vazia();
    ds.Pilha pilha46 = new ds.Pilha();
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    boolean b49 = pilha47.vazia();
    int i50 = pilha47.tamanho();
    pilha46.empilha((java.lang.Object)pilha47);
    int i52 = pilha46.tamanho();
    int i53 = pilha46.tamanho();
    boolean b54 = pilha46.vazia();
    pilha8.empilha((java.lang.Object)pilha46);
    boolean b56 = pilha8.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short)1+ "'", obj25.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short)1+ "'", obj39.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i50 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);

  }

  @Test
  public void test281() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test281"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = pilha6.desempilha();
    pilha6.empilha((java.lang.Object)'4');
    pilha6.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)(byte)10);
    pilha15.empilha((java.lang.Object)10.0d);
    java.lang.Object obj24 = pilha15.desempilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    int i29 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj32 = pilha25.desempilha();
    int i33 = pilha25.tamanho();
    pilha15.empilha((java.lang.Object)i33);
    pilha6.empilha((java.lang.Object)i33);
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)"hi!");
    java.lang.Object obj41 = null;
    pilha37.empilha(obj41);
    int i43 = pilha37.tamanho();
    int i44 = pilha37.tamanho();
    java.lang.Object obj45 = pilha37.desempilha();
    java.lang.Object obj46 = pilha37.desempilha();
    boolean b47 = pilha37.vazia();
    ds.Pilha pilha48 = new ds.Pilha();
    int i49 = pilha48.tamanho();
    boolean b50 = pilha48.vazia();
    int i51 = pilha48.tamanho();
    int i52 = pilha48.tamanho();
    int i53 = pilha48.tamanho();
    ds.Pilha pilha54 = new ds.Pilha();
    int i55 = pilha54.tamanho();
    int i56 = pilha54.tamanho();
    int i57 = pilha54.tamanho();
    pilha48.empilha((java.lang.Object)pilha54);
    pilha37.empilha((java.lang.Object)pilha54);
    pilha6.empilha((java.lang.Object)pilha54);
    int i61 = pilha54.tamanho();
    boolean b62 = pilha54.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + 10.0d+ "'", obj24.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte)10+ "'", obj32.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj46 + "' != '" + "hi!"+ "'", obj46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i56 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i57 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);

  }

  @Test
  public void test282() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test282"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    pilha9.empilha((java.lang.Object)100.0d);
    int i17 = pilha9.tamanho();
    java.lang.Object obj18 = pilha9.desempilha();
    pilha0.empilha(obj18);
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    int i22 = pilha20.tamanho();
    int i23 = pilha20.tamanho();
    pilha0.empilha((java.lang.Object)pilha20);
    ds.Pilha pilha25 = new ds.Pilha();
    ds.Pilha pilha26 = new ds.Pilha();
    int i27 = pilha26.tamanho();
    boolean b28 = pilha26.vazia();
    int i29 = pilha26.tamanho();
    pilha25.empilha((java.lang.Object)pilha26);
    boolean b31 = pilha25.vazia();
    pilha25.empilha((java.lang.Object)(short)1);
    boolean b34 = pilha25.vazia();
    java.lang.Object obj35 = pilha25.desempilha();
    pilha25.empilha((java.lang.Object)100.0f);
    int i38 = pilha25.tamanho();
    ds.Pilha pilha39 = new ds.Pilha();
    ds.Pilha pilha40 = new ds.Pilha();
    int i41 = pilha40.tamanho();
    boolean b42 = pilha40.vazia();
    int i43 = pilha40.tamanho();
    pilha39.empilha((java.lang.Object)pilha40);
    boolean b45 = pilha39.vazia();
    pilha39.empilha((java.lang.Object)(short)1);
    boolean b48 = pilha39.vazia();
    java.lang.Object obj49 = pilha39.desempilha();
    pilha39.empilha((java.lang.Object)100.0f);
    pilha25.empilha((java.lang.Object)pilha39);
    java.lang.Object obj53 = pilha25.desempilha();
    pilha0.empilha((java.lang.Object)pilha25);
    boolean b55 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 100.0d+ "'", obj18.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (short)1+ "'", obj35.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short)1+ "'", obj49.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == false);

  }

  @Test
  public void test283() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test283"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    boolean b6 = pilha0.vazia();
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)"hi!");
    boolean b11 = pilha7.vazia();
    pilha0.empilha((java.lang.Object)pilha7);
    java.lang.Object obj13 = pilha7.desempilha();
    boolean b14 = pilha7.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj13 + "' != '" + "hi!"+ "'", obj13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);

  }

  @Test
  public void test284() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test284"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    int i16 = pilha10.tamanho();
    boolean b17 = pilha10.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);

  }

  @Test
  public void test285() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test285"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    boolean b4 = pilha0.vazia();
    int i5 = pilha0.tamanho();
    java.lang.Object obj6 = pilha0.desempilha();
    int i7 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj8 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj6 + "' != '" + "hi!"+ "'", obj6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);

  }

  @Test
  public void test286() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test286"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    boolean b5 = pilha3.vazia();
    int i6 = pilha3.tamanho();
    int i7 = pilha3.tamanho();
    int i8 = pilha3.tamanho();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = pilha9.desempilha();
    pilha9.empilha((java.lang.Object)'4');
    pilha9.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    int i22 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)(byte)10);
    pilha18.empilha((java.lang.Object)10.0d);
    java.lang.Object obj27 = pilha18.desempilha();
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    boolean b30 = pilha28.vazia();
    int i31 = pilha28.tamanho();
    int i32 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj35 = pilha28.desempilha();
    int i36 = pilha28.tamanho();
    pilha18.empilha((java.lang.Object)i36);
    pilha9.empilha((java.lang.Object)i36);
    pilha3.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha3);
    boolean b41 = pilha0.vazia();
    int i42 = pilha0.tamanho();
    boolean b43 = pilha0.vazia();
    int i44 = pilha0.tamanho();
    boolean b45 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj13 + "' != '" + "hi!"+ "'", obj13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj27 + "' != '" + 10.0d+ "'", obj27.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte)10+ "'", obj35.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);

  }

  @Test
  public void test287() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test287"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    int i6 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj7 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);

  }

  @Test
  public void test288() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test288"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    java.lang.Object obj8 = pilha0.desempilha();
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + 100.0d+ "'", obj8.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj10);

  }

  @Test
  public void test289() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test289"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    int i13 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)(byte)10);
    pilha9.empilha((java.lang.Object)10.0d);
    java.lang.Object obj18 = pilha9.desempilha();
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    boolean b21 = pilha19.vazia();
    int i22 = pilha19.tamanho();
    int i23 = pilha19.tamanho();
    pilha19.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj26 = pilha19.desempilha();
    int i27 = pilha19.tamanho();
    pilha9.empilha((java.lang.Object)i27);
    pilha0.empilha((java.lang.Object)i27);
    java.lang.Object obj30 = pilha0.desempilha();
    java.lang.Object obj31 = pilha0.desempilha();
    ds.Pilha pilha32 = new ds.Pilha();
    int i33 = pilha32.tamanho();
    pilha32.empilha((java.lang.Object)"hi!");
    java.lang.Object obj36 = null;
    pilha32.empilha(obj36);
    pilha32.empilha((java.lang.Object)100.0d);
    int i40 = pilha32.tamanho();
    pilha32.empilha((java.lang.Object)"");
    pilha0.empilha((java.lang.Object)"");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 10.0d+ "'", obj18.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte)10+ "'", obj26.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj30 + "' != '" + 0+ "'", obj30.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj31 + "' != '" + "hi!"+ "'", obj31.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 3);

  }

  @Test
  public void test290() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test290"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    int i8 = pilha0.tamanho();
    boolean b9 = pilha0.vazia();
    int i10 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 1);

  }

  @Test
  public void test291() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test291"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    boolean b8 = pilha6.vazia();
    int i9 = pilha6.tamanho();
    pilha5.empilha((java.lang.Object)pilha6);
    boolean b11 = pilha5.vazia();
    pilha5.empilha((java.lang.Object)(short)1);
    pilha0.empilha((java.lang.Object)(short)1);
    ds.Pilha pilha15 = new ds.Pilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha15.empilha((java.lang.Object)pilha16);
    int i21 = pilha15.tamanho();
    ds.Pilha pilha22 = new ds.Pilha();
    ds.Pilha pilha23 = new ds.Pilha();
    int i24 = pilha23.tamanho();
    boolean b25 = pilha23.vazia();
    int i26 = pilha23.tamanho();
    pilha22.empilha((java.lang.Object)pilha23);
    boolean b28 = pilha22.vazia();
    pilha22.empilha((java.lang.Object)(short)1);
    pilha15.empilha((java.lang.Object)pilha22);
    pilha0.empilha((java.lang.Object)pilha22);
    ds.Pilha pilha33 = new ds.Pilha();
    int i34 = pilha33.tamanho();
    boolean b35 = pilha33.vazia();
    int i36 = pilha33.tamanho();
    int i37 = pilha33.tamanho();
    ds.Pilha pilha38 = new ds.Pilha();
    int i39 = pilha38.tamanho();
    pilha38.empilha((java.lang.Object)"hi!");
    java.lang.Object obj42 = null;
    pilha38.empilha(obj42);
    int i44 = pilha38.tamanho();
    java.lang.Object obj45 = pilha38.desempilha();
    pilha33.empilha((java.lang.Object)pilha38);
    pilha22.empilha((java.lang.Object)pilha33);
    ds.Pilha pilha48 = new ds.Pilha();
    pilha48.empilha((java.lang.Object)(short)0);
    pilha48.empilha((java.lang.Object)(byte)10);
    pilha48.empilha((java.lang.Object)100L);
    java.lang.Object obj55 = pilha48.desempilha();
    pilha33.empilha((java.lang.Object)pilha48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj55 + "' != '" + 100L+ "'", obj55.equals(100L));

  }

  @Test
  public void test292() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test292"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = pilha6.desempilha();
    pilha6.empilha((java.lang.Object)'4');
    pilha6.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)(byte)10);
    pilha15.empilha((java.lang.Object)10.0d);
    java.lang.Object obj24 = pilha15.desempilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    int i29 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj32 = pilha25.desempilha();
    int i33 = pilha25.tamanho();
    pilha15.empilha((java.lang.Object)i33);
    pilha6.empilha((java.lang.Object)i33);
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    boolean b39 = pilha37.vazia();
    int i40 = pilha37.tamanho();
    int i41 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha44 = new ds.Pilha();
    int i45 = pilha44.tamanho();
    boolean b46 = pilha44.vazia();
    int i47 = pilha44.tamanho();
    int i48 = pilha44.tamanho();
    pilha44.empilha((java.lang.Object)(byte)10);
    pilha37.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj52 = pilha37.desempilha();
    boolean b53 = pilha37.vazia();
    java.lang.Object obj54 = pilha37.desempilha();
    boolean b55 = pilha37.vazia();
    boolean b56 = pilha37.vazia();
    pilha37.empilha((java.lang.Object)'#');
    boolean b59 = pilha37.vazia();
    pilha0.empilha((java.lang.Object)pilha37);
    boolean b61 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + 10.0d+ "'", obj24.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte)10+ "'", obj32.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (byte)10+ "'", obj52.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (byte)10+ "'", obj54.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);

  }

  @Test
  public void test293() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test293"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    boolean b15 = pilha9.vazia();
    pilha9.empilha((java.lang.Object)(short)1);
    boolean b18 = pilha9.vazia();
    java.lang.Object obj19 = pilha9.desempilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    int i24 = pilha20.tamanho();
    pilha20.empilha((java.lang.Object)1);
    boolean b27 = pilha20.vazia();
    ds.Pilha pilha28 = new ds.Pilha();
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    boolean b31 = pilha29.vazia();
    int i32 = pilha29.tamanho();
    pilha28.empilha((java.lang.Object)pilha29);
    pilha20.empilha((java.lang.Object)pilha28);
    ds.Pilha pilha35 = new ds.Pilha();
    pilha35.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha38 = new ds.Pilha();
    int i39 = pilha38.tamanho();
    pilha38.empilha((java.lang.Object)"hi!");
    java.lang.Object obj42 = pilha38.desempilha();
    pilha38.empilha((java.lang.Object)'4');
    pilha35.empilha((java.lang.Object)pilha38);
    ds.Pilha pilha46 = new ds.Pilha();
    int i47 = pilha46.tamanho();
    pilha46.empilha((java.lang.Object)"hi!");
    java.lang.Object obj50 = pilha46.desempilha();
    pilha46.empilha((java.lang.Object)'4');
    pilha38.empilha((java.lang.Object)'4');
    pilha20.empilha((java.lang.Object)pilha38);
    pilha9.empilha((java.lang.Object)pilha20);
    pilha0.empilha((java.lang.Object)pilha20);
    java.lang.Object obj57 = pilha20.desempilha();
    java.lang.Object obj58 = pilha20.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short)1+ "'", obj19.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj42 + "' != '" + "hi!"+ "'", obj42.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj50 + "' != '" + "hi!"+ "'", obj50.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj58);

  }

  @Test
  public void test294() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test294"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    int i22 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)(byte)10);
    pilha11.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj26 = pilha11.desempilha();
    pilha0.empilha(obj26);
    boolean b28 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + "hi!"+ "'", obj9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte)10+ "'", obj26.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test295() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test295"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)1);
    boolean b18 = pilha11.vazia();
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    pilha11.empilha((java.lang.Object)pilha19);
    ds.Pilha pilha26 = new ds.Pilha();
    pilha26.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    pilha29.empilha((java.lang.Object)"hi!");
    java.lang.Object obj33 = pilha29.desempilha();
    pilha29.empilha((java.lang.Object)'4');
    pilha26.empilha((java.lang.Object)pilha29);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)"hi!");
    java.lang.Object obj41 = pilha37.desempilha();
    pilha37.empilha((java.lang.Object)'4');
    pilha29.empilha((java.lang.Object)'4');
    pilha11.empilha((java.lang.Object)pilha29);
    pilha0.empilha((java.lang.Object)pilha11);
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    pilha47.empilha((java.lang.Object)"hi!");
    java.lang.Object obj51 = null;
    pilha47.empilha(obj51);
    pilha47.empilha((java.lang.Object)100.0d);
    java.lang.Object obj55 = pilha47.desempilha();
    pilha11.empilha((java.lang.Object)pilha47);
    java.lang.Object obj57 = null;
    pilha47.empilha(obj57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + "hi!"+ "'", obj33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj41 + "' != '" + "hi!"+ "'", obj41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj55 + "' != '" + 100.0d+ "'", obj55.equals(100.0d));

  }

  @Test
  public void test296() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test296"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)100.0f);
    boolean b13 = pilha0.vazia();
    java.lang.Object obj14 = pilha0.desempilha();
    boolean b15 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)0);
    boolean b18 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj14 + "' != '" + 100.0f+ "'", obj14.equals(100.0f));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test297() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test297"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    int i8 = pilha0.tamanho();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    int i15 = pilha9.tamanho();
    int i16 = pilha9.tamanho();
    java.lang.Object obj17 = pilha9.desempilha();
    pilha0.empilha((java.lang.Object)pilha9);
    boolean b19 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test298() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test298"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)100.0f);
    boolean b13 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)"hi!");
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    java.lang.Object obj18 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj17 + "' != '" + "hi!"+ "'", obj17.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 100.0f+ "'", obj18.equals(100.0f));

  }

  @Test
  public void test299() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test299"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    pilha1.empilha((java.lang.Object)100);
    java.lang.Object obj8 = pilha1.desempilha();
    int i9 = pilha1.tamanho();
    int i10 = pilha1.tamanho();
    boolean b11 = pilha1.vazia();
    boolean b12 = pilha1.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + 100+ "'", obj8.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);

  }

  @Test
  public void test300() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test300"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = pilha3.desempilha();
    pilha3.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha3);
    java.lang.Object obj11 = pilha3.desempilha();
    ds.Pilha pilha12 = new ds.Pilha();
    int i13 = pilha12.tamanho();
    boolean b14 = pilha12.vazia();
    int i15 = pilha12.tamanho();
    int i16 = pilha12.tamanho();
    pilha12.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    boolean b21 = pilha19.vazia();
    int i22 = pilha19.tamanho();
    int i23 = pilha19.tamanho();
    pilha19.empilha((java.lang.Object)(byte)10);
    pilha12.empilha((java.lang.Object)(byte)10);
    boolean b27 = pilha12.vazia();
    boolean b28 = pilha12.vazia();
    pilha3.empilha((java.lang.Object)pilha12);
    boolean b30 = pilha12.vazia();
    java.lang.Object obj31 = pilha12.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + "hi!"+ "'", obj7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj11 + "' != '" + '4'+ "'", obj11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte)10+ "'", obj31.equals((byte)10));

  }

  @Test
  public void test301() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test301"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    boolean b3 = pilha0.vazia();
    ds.Pilha pilha4 = new ds.Pilha();
    int i5 = pilha4.tamanho();
    boolean b6 = pilha4.vazia();
    int i7 = pilha4.tamanho();
    int i8 = pilha4.tamanho();
    pilha4.empilha((java.lang.Object)1);
    pilha4.empilha((java.lang.Object)3);
    ds.Pilha pilha13 = new ds.Pilha();
    int i14 = pilha13.tamanho();
    pilha13.empilha((java.lang.Object)"hi!");
    java.lang.Object obj17 = null;
    pilha13.empilha(obj17);
    pilha13.empilha((java.lang.Object)100.0d);
    int i21 = pilha13.tamanho();
    java.lang.Object obj22 = pilha13.desempilha();
    pilha4.empilha(obj22);
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    int i26 = pilha24.tamanho();
    int i27 = pilha24.tamanho();
    pilha4.empilha((java.lang.Object)pilha24);
    pilha0.empilha((java.lang.Object)pilha24);
    ds.Pilha pilha30 = new ds.Pilha();
    int i31 = pilha30.tamanho();
    pilha30.empilha((java.lang.Object)"hi!");
    java.lang.Object obj34 = pilha30.desempilha();
    pilha30.empilha((java.lang.Object)'4');
    pilha30.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha39 = new ds.Pilha();
    int i40 = pilha39.tamanho();
    boolean b41 = pilha39.vazia();
    int i42 = pilha39.tamanho();
    int i43 = pilha39.tamanho();
    pilha39.empilha((java.lang.Object)(byte)10);
    pilha39.empilha((java.lang.Object)10.0d);
    java.lang.Object obj48 = pilha39.desempilha();
    ds.Pilha pilha49 = new ds.Pilha();
    int i50 = pilha49.tamanho();
    boolean b51 = pilha49.vazia();
    int i52 = pilha49.tamanho();
    int i53 = pilha49.tamanho();
    pilha49.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj56 = pilha49.desempilha();
    int i57 = pilha49.tamanho();
    pilha39.empilha((java.lang.Object)i57);
    pilha30.empilha((java.lang.Object)i57);
    int i60 = pilha30.tamanho();
    boolean b61 = pilha30.vazia();
    pilha24.empilha((java.lang.Object)pilha30);
    boolean b63 = pilha24.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj22 + "' != '" + 100.0d+ "'", obj22.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj34 + "' != '" + "hi!"+ "'", obj34.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj48 + "' != '" + 10.0d+ "'", obj48.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i50 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (byte)10+ "'", obj56.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i57 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i60 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);

  }

  @Test
  public void test302() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test302"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    int i8 = pilha0.tamanho();
    int i9 = pilha0.tamanho();
    int i10 = pilha0.tamanho();
    boolean b11 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test303() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test303"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    boolean b15 = pilha9.vazia();
    pilha9.empilha((java.lang.Object)(short)1);
    boolean b18 = pilha9.vazia();
    java.lang.Object obj19 = pilha9.desempilha();
    ds.Pilha pilha20 = new ds.Pilha();
    ds.Pilha pilha21 = new ds.Pilha();
    int i22 = pilha21.tamanho();
    boolean b23 = pilha21.vazia();
    int i24 = pilha21.tamanho();
    pilha20.empilha((java.lang.Object)pilha21);
    int i26 = pilha21.tamanho();
    int i27 = pilha21.tamanho();
    pilha9.empilha((java.lang.Object)i27);
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    pilha29.empilha((java.lang.Object)"hi!");
    java.lang.Object obj33 = pilha29.desempilha();
    pilha29.empilha((java.lang.Object)'4');
    pilha29.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha38 = new ds.Pilha();
    pilha38.empilha((java.lang.Object)(short)0);
    pilha38.empilha((java.lang.Object)(byte)10);
    pilha38.empilha((java.lang.Object)100L);
    pilha29.empilha((java.lang.Object)100L);
    pilha9.empilha((java.lang.Object)pilha29);
    pilha0.empilha((java.lang.Object)pilha9);
    int i48 = pilha9.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + 100.0d+ "'", obj8.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short)1+ "'", obj19.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + "hi!"+ "'", obj33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 3);

  }

  @Test
  public void test304() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test304"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    boolean b5 = pilha0.vazia();
    boolean b6 = pilha0.vazia();
    ds.Pilha pilha7 = new ds.Pilha();
    ds.Pilha pilha8 = new ds.Pilha();
    int i9 = pilha8.tamanho();
    boolean b10 = pilha8.vazia();
    int i11 = pilha8.tamanho();
    pilha7.empilha((java.lang.Object)pilha8);
    int i13 = pilha7.tamanho();
    java.lang.Object obj14 = pilha7.desempilha();
    pilha0.empilha((java.lang.Object)pilha7);
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    int i20 = pilha16.tamanho();
    int i21 = pilha16.tamanho();
    ds.Pilha pilha22 = new ds.Pilha();
    int i23 = pilha22.tamanho();
    pilha22.empilha((java.lang.Object)"hi!");
    java.lang.Object obj26 = pilha22.desempilha();
    pilha22.empilha((java.lang.Object)'4');
    pilha22.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    boolean b33 = pilha31.vazia();
    int i34 = pilha31.tamanho();
    int i35 = pilha31.tamanho();
    pilha31.empilha((java.lang.Object)(byte)10);
    pilha31.empilha((java.lang.Object)10.0d);
    java.lang.Object obj40 = pilha31.desempilha();
    ds.Pilha pilha41 = new ds.Pilha();
    int i42 = pilha41.tamanho();
    boolean b43 = pilha41.vazia();
    int i44 = pilha41.tamanho();
    int i45 = pilha41.tamanho();
    pilha41.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj48 = pilha41.desempilha();
    int i49 = pilha41.tamanho();
    pilha31.empilha((java.lang.Object)i49);
    pilha22.empilha((java.lang.Object)i49);
    pilha16.empilha((java.lang.Object)pilha22);
    ds.Pilha pilha53 = new ds.Pilha();
    int i54 = pilha53.tamanho();
    boolean b55 = pilha53.vazia();
    int i56 = pilha53.tamanho();
    int i57 = pilha53.tamanho();
    pilha53.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha60 = new ds.Pilha();
    int i61 = pilha60.tamanho();
    boolean b62 = pilha60.vazia();
    int i63 = pilha60.tamanho();
    int i64 = pilha60.tamanho();
    pilha60.empilha((java.lang.Object)(byte)10);
    pilha53.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj68 = pilha53.desempilha();
    boolean b69 = pilha53.vazia();
    java.lang.Object obj70 = pilha53.desempilha();
    boolean b71 = pilha53.vazia();
    boolean b72 = pilha53.vazia();
    pilha53.empilha((java.lang.Object)'#');
    boolean b75 = pilha53.vazia();
    pilha16.empilha((java.lang.Object)pilha53);
    pilha0.empilha((java.lang.Object)pilha53);
    java.lang.Object obj78 = null;
    pilha0.empilha(obj78);
    java.lang.Object obj80 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + "hi!"+ "'", obj26.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj40 + "' != '" + 10.0d+ "'", obj40.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj48 + "' != '" + (byte)10+ "'", obj48.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i54 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i56 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i57 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i63 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i64 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (byte)10+ "'", obj68.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (byte)10+ "'", obj70.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj80);

  }

  @Test
  public void test305() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test305"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)100.0f);
    int i13 = pilha0.tamanho();
    ds.Pilha pilha14 = new ds.Pilha();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    pilha14.empilha((java.lang.Object)pilha15);
    boolean b20 = pilha14.vazia();
    pilha14.empilha((java.lang.Object)(short)1);
    boolean b23 = pilha14.vazia();
    java.lang.Object obj24 = pilha14.desempilha();
    pilha14.empilha((java.lang.Object)100.0f);
    pilha0.empilha((java.lang.Object)pilha14);
    ds.Pilha pilha28 = new ds.Pilha();
    boolean b29 = pilha28.vazia();
    boolean b30 = pilha28.vazia();
    boolean b31 = pilha28.vazia();
    int i32 = pilha28.tamanho();
    pilha0.empilha((java.lang.Object)pilha28);
    int i34 = pilha28.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (short)1+ "'", obj24.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);

  }

  @Test
  public void test306() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test306"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    boolean b3 = pilha0.vazia();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    int i6 = pilha5.tamanho();
    pilha5.empilha((java.lang.Object)"hi!");
    java.lang.Object obj9 = null;
    pilha5.empilha(obj9);
    java.lang.Object obj11 = pilha5.desempilha();
    pilha0.empilha((java.lang.Object)pilha5);
    boolean b13 = pilha5.vazia();
    java.lang.Object obj14 = pilha5.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj14 + "' != '" + "hi!"+ "'", obj14.equals("hi!"));

  }

  @Test
  public void test307() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test307"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    int i5 = pilha0.tamanho();
    boolean b6 = pilha0.vazia();
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)1);
    boolean b14 = pilha7.vazia();
    ds.Pilha pilha15 = new ds.Pilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha15.empilha((java.lang.Object)pilha16);
    pilha7.empilha((java.lang.Object)pilha15);
    ds.Pilha pilha22 = new ds.Pilha();
    ds.Pilha pilha23 = new ds.Pilha();
    int i24 = pilha23.tamanho();
    boolean b25 = pilha23.vazia();
    int i26 = pilha23.tamanho();
    pilha22.empilha((java.lang.Object)pilha23);
    boolean b28 = pilha22.vazia();
    pilha22.empilha((java.lang.Object)(short)1);
    boolean b31 = pilha22.vazia();
    java.lang.Object obj32 = pilha22.desempilha();
    pilha22.empilha((java.lang.Object)100.0f);
    int i35 = pilha22.tamanho();
    ds.Pilha pilha36 = new ds.Pilha();
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    boolean b39 = pilha37.vazia();
    int i40 = pilha37.tamanho();
    pilha36.empilha((java.lang.Object)pilha37);
    boolean b42 = pilha36.vazia();
    pilha36.empilha((java.lang.Object)(short)1);
    boolean b45 = pilha36.vazia();
    java.lang.Object obj46 = pilha36.desempilha();
    pilha36.empilha((java.lang.Object)100.0f);
    pilha22.empilha((java.lang.Object)pilha36);
    pilha15.empilha((java.lang.Object)pilha22);
    java.lang.Object obj51 = pilha15.desempilha();
    boolean b52 = pilha15.vazia();
    pilha0.empilha((java.lang.Object)b52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (short)1+ "'", obj32.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (short)1+ "'", obj46.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);

  }

  @Test
  public void test308() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test308"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    boolean b8 = pilha6.vazia();
    int i9 = pilha6.tamanho();
    pilha5.empilha((java.lang.Object)pilha6);
    boolean b11 = pilha5.vazia();
    pilha5.empilha((java.lang.Object)(short)1);
    pilha0.empilha((java.lang.Object)(short)1);
    ds.Pilha pilha15 = new ds.Pilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha15.empilha((java.lang.Object)pilha16);
    int i21 = pilha15.tamanho();
    ds.Pilha pilha22 = new ds.Pilha();
    ds.Pilha pilha23 = new ds.Pilha();
    int i24 = pilha23.tamanho();
    boolean b25 = pilha23.vazia();
    int i26 = pilha23.tamanho();
    pilha22.empilha((java.lang.Object)pilha23);
    boolean b28 = pilha22.vazia();
    pilha22.empilha((java.lang.Object)(short)1);
    pilha15.empilha((java.lang.Object)pilha22);
    pilha0.empilha((java.lang.Object)pilha22);
    ds.Pilha pilha33 = new ds.Pilha();
    int i34 = pilha33.tamanho();
    boolean b35 = pilha33.vazia();
    int i36 = pilha33.tamanho();
    int i37 = pilha33.tamanho();
    ds.Pilha pilha38 = new ds.Pilha();
    int i39 = pilha38.tamanho();
    pilha38.empilha((java.lang.Object)"hi!");
    java.lang.Object obj42 = null;
    pilha38.empilha(obj42);
    int i44 = pilha38.tamanho();
    java.lang.Object obj45 = pilha38.desempilha();
    pilha33.empilha((java.lang.Object)pilha38);
    pilha22.empilha((java.lang.Object)pilha33);
    ds.Pilha pilha48 = new ds.Pilha();
    int i49 = pilha48.tamanho();
    pilha48.empilha((java.lang.Object)"hi!");
    java.lang.Object obj52 = pilha48.desempilha();
    pilha48.empilha((java.lang.Object)'4');
    pilha48.empilha((java.lang.Object)"hi!");
    pilha22.empilha((java.lang.Object)"hi!");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj52 + "' != '" + "hi!"+ "'", obj52.equals("hi!"));

  }

  @Test
  public void test309() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test309"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha9 = new ds.Pilha();
    pilha9.empilha((java.lang.Object)(short)0);
    pilha9.empilha((java.lang.Object)(byte)10);
    pilha9.empilha((java.lang.Object)100L);
    pilha0.empilha((java.lang.Object)100L);
    int i17 = pilha0.tamanho();
    int i18 = pilha0.tamanho();
    boolean b19 = pilha0.vazia();
    java.lang.Object obj20 = pilha0.desempilha();
    ds.Pilha pilha21 = new ds.Pilha();
    pilha21.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    pilha24.empilha((java.lang.Object)"hi!");
    java.lang.Object obj28 = pilha24.desempilha();
    pilha24.empilha((java.lang.Object)'4');
    pilha21.empilha((java.lang.Object)pilha24);
    pilha0.empilha((java.lang.Object)pilha21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj20 + "' != '" + 100L+ "'", obj20.equals(100L));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj28 + "' != '" + "hi!"+ "'", obj28.equals("hi!"));

  }

  @Test
  public void test310() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test310"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    boolean b3 = pilha0.vazia();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    boolean b6 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);

  }

  @Test
  public void test311() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test311"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    boolean b7 = pilha0.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha8);
    boolean b15 = pilha8.vazia();
    int i16 = pilha8.tamanho();
    boolean b17 = pilha8.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test312() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test312"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha9 = new ds.Pilha();
    pilha9.empilha((java.lang.Object)(short)0);
    pilha9.empilha((java.lang.Object)(byte)10);
    pilha9.empilha((java.lang.Object)100L);
    pilha0.empilha((java.lang.Object)100L);
    int i17 = pilha0.tamanho();
    java.lang.Object obj18 = pilha0.desempilha();
    boolean b19 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 100L+ "'", obj18.equals(100L));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);

  }

  @Test
  public void test313() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test313"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    int i6 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1.0d);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)'a');
    pilha0.empilha((java.lang.Object)pilha9);
    ds.Pilha pilha16 = new ds.Pilha();
    pilha16.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    pilha19.empilha((java.lang.Object)"hi!");
    java.lang.Object obj23 = pilha19.desempilha();
    pilha19.empilha((java.lang.Object)'4');
    pilha16.empilha((java.lang.Object)pilha19);
    java.lang.Object obj27 = pilha19.desempilha();
    pilha0.empilha(obj27);
    boolean b29 = pilha0.vazia();
    int i30 = pilha0.tamanho();
    ds.Pilha pilha31 = new ds.Pilha();
    ds.Pilha pilha32 = new ds.Pilha();
    int i33 = pilha32.tamanho();
    boolean b34 = pilha32.vazia();
    int i35 = pilha32.tamanho();
    pilha31.empilha((java.lang.Object)pilha32);
    int i37 = pilha31.tamanho();
    int i38 = pilha31.tamanho();
    int i39 = pilha31.tamanho();
    boolean b40 = pilha31.vazia();
    pilha0.empilha((java.lang.Object)b40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj23 + "' != '" + "hi!"+ "'", obj23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj27 + "' != '" + '4'+ "'", obj27.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);

  }

  @Test
  public void test314() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test314"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    boolean b3 = pilha0.vazia();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    int i6 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);

  }

  @Test
  public void test315() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test315"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    int i8 = pilha0.tamanho();
    int i9 = pilha0.tamanho();
    java.lang.Object obj10 = pilha0.desempilha();
    int i11 = pilha0.tamanho();
    int i12 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);

  }

  @Test
  public void test316() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test316"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    boolean b9 = pilha0.vazia();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)"hi!");
    java.lang.Object obj14 = null;
    pilha10.empilha(obj14);
    pilha10.empilha((java.lang.Object)100.0d);
    int i18 = pilha10.tamanho();
    java.lang.Object obj19 = pilha10.desempilha();
    int i20 = pilha10.tamanho();
    pilha0.empilha((java.lang.Object)pilha10);
    ds.Pilha pilha22 = new ds.Pilha();
    int i23 = pilha22.tamanho();
    pilha22.empilha((java.lang.Object)"hi!");
    java.lang.Object obj26 = null;
    pilha22.empilha(obj26);
    int i28 = pilha22.tamanho();
    java.lang.Object obj29 = pilha22.desempilha();
    java.lang.Object obj30 = pilha22.desempilha();
    ds.Pilha pilha31 = new ds.Pilha();
    ds.Pilha pilha32 = new ds.Pilha();
    int i33 = pilha32.tamanho();
    boolean b34 = pilha32.vazia();
    int i35 = pilha32.tamanho();
    pilha31.empilha((java.lang.Object)pilha32);
    pilha22.empilha((java.lang.Object)pilha32);
    boolean b38 = pilha22.vazia();
    java.lang.Object obj39 = pilha22.desempilha();
    int i40 = pilha22.tamanho();
    pilha0.empilha((java.lang.Object)i40);
    ds.Pilha pilha42 = new ds.Pilha();
    int i43 = pilha42.tamanho();
    pilha42.empilha((java.lang.Object)"hi!");
    java.lang.Object obj46 = null;
    pilha42.empilha(obj46);
    int i48 = pilha42.tamanho();
    java.lang.Object obj49 = pilha42.desempilha();
    java.lang.Object obj50 = pilha42.desempilha();
    ds.Pilha pilha51 = new ds.Pilha();
    ds.Pilha pilha52 = new ds.Pilha();
    int i53 = pilha52.tamanho();
    boolean b54 = pilha52.vazia();
    int i55 = pilha52.tamanho();
    pilha51.empilha((java.lang.Object)pilha52);
    boolean b57 = pilha51.vazia();
    pilha51.empilha((java.lang.Object)(short)1);
    boolean b60 = pilha51.vazia();
    java.lang.Object obj61 = pilha51.desempilha();
    ds.Pilha pilha62 = new ds.Pilha();
    int i63 = pilha62.tamanho();
    boolean b64 = pilha62.vazia();
    int i65 = pilha62.tamanho();
    int i66 = pilha62.tamanho();
    pilha62.empilha((java.lang.Object)1);
    boolean b69 = pilha62.vazia();
    ds.Pilha pilha70 = new ds.Pilha();
    ds.Pilha pilha71 = new ds.Pilha();
    int i72 = pilha71.tamanho();
    boolean b73 = pilha71.vazia();
    int i74 = pilha71.tamanho();
    pilha70.empilha((java.lang.Object)pilha71);
    pilha62.empilha((java.lang.Object)pilha70);
    ds.Pilha pilha77 = new ds.Pilha();
    pilha77.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha80 = new ds.Pilha();
    int i81 = pilha80.tamanho();
    pilha80.empilha((java.lang.Object)"hi!");
    java.lang.Object obj84 = pilha80.desempilha();
    pilha80.empilha((java.lang.Object)'4');
    pilha77.empilha((java.lang.Object)pilha80);
    ds.Pilha pilha88 = new ds.Pilha();
    int i89 = pilha88.tamanho();
    pilha88.empilha((java.lang.Object)"hi!");
    java.lang.Object obj92 = pilha88.desempilha();
    pilha88.empilha((java.lang.Object)'4');
    pilha80.empilha((java.lang.Object)'4');
    pilha62.empilha((java.lang.Object)pilha80);
    pilha51.empilha((java.lang.Object)pilha62);
    pilha42.empilha((java.lang.Object)pilha62);
    pilha0.empilha((java.lang.Object)pilha42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + 100.0d+ "'", obj19.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj30 + "' != '" + "hi!"+ "'", obj30.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj50 + "' != '" + "hi!"+ "'", obj50.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (short)1+ "'", obj61.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i63 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i65 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i66 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i72 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i74 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i81 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj84 + "' != '" + "hi!"+ "'", obj84.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i89 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj92 + "' != '" + "hi!"+ "'", obj92.equals("hi!"));

  }

  @Test
  public void test317() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test317"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha9 = new ds.Pilha();
    pilha9.empilha((java.lang.Object)(short)0);
    pilha9.empilha((java.lang.Object)(byte)10);
    pilha9.empilha((java.lang.Object)100L);
    pilha0.empilha((java.lang.Object)100L);
    boolean b17 = pilha0.vazia();
    int i18 = pilha0.tamanho();
    int i19 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 3);

  }

  @Test
  public void test318() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test318"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    boolean b18 = pilha0.vazia();
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    int i25 = pilha20.tamanho();
    pilha0.empilha((java.lang.Object)i25);
    ds.Pilha pilha27 = new ds.Pilha();
    int i28 = pilha27.tamanho();
    boolean b29 = pilha27.vazia();
    int i30 = pilha27.tamanho();
    int i31 = pilha27.tamanho();
    pilha27.empilha((java.lang.Object)(byte)10);
    boolean b34 = pilha27.vazia();
    pilha0.empilha((java.lang.Object)b34);
    java.lang.Object obj36 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (byte)10+ "'", obj17.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj36 + "' != '" + false+ "'", obj36.equals(false));

  }

  @Test
  public void test319() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test319"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    boolean b5 = pilha0.vazia();
    boolean b6 = pilha0.vazia();
    java.lang.Object obj7 = null;
    pilha0.empilha(obj7);
    int i9 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 1);

  }

  @Test
  public void test320() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test320"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    int i16 = pilha0.tamanho();
    java.lang.Object obj17 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);

  }

  @Test
  public void test321() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test321"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    int i6 = pilha5.tamanho();
    pilha5.empilha((java.lang.Object)"hi!");
    java.lang.Object obj9 = null;
    pilha5.empilha(obj9);
    int i11 = pilha5.tamanho();
    java.lang.Object obj12 = pilha5.desempilha();
    pilha0.empilha((java.lang.Object)pilha5);
    ds.Pilha pilha14 = new ds.Pilha();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    pilha14.empilha((java.lang.Object)pilha15);
    pilha15.empilha((java.lang.Object)100);
    ds.Pilha pilha22 = new ds.Pilha();
    boolean b23 = pilha22.vazia();
    int i24 = pilha22.tamanho();
    int i25 = pilha22.tamanho();
    int i26 = pilha22.tamanho();
    int i27 = pilha22.tamanho();
    pilha15.empilha((java.lang.Object)pilha22);
    boolean b29 = pilha15.vazia();
    pilha0.empilha((java.lang.Object)pilha15);
    int i31 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 2);

  }

  @Test
  public void test322() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test322"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    pilha0.empilha((java.lang.Object)i10);
    boolean b12 = pilha0.vazia();
    java.lang.Object obj13 = pilha0.desempilha();
    java.lang.Object obj14 = pilha0.desempilha();
    boolean b15 = pilha0.vazia();
    int i16 = pilha0.tamanho();
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    int i21 = pilha17.tamanho();
    int i22 = pilha17.tamanho();
    ds.Pilha pilha23 = new ds.Pilha();
    int i24 = pilha23.tamanho();
    pilha23.empilha((java.lang.Object)"hi!");
    java.lang.Object obj27 = pilha23.desempilha();
    pilha23.empilha((java.lang.Object)'4');
    pilha23.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha32 = new ds.Pilha();
    int i33 = pilha32.tamanho();
    boolean b34 = pilha32.vazia();
    int i35 = pilha32.tamanho();
    int i36 = pilha32.tamanho();
    pilha32.empilha((java.lang.Object)(byte)10);
    pilha32.empilha((java.lang.Object)10.0d);
    java.lang.Object obj41 = pilha32.desempilha();
    ds.Pilha pilha42 = new ds.Pilha();
    int i43 = pilha42.tamanho();
    boolean b44 = pilha42.vazia();
    int i45 = pilha42.tamanho();
    int i46 = pilha42.tamanho();
    pilha42.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj49 = pilha42.desempilha();
    int i50 = pilha42.tamanho();
    pilha32.empilha((java.lang.Object)i50);
    pilha23.empilha((java.lang.Object)i50);
    pilha17.empilha((java.lang.Object)pilha23);
    ds.Pilha pilha54 = new ds.Pilha();
    int i55 = pilha54.tamanho();
    boolean b56 = pilha54.vazia();
    int i57 = pilha54.tamanho();
    int i58 = pilha54.tamanho();
    pilha54.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha61 = new ds.Pilha();
    int i62 = pilha61.tamanho();
    boolean b63 = pilha61.vazia();
    int i64 = pilha61.tamanho();
    int i65 = pilha61.tamanho();
    pilha61.empilha((java.lang.Object)(byte)10);
    pilha54.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj69 = pilha54.desempilha();
    boolean b70 = pilha54.vazia();
    java.lang.Object obj71 = pilha54.desempilha();
    boolean b72 = pilha54.vazia();
    boolean b73 = pilha54.vazia();
    pilha54.empilha((java.lang.Object)'#');
    boolean b76 = pilha54.vazia();
    pilha17.empilha((java.lang.Object)pilha54);
    pilha0.empilha((java.lang.Object)pilha54);
    ds.Pilha pilha79 = new ds.Pilha();
    int i80 = pilha79.tamanho();
    pilha79.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj83 = null;
    pilha79.empilha(obj83);
    java.lang.Object obj85 = pilha79.desempilha();
    pilha54.empilha((java.lang.Object)pilha79);
    int i87 = pilha54.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj13 + "' != '" + 0+ "'", obj13.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj14 + "' != '" + 1+ "'", obj14.equals(1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj27 + "' != '" + "hi!"+ "'", obj27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj41 + "' != '" + 10.0d+ "'", obj41.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i46 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (byte)10+ "'", obj49.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i50 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i57 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i62 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i64 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i65 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj69 + "' != '" + (byte)10+ "'", obj69.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj71 + "' != '" + (byte)10+ "'", obj71.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i80 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i87 == 2);

  }

  @Test
  public void test323() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test323"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    int i16 = pilha11.tamanho();
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    int i19 = pilha17.tamanho();
    int i20 = pilha17.tamanho();
    pilha11.empilha((java.lang.Object)pilha17);
    pilha0.empilha((java.lang.Object)pilha17);
    ds.Pilha pilha23 = new ds.Pilha();
    int i24 = pilha23.tamanho();
    pilha23.empilha((java.lang.Object)"hi!");
    java.lang.Object obj27 = null;
    pilha23.empilha(obj27);
    int i29 = pilha23.tamanho();
    java.lang.Object obj30 = pilha23.desempilha();
    java.lang.Object obj31 = pilha23.desempilha();
    ds.Pilha pilha32 = new ds.Pilha();
    ds.Pilha pilha33 = new ds.Pilha();
    int i34 = pilha33.tamanho();
    boolean b35 = pilha33.vazia();
    int i36 = pilha33.tamanho();
    pilha32.empilha((java.lang.Object)pilha33);
    pilha23.empilha((java.lang.Object)pilha33);
    boolean b39 = pilha23.vazia();
    pilha23.empilha((java.lang.Object)' ');
    java.lang.Object obj42 = pilha23.desempilha();
    int i43 = pilha23.tamanho();
    pilha17.empilha((java.lang.Object)pilha23);
    int i45 = pilha17.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + "hi!"+ "'", obj9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj31 + "' != '" + "hi!"+ "'", obj31.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj42 + "' != '" + ' '+ "'", obj42.equals(' '));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 1);

  }

  @Test
  public void test324() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test324"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    boolean b7 = pilha0.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha8);
    ds.Pilha pilha15 = new ds.Pilha();
    pilha15.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)"hi!");
    java.lang.Object obj22 = pilha18.desempilha();
    pilha18.empilha((java.lang.Object)'4');
    pilha15.empilha((java.lang.Object)pilha18);
    ds.Pilha pilha26 = new ds.Pilha();
    int i27 = pilha26.tamanho();
    pilha26.empilha((java.lang.Object)"hi!");
    java.lang.Object obj30 = pilha26.desempilha();
    pilha26.empilha((java.lang.Object)'4');
    pilha18.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha18);
    java.lang.Object obj35 = pilha0.desempilha();
    ds.Pilha pilha36 = new ds.Pilha();
    int i37 = pilha36.tamanho();
    boolean b38 = pilha36.vazia();
    int i39 = pilha36.tamanho();
    int i40 = pilha36.tamanho();
    int i41 = pilha36.tamanho();
    pilha36.empilha((java.lang.Object)10.0f);
    java.lang.Object obj44 = pilha36.desempilha();
    pilha0.empilha((java.lang.Object)pilha36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj22 + "' != '" + "hi!"+ "'", obj22.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj30 + "' != '" + "hi!"+ "'", obj30.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj44 + "' != '" + 10.0f+ "'", obj44.equals(10.0f));

  }

  @Test
  public void test325() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test325"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    ds.Pilha pilha4 = new ds.Pilha();
    ds.Pilha pilha5 = new ds.Pilha();
    int i6 = pilha5.tamanho();
    boolean b7 = pilha5.vazia();
    int i8 = pilha5.tamanho();
    pilha4.empilha((java.lang.Object)pilha5);
    boolean b10 = pilha4.vazia();
    pilha4.empilha((java.lang.Object)(short)1);
    boolean b13 = pilha4.vazia();
    java.lang.Object obj14 = pilha4.desempilha();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)1);
    boolean b22 = pilha15.vazia();
    ds.Pilha pilha23 = new ds.Pilha();
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    boolean b26 = pilha24.vazia();
    int i27 = pilha24.tamanho();
    pilha23.empilha((java.lang.Object)pilha24);
    pilha15.empilha((java.lang.Object)pilha23);
    ds.Pilha pilha30 = new ds.Pilha();
    pilha30.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha33 = new ds.Pilha();
    int i34 = pilha33.tamanho();
    pilha33.empilha((java.lang.Object)"hi!");
    java.lang.Object obj37 = pilha33.desempilha();
    pilha33.empilha((java.lang.Object)'4');
    pilha30.empilha((java.lang.Object)pilha33);
    ds.Pilha pilha41 = new ds.Pilha();
    int i42 = pilha41.tamanho();
    pilha41.empilha((java.lang.Object)"hi!");
    java.lang.Object obj45 = pilha41.desempilha();
    pilha41.empilha((java.lang.Object)'4');
    pilha33.empilha((java.lang.Object)'4');
    pilha15.empilha((java.lang.Object)pilha33);
    pilha4.empilha((java.lang.Object)pilha15);
    ds.Pilha pilha51 = new ds.Pilha();
    int i52 = pilha51.tamanho();
    pilha51.empilha((java.lang.Object)"hi!");
    java.lang.Object obj55 = null;
    pilha51.empilha(obj55);
    pilha51.empilha((java.lang.Object)100.0d);
    java.lang.Object obj59 = pilha51.desempilha();
    pilha15.empilha((java.lang.Object)pilha51);
    ds.Pilha pilha61 = new ds.Pilha();
    int i62 = pilha61.tamanho();
    boolean b63 = pilha61.vazia();
    int i64 = pilha61.tamanho();
    int i65 = pilha61.tamanho();
    pilha61.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha68 = new ds.Pilha();
    int i69 = pilha68.tamanho();
    boolean b70 = pilha68.vazia();
    int i71 = pilha68.tamanho();
    int i72 = pilha68.tamanho();
    pilha68.empilha((java.lang.Object)(byte)10);
    pilha61.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj76 = pilha61.desempilha();
    boolean b77 = pilha61.vazia();
    java.lang.Object obj78 = pilha61.desempilha();
    boolean b79 = pilha61.vazia();
    ds.Pilha pilha80 = new ds.Pilha();
    ds.Pilha pilha81 = new ds.Pilha();
    int i82 = pilha81.tamanho();
    boolean b83 = pilha81.vazia();
    int i84 = pilha81.tamanho();
    pilha80.empilha((java.lang.Object)pilha81);
    int i86 = pilha81.tamanho();
    pilha61.empilha((java.lang.Object)i86);
    java.lang.Object obj88 = pilha61.desempilha();
    pilha15.empilha((java.lang.Object)pilha61);
    pilha0.empilha((java.lang.Object)pilha61);
    boolean b91 = pilha61.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short)1+ "'", obj14.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj37 + "' != '" + "hi!"+ "'", obj37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj45 + "' != '" + "hi!"+ "'", obj45.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj59 + "' != '" + 100.0d+ "'", obj59.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i62 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i64 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i65 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i69 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i71 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i72 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj76 + "' != '" + (byte)10+ "'", obj76.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj78 + "' != '" + (byte)10+ "'", obj78.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i82 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b83 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i84 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i86 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj88 + "' != '" + 0+ "'", obj88.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b91 == true);

  }

  @Test
  public void test326() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test326"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    boolean b5 = pilha0.vazia();
    boolean b6 = pilha0.vazia();
    ds.Pilha pilha7 = new ds.Pilha();
    ds.Pilha pilha8 = new ds.Pilha();
    int i9 = pilha8.tamanho();
    boolean b10 = pilha8.vazia();
    int i11 = pilha8.tamanho();
    pilha7.empilha((java.lang.Object)pilha8);
    int i13 = pilha7.tamanho();
    java.lang.Object obj14 = pilha7.desempilha();
    pilha0.empilha((java.lang.Object)pilha7);
    ds.Pilha pilha16 = new ds.Pilha();
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    pilha16.empilha((java.lang.Object)pilha17);
    boolean b22 = pilha16.vazia();
    pilha16.empilha((java.lang.Object)(short)1);
    boolean b25 = pilha16.vazia();
    java.lang.Object obj26 = pilha16.desempilha();
    ds.Pilha pilha27 = new ds.Pilha();
    int i28 = pilha27.tamanho();
    boolean b29 = pilha27.vazia();
    int i30 = pilha27.tamanho();
    int i31 = pilha27.tamanho();
    pilha27.empilha((java.lang.Object)1);
    boolean b34 = pilha27.vazia();
    ds.Pilha pilha35 = new ds.Pilha();
    ds.Pilha pilha36 = new ds.Pilha();
    int i37 = pilha36.tamanho();
    boolean b38 = pilha36.vazia();
    int i39 = pilha36.tamanho();
    pilha35.empilha((java.lang.Object)pilha36);
    pilha27.empilha((java.lang.Object)pilha35);
    ds.Pilha pilha42 = new ds.Pilha();
    pilha42.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha45 = new ds.Pilha();
    int i46 = pilha45.tamanho();
    pilha45.empilha((java.lang.Object)"hi!");
    java.lang.Object obj49 = pilha45.desempilha();
    pilha45.empilha((java.lang.Object)'4');
    pilha42.empilha((java.lang.Object)pilha45);
    ds.Pilha pilha53 = new ds.Pilha();
    int i54 = pilha53.tamanho();
    pilha53.empilha((java.lang.Object)"hi!");
    java.lang.Object obj57 = pilha53.desempilha();
    pilha53.empilha((java.lang.Object)'4');
    pilha45.empilha((java.lang.Object)'4');
    pilha27.empilha((java.lang.Object)pilha45);
    pilha16.empilha((java.lang.Object)pilha27);
    pilha7.empilha((java.lang.Object)pilha16);
    java.lang.Object obj64 = pilha16.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short)1+ "'", obj26.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i46 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj49 + "' != '" + "hi!"+ "'", obj49.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i54 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj57 + "' != '" + "hi!"+ "'", obj57.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj64);

  }

  @Test
  public void test327() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test327"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    int i8 = pilha0.tamanho();
    int i9 = pilha0.tamanho();
    int i10 = pilha0.tamanho();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)"hi!");
    java.lang.Object obj15 = null;
    pilha11.empilha(obj15);
    int i17 = pilha11.tamanho();
    java.lang.Object obj18 = pilha11.desempilha();
    java.lang.Object obj19 = pilha11.desempilha();
    ds.Pilha pilha20 = new ds.Pilha();
    ds.Pilha pilha21 = new ds.Pilha();
    int i22 = pilha21.tamanho();
    boolean b23 = pilha21.vazia();
    int i24 = pilha21.tamanho();
    pilha20.empilha((java.lang.Object)pilha21);
    boolean b26 = pilha20.vazia();
    pilha20.empilha((java.lang.Object)(short)1);
    boolean b29 = pilha20.vazia();
    java.lang.Object obj30 = pilha20.desempilha();
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    boolean b33 = pilha31.vazia();
    int i34 = pilha31.tamanho();
    int i35 = pilha31.tamanho();
    pilha31.empilha((java.lang.Object)1);
    boolean b38 = pilha31.vazia();
    ds.Pilha pilha39 = new ds.Pilha();
    ds.Pilha pilha40 = new ds.Pilha();
    int i41 = pilha40.tamanho();
    boolean b42 = pilha40.vazia();
    int i43 = pilha40.tamanho();
    pilha39.empilha((java.lang.Object)pilha40);
    pilha31.empilha((java.lang.Object)pilha39);
    ds.Pilha pilha46 = new ds.Pilha();
    pilha46.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha49 = new ds.Pilha();
    int i50 = pilha49.tamanho();
    pilha49.empilha((java.lang.Object)"hi!");
    java.lang.Object obj53 = pilha49.desempilha();
    pilha49.empilha((java.lang.Object)'4');
    pilha46.empilha((java.lang.Object)pilha49);
    ds.Pilha pilha57 = new ds.Pilha();
    int i58 = pilha57.tamanho();
    pilha57.empilha((java.lang.Object)"hi!");
    java.lang.Object obj61 = pilha57.desempilha();
    pilha57.empilha((java.lang.Object)'4');
    pilha49.empilha((java.lang.Object)'4');
    pilha31.empilha((java.lang.Object)pilha49);
    pilha20.empilha((java.lang.Object)pilha31);
    pilha11.empilha((java.lang.Object)pilha31);
    int i68 = pilha11.tamanho();
    boolean b69 = pilha11.vazia();
    pilha0.empilha((java.lang.Object)b69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + "hi!"+ "'", obj19.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (short)1+ "'", obj30.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i50 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj53 + "' != '" + "hi!"+ "'", obj53.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj61 + "' != '" + "hi!"+ "'", obj61.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);

  }

  @Test
  public void test328() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test328"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    int i15 = pilha9.tamanho();
    int i16 = pilha9.tamanho();
    pilha0.empilha((java.lang.Object)i16);
    boolean b18 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test329() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test329"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    int i18 = pilha0.tamanho();
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    boolean b21 = pilha19.vazia();
    int i22 = pilha19.tamanho();
    int i23 = pilha19.tamanho();
    ds.Pilha pilha24 = new ds.Pilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    pilha24.empilha((java.lang.Object)pilha25);
    boolean b30 = pilha24.vazia();
    pilha24.empilha((java.lang.Object)(short)1);
    pilha19.empilha((java.lang.Object)(short)1);
    ds.Pilha pilha34 = new ds.Pilha();
    ds.Pilha pilha35 = new ds.Pilha();
    int i36 = pilha35.tamanho();
    boolean b37 = pilha35.vazia();
    int i38 = pilha35.tamanho();
    pilha34.empilha((java.lang.Object)pilha35);
    int i40 = pilha34.tamanho();
    ds.Pilha pilha41 = new ds.Pilha();
    ds.Pilha pilha42 = new ds.Pilha();
    int i43 = pilha42.tamanho();
    boolean b44 = pilha42.vazia();
    int i45 = pilha42.tamanho();
    pilha41.empilha((java.lang.Object)pilha42);
    boolean b47 = pilha41.vazia();
    pilha41.empilha((java.lang.Object)(short)1);
    pilha34.empilha((java.lang.Object)pilha41);
    pilha19.empilha((java.lang.Object)pilha41);
    pilha0.empilha((java.lang.Object)pilha41);
    ds.Pilha pilha53 = new ds.Pilha();
    int i54 = pilha53.tamanho();
    pilha53.empilha((java.lang.Object)"hi!");
    java.lang.Object obj57 = null;
    pilha53.empilha(obj57);
    int i59 = pilha53.tamanho();
    java.lang.Object obj60 = pilha53.desempilha();
    java.lang.Object obj61 = pilha53.desempilha();
    ds.Pilha pilha62 = new ds.Pilha();
    ds.Pilha pilha63 = new ds.Pilha();
    int i64 = pilha63.tamanho();
    boolean b65 = pilha63.vazia();
    int i66 = pilha63.tamanho();
    pilha62.empilha((java.lang.Object)pilha63);
    pilha53.empilha((java.lang.Object)pilha63);
    ds.Pilha pilha69 = new ds.Pilha();
    pilha69.empilha((java.lang.Object)(short)0);
    pilha69.empilha((java.lang.Object)(byte)10);
    pilha53.empilha((java.lang.Object)pilha69);
    pilha0.empilha((java.lang.Object)pilha53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i54 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj61 + "' != '" + "hi!"+ "'", obj61.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i64 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i66 == 0);

  }

  @Test
  public void test330() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test330"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha9 = new ds.Pilha();
    pilha9.empilha((java.lang.Object)(short)0);
    pilha9.empilha((java.lang.Object)(byte)10);
    pilha9.empilha((java.lang.Object)100L);
    pilha0.empilha((java.lang.Object)100L);
    boolean b17 = pilha0.vazia();
    int i18 = pilha0.tamanho();
    java.lang.Object obj19 = null;
    pilha0.empilha(obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 3);

  }

  @Test
  public void test331() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test331"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    boolean b3 = pilha0.vazia();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    int i6 = pilha5.tamanho();
    pilha5.empilha((java.lang.Object)"hi!");
    java.lang.Object obj9 = null;
    pilha5.empilha(obj9);
    java.lang.Object obj11 = pilha5.desempilha();
    pilha0.empilha((java.lang.Object)pilha5);
    ds.Pilha pilha13 = new ds.Pilha();
    boolean b14 = pilha13.vazia();
    boolean b15 = pilha13.vazia();
    boolean b16 = pilha13.vazia();
    int i17 = pilha13.tamanho();
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)"hi!");
    java.lang.Object obj22 = null;
    pilha18.empilha(obj22);
    java.lang.Object obj24 = pilha18.desempilha();
    pilha13.empilha((java.lang.Object)pilha18);
    pilha5.empilha((java.lang.Object)pilha18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);

  }

  @Test
  public void test332() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test332"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj18 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (byte)10+ "'", obj17.equals((byte)10));

  }

  @Test
  public void test333() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test333"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    ds.Pilha pilha4 = new ds.Pilha();
    int i5 = pilha4.tamanho();
    pilha4.empilha((java.lang.Object)"hi!");
    java.lang.Object obj8 = pilha4.desempilha();
    pilha4.empilha((java.lang.Object)'4');
    pilha4.empilha((java.lang.Object)"hi!");
    pilha0.empilha((java.lang.Object)pilha4);
    ds.Pilha pilha14 = new ds.Pilha();
    int i15 = pilha14.tamanho();
    pilha14.empilha((java.lang.Object)"hi!");
    java.lang.Object obj18 = null;
    pilha14.empilha(obj18);
    int i20 = pilha14.tamanho();
    java.lang.Object obj21 = pilha14.desempilha();
    java.lang.Object obj22 = pilha14.desempilha();
    ds.Pilha pilha23 = new ds.Pilha();
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    boolean b26 = pilha24.vazia();
    int i27 = pilha24.tamanho();
    pilha23.empilha((java.lang.Object)pilha24);
    pilha14.empilha((java.lang.Object)pilha24);
    pilha0.empilha((java.lang.Object)pilha24);
    int i31 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj22 + "' != '" + "hi!"+ "'", obj22.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 2);

  }

  @Test
  public void test334() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test334"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    boolean b8 = pilha0.vazia();
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)1);
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    pilha11.empilha((java.lang.Object)i21);
    pilha11.empilha((java.lang.Object)'4');
    java.lang.Object obj25 = pilha11.desempilha();
    ds.Pilha pilha26 = new ds.Pilha();
    int i27 = pilha26.tamanho();
    boolean b28 = pilha26.vazia();
    int i29 = pilha26.tamanho();
    int i30 = pilha26.tamanho();
    ds.Pilha pilha31 = new ds.Pilha();
    ds.Pilha pilha32 = new ds.Pilha();
    int i33 = pilha32.tamanho();
    boolean b34 = pilha32.vazia();
    int i35 = pilha32.tamanho();
    pilha31.empilha((java.lang.Object)pilha32);
    boolean b37 = pilha31.vazia();
    pilha31.empilha((java.lang.Object)(short)1);
    pilha26.empilha((java.lang.Object)(short)1);
    ds.Pilha pilha41 = new ds.Pilha();
    ds.Pilha pilha42 = new ds.Pilha();
    int i43 = pilha42.tamanho();
    boolean b44 = pilha42.vazia();
    int i45 = pilha42.tamanho();
    pilha41.empilha((java.lang.Object)pilha42);
    int i47 = pilha41.tamanho();
    ds.Pilha pilha48 = new ds.Pilha();
    ds.Pilha pilha49 = new ds.Pilha();
    int i50 = pilha49.tamanho();
    boolean b51 = pilha49.vazia();
    int i52 = pilha49.tamanho();
    pilha48.empilha((java.lang.Object)pilha49);
    boolean b54 = pilha48.vazia();
    pilha48.empilha((java.lang.Object)(short)1);
    pilha41.empilha((java.lang.Object)pilha48);
    pilha26.empilha((java.lang.Object)pilha48);
    pilha11.empilha((java.lang.Object)pilha48);
    pilha0.empilha((java.lang.Object)pilha48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj25 + "' != '" + '4'+ "'", obj25.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i50 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);

  }

  @Test
  public void test335() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test335"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    boolean b5 = pilha3.vazia();
    int i6 = pilha3.tamanho();
    int i7 = pilha3.tamanho();
    int i8 = pilha3.tamanho();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = pilha9.desempilha();
    pilha9.empilha((java.lang.Object)'4');
    pilha9.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    int i22 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)(byte)10);
    pilha18.empilha((java.lang.Object)10.0d);
    java.lang.Object obj27 = pilha18.desempilha();
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    boolean b30 = pilha28.vazia();
    int i31 = pilha28.tamanho();
    int i32 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj35 = pilha28.desempilha();
    int i36 = pilha28.tamanho();
    pilha18.empilha((java.lang.Object)i36);
    pilha9.empilha((java.lang.Object)i36);
    pilha3.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha3);
    ds.Pilha pilha41 = new ds.Pilha();
    int i42 = pilha41.tamanho();
    boolean b43 = pilha41.vazia();
    int i44 = pilha41.tamanho();
    int i45 = pilha41.tamanho();
    pilha41.empilha((java.lang.Object)1);
    pilha41.empilha((java.lang.Object)3);
    pilha0.empilha((java.lang.Object)3);
    java.lang.Object obj51 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj13 + "' != '" + "hi!"+ "'", obj13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj27 + "' != '" + 10.0d+ "'", obj27.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte)10+ "'", obj35.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj51 + "' != '" + 3+ "'", obj51.equals(3));

  }

  @Test
  public void test336() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test336"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    int i6 = pilha0.tamanho();
    boolean b7 = pilha0.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    int i9 = pilha8.tamanho();
    boolean b10 = pilha8.vazia();
    int i11 = pilha8.tamanho();
    int i12 = pilha8.tamanho();
    pilha8.empilha((java.lang.Object)1);
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    pilha8.empilha((java.lang.Object)i18);
    boolean b20 = pilha8.vazia();
    java.lang.Object obj21 = pilha8.desempilha();
    boolean b22 = pilha8.vazia();
    java.lang.Object obj23 = pilha8.desempilha();
    pilha0.empilha(obj23);
    java.lang.Object obj25 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj21 + "' != '" + 0+ "'", obj21.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj23 + "' != '" + 1+ "'", obj23.equals(1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj25 + "' != '" + 1+ "'", obj25.equals(1));

  }

  @Test
  public void test337() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test337"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)100L);
    boolean b7 = pilha0.vazia();
    java.lang.Object obj8 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + 100L+ "'", obj8.equals(100L));

  }

  @Test
  public void test338() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test338"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    java.lang.Object obj16 = pilha0.desempilha();
    boolean b17 = pilha0.vazia();
    int i18 = pilha0.tamanho();
    int i19 = pilha0.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj20 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (byte)10+ "'", obj16.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);

  }

  @Test
  public void test339() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test339"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    boolean b15 = pilha9.vazia();
    pilha9.empilha((java.lang.Object)(short)1);
    boolean b18 = pilha9.vazia();
    java.lang.Object obj19 = pilha9.desempilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    int i24 = pilha20.tamanho();
    pilha20.empilha((java.lang.Object)1);
    boolean b27 = pilha20.vazia();
    ds.Pilha pilha28 = new ds.Pilha();
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    boolean b31 = pilha29.vazia();
    int i32 = pilha29.tamanho();
    pilha28.empilha((java.lang.Object)pilha29);
    pilha20.empilha((java.lang.Object)pilha28);
    ds.Pilha pilha35 = new ds.Pilha();
    pilha35.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha38 = new ds.Pilha();
    int i39 = pilha38.tamanho();
    pilha38.empilha((java.lang.Object)"hi!");
    java.lang.Object obj42 = pilha38.desempilha();
    pilha38.empilha((java.lang.Object)'4');
    pilha35.empilha((java.lang.Object)pilha38);
    ds.Pilha pilha46 = new ds.Pilha();
    int i47 = pilha46.tamanho();
    pilha46.empilha((java.lang.Object)"hi!");
    java.lang.Object obj50 = pilha46.desempilha();
    pilha46.empilha((java.lang.Object)'4');
    pilha38.empilha((java.lang.Object)'4');
    pilha20.empilha((java.lang.Object)pilha38);
    pilha9.empilha((java.lang.Object)pilha20);
    pilha0.empilha((java.lang.Object)pilha20);
    boolean b57 = pilha0.vazia();
    java.lang.Object obj58 = pilha0.desempilha();
    boolean b59 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (short)1+ "'", obj19.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj42 + "' != '" + "hi!"+ "'", obj42.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj50 + "' != '" + "hi!"+ "'", obj50.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);

  }

  @Test
  public void test340() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test340"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)1);
    boolean b18 = pilha11.vazia();
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    pilha11.empilha((java.lang.Object)pilha19);
    ds.Pilha pilha26 = new ds.Pilha();
    pilha26.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    pilha29.empilha((java.lang.Object)"hi!");
    java.lang.Object obj33 = pilha29.desempilha();
    pilha29.empilha((java.lang.Object)'4');
    pilha26.empilha((java.lang.Object)pilha29);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)"hi!");
    java.lang.Object obj41 = pilha37.desempilha();
    pilha37.empilha((java.lang.Object)'4');
    pilha29.empilha((java.lang.Object)'4');
    pilha11.empilha((java.lang.Object)pilha29);
    pilha0.empilha((java.lang.Object)pilha11);
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    pilha47.empilha((java.lang.Object)"hi!");
    java.lang.Object obj51 = null;
    pilha47.empilha(obj51);
    pilha47.empilha((java.lang.Object)100.0d);
    java.lang.Object obj55 = pilha47.desempilha();
    pilha11.empilha((java.lang.Object)pilha47);
    boolean b57 = pilha11.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + "hi!"+ "'", obj33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj41 + "' != '" + "hi!"+ "'", obj41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj55 + "' != '" + 100.0d+ "'", obj55.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == false);

  }

  @Test
  public void test341() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test341"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = pilha6.desempilha();
    pilha6.empilha((java.lang.Object)'4');
    pilha6.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)(byte)10);
    pilha15.empilha((java.lang.Object)10.0d);
    java.lang.Object obj24 = pilha15.desempilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    int i29 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj32 = pilha25.desempilha();
    int i33 = pilha25.tamanho();
    pilha15.empilha((java.lang.Object)i33);
    pilha6.empilha((java.lang.Object)i33);
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    boolean b39 = pilha37.vazia();
    int i40 = pilha37.tamanho();
    int i41 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha44 = new ds.Pilha();
    int i45 = pilha44.tamanho();
    boolean b46 = pilha44.vazia();
    int i47 = pilha44.tamanho();
    int i48 = pilha44.tamanho();
    pilha44.empilha((java.lang.Object)(byte)10);
    pilha37.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj52 = pilha37.desempilha();
    boolean b53 = pilha37.vazia();
    java.lang.Object obj54 = pilha37.desempilha();
    boolean b55 = pilha37.vazia();
    boolean b56 = pilha37.vazia();
    pilha37.empilha((java.lang.Object)'#');
    boolean b59 = pilha37.vazia();
    pilha0.empilha((java.lang.Object)pilha37);
    boolean b61 = pilha37.vazia();
    ds.Pilha pilha62 = new ds.Pilha();
    int i63 = pilha62.tamanho();
    pilha62.empilha((java.lang.Object)"hi!");
    java.lang.Object obj66 = null;
    pilha62.empilha(obj66);
    pilha62.empilha((java.lang.Object)100.0d);
    int i70 = pilha62.tamanho();
    java.lang.Object obj71 = pilha62.desempilha();
    pilha37.empilha((java.lang.Object)pilha62);
    ds.Pilha pilha73 = new ds.Pilha();
    pilha73.empilha((java.lang.Object)(short)0);
    boolean b76 = pilha73.vazia();
    pilha37.empilha((java.lang.Object)pilha73);
    boolean b78 = pilha37.vazia();
    java.lang.Object obj79 = pilha37.desempilha();
    java.lang.Object obj80 = pilha37.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + 10.0d+ "'", obj24.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte)10+ "'", obj32.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (byte)10+ "'", obj52.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (byte)10+ "'", obj54.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i63 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i70 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj71 + "' != '" + 100.0d+ "'", obj71.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj80);

  }

  @Test
  public void test342() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test342"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    boolean b5 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test343() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test343"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = pilha3.desempilha();
    pilha3.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha3);
    int i11 = pilha3.tamanho();
    java.lang.Object obj12 = pilha3.desempilha();
    boolean b13 = pilha3.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + "hi!"+ "'", obj7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj12 + "' != '" + '4'+ "'", obj12.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);

  }

  @Test
  public void test344() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test344"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)(-1));
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    int i6 = pilha5.tamanho();
    pilha5.empilha((java.lang.Object)"hi!");
    java.lang.Object obj9 = pilha5.desempilha();
    boolean b10 = pilha5.vazia();
    pilha0.empilha((java.lang.Object)pilha5);
    boolean b12 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + "hi!"+ "'", obj9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == false);

  }

  @Test
  public void test345() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test345"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)100L);
    pilha0.empilha((java.lang.Object)100);
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    int i11 = pilha0.tamanho();
    ds.Pilha pilha12 = new ds.Pilha();
    int i13 = pilha12.tamanho();
    pilha12.empilha((java.lang.Object)"hi!");
    java.lang.Object obj16 = pilha12.desempilha();
    boolean b17 = pilha12.vazia();
    pilha0.empilha((java.lang.Object)pilha12);
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    pilha19.empilha((java.lang.Object)"hi!");
    java.lang.Object obj23 = pilha19.desempilha();
    pilha19.empilha((java.lang.Object)'4');
    boolean b26 = pilha19.vazia();
    pilha0.empilha((java.lang.Object)pilha19);
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    boolean b30 = pilha28.vazia();
    int i31 = pilha28.tamanho();
    int i32 = pilha28.tamanho();
    int i33 = pilha28.tamanho();
    ds.Pilha pilha34 = new ds.Pilha();
    int i35 = pilha34.tamanho();
    int i36 = pilha34.tamanho();
    int i37 = pilha34.tamanho();
    pilha28.empilha((java.lang.Object)pilha34);
    ds.Pilha pilha39 = new ds.Pilha();
    int i40 = pilha39.tamanho();
    boolean b41 = pilha39.vazia();
    int i42 = pilha39.tamanho();
    int i43 = pilha39.tamanho();
    pilha39.empilha((java.lang.Object)1);
    ds.Pilha pilha46 = new ds.Pilha();
    int i47 = pilha46.tamanho();
    boolean b48 = pilha46.vazia();
    int i49 = pilha46.tamanho();
    pilha39.empilha((java.lang.Object)i49);
    pilha39.empilha((java.lang.Object)'4');
    int i53 = pilha39.tamanho();
    java.lang.Object obj54 = pilha39.desempilha();
    pilha34.empilha(obj54);
    pilha34.empilha((java.lang.Object)(short)(-1));
    int i58 = pilha34.tamanho();
    int i59 = pilha34.tamanho();
    pilha19.empilha((java.lang.Object)pilha34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100+ "'", obj9.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj16 + "' != '" + "hi!"+ "'", obj16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj23 + "' != '" + "hi!"+ "'", obj23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i53 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj54 + "' != '" + '4'+ "'", obj54.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == 2);

  }

  @Test
  public void test346() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test346"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    boolean b5 = pilha3.vazia();
    int i6 = pilha3.tamanho();
    int i7 = pilha3.tamanho();
    int i8 = pilha3.tamanho();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = pilha9.desempilha();
    pilha9.empilha((java.lang.Object)'4');
    pilha9.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    int i22 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)(byte)10);
    pilha18.empilha((java.lang.Object)10.0d);
    java.lang.Object obj27 = pilha18.desempilha();
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    boolean b30 = pilha28.vazia();
    int i31 = pilha28.tamanho();
    int i32 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj35 = pilha28.desempilha();
    int i36 = pilha28.tamanho();
    pilha18.empilha((java.lang.Object)i36);
    pilha9.empilha((java.lang.Object)i36);
    pilha3.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha3);
    boolean b41 = pilha0.vazia();
    java.lang.Object obj42 = pilha0.desempilha();
    boolean b43 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj13 + "' != '" + "hi!"+ "'", obj13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj27 + "' != '" + 10.0d+ "'", obj27.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte)10+ "'", obj35.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);

  }

  @Test
  public void test347() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test347"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = pilha6.desempilha();
    pilha6.empilha((java.lang.Object)'4');
    pilha6.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)(byte)10);
    pilha15.empilha((java.lang.Object)10.0d);
    java.lang.Object obj24 = pilha15.desempilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    int i29 = pilha25.tamanho();
    pilha25.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj32 = pilha25.desempilha();
    int i33 = pilha25.tamanho();
    pilha15.empilha((java.lang.Object)i33);
    pilha6.empilha((java.lang.Object)i33);
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha37 = new ds.Pilha();
    ds.Pilha pilha38 = new ds.Pilha();
    int i39 = pilha38.tamanho();
    boolean b40 = pilha38.vazia();
    int i41 = pilha38.tamanho();
    pilha37.empilha((java.lang.Object)pilha38);
    boolean b43 = pilha37.vazia();
    pilha37.empilha((java.lang.Object)(short)1);
    boolean b46 = pilha37.vazia();
    java.lang.Object obj47 = pilha37.desempilha();
    java.lang.Object obj48 = pilha37.desempilha();
    pilha0.empilha(obj48);
    boolean b50 = pilha0.vazia();
    int i51 = pilha0.tamanho();
    boolean b52 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + 10.0d+ "'", obj24.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte)10+ "'", obj32.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (short)1+ "'", obj47.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == false);

  }

  @Test
  public void test348() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test348"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    boolean b9 = pilha0.vazia();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)"hi!");
    java.lang.Object obj14 = null;
    pilha10.empilha(obj14);
    pilha10.empilha((java.lang.Object)100.0d);
    int i18 = pilha10.tamanho();
    java.lang.Object obj19 = pilha10.desempilha();
    int i20 = pilha10.tamanho();
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b22 = pilha10.vazia();
    ds.Pilha pilha23 = new ds.Pilha();
    int i24 = pilha23.tamanho();
    pilha23.empilha((java.lang.Object)(byte)(-1));
    int i27 = pilha23.tamanho();
    int i28 = pilha23.tamanho();
    int i29 = pilha23.tamanho();
    ds.Pilha pilha30 = new ds.Pilha();
    int i31 = pilha30.tamanho();
    boolean b32 = pilha30.vazia();
    int i33 = pilha30.tamanho();
    int i34 = pilha30.tamanho();
    pilha30.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    boolean b39 = pilha37.vazia();
    int i40 = pilha37.tamanho();
    int i41 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)(byte)10);
    pilha30.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj45 = pilha30.desempilha();
    boolean b46 = pilha30.vazia();
    java.lang.Object obj47 = pilha30.desempilha();
    boolean b48 = pilha30.vazia();
    ds.Pilha pilha49 = new ds.Pilha();
    ds.Pilha pilha50 = new ds.Pilha();
    int i51 = pilha50.tamanho();
    boolean b52 = pilha50.vazia();
    int i53 = pilha50.tamanho();
    pilha49.empilha((java.lang.Object)pilha50);
    int i55 = pilha50.tamanho();
    pilha30.empilha((java.lang.Object)i55);
    pilha23.empilha((java.lang.Object)i55);
    pilha10.empilha((java.lang.Object)i55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj19 + "' != '" + 100.0d+ "'", obj19.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj45 + "' != '" + (byte)10+ "'", obj45.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (byte)10+ "'", obj47.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 0);

  }

  @Test
  public void test349() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test349"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    boolean b5 = pilha0.vazia();
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(byte)0);
    boolean b9 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);

  }

  @Test
  public void test350() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test350"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    boolean b18 = pilha0.vazia();
    boolean b19 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)'#');
    boolean b22 = pilha0.vazia();
    ds.Pilha pilha23 = new ds.Pilha();
    int i24 = pilha23.tamanho();
    pilha23.empilha((java.lang.Object)"hi!");
    java.lang.Object obj27 = null;
    pilha23.empilha(obj27);
    int i29 = pilha23.tamanho();
    java.lang.Object obj30 = pilha23.desempilha();
    java.lang.Object obj31 = pilha23.desempilha();
    ds.Pilha pilha32 = new ds.Pilha();
    ds.Pilha pilha33 = new ds.Pilha();
    int i34 = pilha33.tamanho();
    boolean b35 = pilha33.vazia();
    int i36 = pilha33.tamanho();
    pilha32.empilha((java.lang.Object)pilha33);
    pilha23.empilha((java.lang.Object)pilha33);
    boolean b39 = pilha23.vazia();
    int i40 = pilha23.tamanho();
    pilha0.empilha((java.lang.Object)pilha23);
    int i42 = pilha23.tamanho();
    ds.Pilha pilha43 = new ds.Pilha();
    ds.Pilha pilha44 = new ds.Pilha();
    int i45 = pilha44.tamanho();
    boolean b46 = pilha44.vazia();
    int i47 = pilha44.tamanho();
    pilha43.empilha((java.lang.Object)pilha44);
    boolean b49 = pilha43.vazia();
    java.lang.Object obj50 = pilha43.desempilha();
    pilha23.empilha((java.lang.Object)pilha43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (byte)10+ "'", obj17.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj31 + "' != '" + "hi!"+ "'", obj31.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj50);

  }

  @Test
  public void test351() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test351"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    int i11 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj15 = pilha0.desempilha();
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    boolean b18 = pilha0.vazia();
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    int i25 = pilha20.tamanho();
    pilha0.empilha((java.lang.Object)i25);
    java.lang.Object obj27 = pilha0.desempilha();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj28 = pilha0.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte)10+ "'", obj15.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (byte)10+ "'", obj17.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj27 + "' != '" + 0+ "'", obj27.equals(0));

  }

  @Test
  public void test352() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test352"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    int i16 = pilha11.tamanho();
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    int i19 = pilha17.tamanho();
    int i20 = pilha17.tamanho();
    pilha11.empilha((java.lang.Object)pilha17);
    pilha0.empilha((java.lang.Object)pilha17);
    int i23 = pilha17.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj24 = pilha17.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + "hi!"+ "'", obj9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);

  }

  @Test
  public void test353() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test353"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    int i8 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 2);

  }

  @Test
  public void test354() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test354"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    int i18 = pilha0.tamanho();
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    boolean b21 = pilha19.vazia();
    int i22 = pilha19.tamanho();
    int i23 = pilha19.tamanho();
    ds.Pilha pilha24 = new ds.Pilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    pilha24.empilha((java.lang.Object)pilha25);
    boolean b30 = pilha24.vazia();
    pilha24.empilha((java.lang.Object)(short)1);
    pilha19.empilha((java.lang.Object)(short)1);
    ds.Pilha pilha34 = new ds.Pilha();
    ds.Pilha pilha35 = new ds.Pilha();
    int i36 = pilha35.tamanho();
    boolean b37 = pilha35.vazia();
    int i38 = pilha35.tamanho();
    pilha34.empilha((java.lang.Object)pilha35);
    int i40 = pilha34.tamanho();
    ds.Pilha pilha41 = new ds.Pilha();
    ds.Pilha pilha42 = new ds.Pilha();
    int i43 = pilha42.tamanho();
    boolean b44 = pilha42.vazia();
    int i45 = pilha42.tamanho();
    pilha41.empilha((java.lang.Object)pilha42);
    boolean b47 = pilha41.vazia();
    pilha41.empilha((java.lang.Object)(short)1);
    pilha34.empilha((java.lang.Object)pilha41);
    pilha19.empilha((java.lang.Object)pilha41);
    pilha0.empilha((java.lang.Object)pilha41);
    ds.Pilha pilha53 = new ds.Pilha();
    int i54 = pilha53.tamanho();
    pilha53.empilha((java.lang.Object)"hi!");
    java.lang.Object obj57 = null;
    pilha53.empilha(obj57);
    int i59 = pilha53.tamanho();
    java.lang.Object obj60 = pilha53.desempilha();
    java.lang.Object obj61 = pilha53.desempilha();
    ds.Pilha pilha62 = new ds.Pilha();
    ds.Pilha pilha63 = new ds.Pilha();
    int i64 = pilha63.tamanho();
    boolean b65 = pilha63.vazia();
    int i66 = pilha63.tamanho();
    pilha62.empilha((java.lang.Object)pilha63);
    pilha53.empilha((java.lang.Object)pilha63);
    ds.Pilha pilha69 = new ds.Pilha();
    pilha69.empilha((java.lang.Object)(short)0);
    pilha69.empilha((java.lang.Object)(byte)10);
    pilha53.empilha((java.lang.Object)pilha69);
    pilha0.empilha((java.lang.Object)pilha69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i54 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj61 + "' != '" + "hi!"+ "'", obj61.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i64 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i66 == 0);

  }

  @Test
  public void test355() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test355"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    java.lang.Object obj9 = pilha0.desempilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)1);
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    pilha10.empilha((java.lang.Object)i20);
    pilha10.empilha((java.lang.Object)'4');
    int i24 = pilha10.tamanho();
    pilha0.empilha((java.lang.Object)pilha10);
    java.lang.Object obj26 = pilha0.desempilha();
    int i27 = pilha0.tamanho();
    java.lang.Object obj28 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100.0d+ "'", obj9.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj28);

  }

  @Test
  public void test356() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test356"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    int i13 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)(byte)10);
    pilha9.empilha((java.lang.Object)10.0d);
    java.lang.Object obj18 = pilha9.desempilha();
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    boolean b21 = pilha19.vazia();
    int i22 = pilha19.tamanho();
    int i23 = pilha19.tamanho();
    pilha19.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj26 = pilha19.desempilha();
    int i27 = pilha19.tamanho();
    pilha9.empilha((java.lang.Object)i27);
    pilha0.empilha((java.lang.Object)i27);
    int i30 = pilha0.tamanho();
    int i31 = pilha0.tamanho();
    int i32 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 10.0d+ "'", obj18.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte)10+ "'", obj26.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 3);

  }

  @Test
  public void test357() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test357"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)1);
    boolean b18 = pilha11.vazia();
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    pilha11.empilha((java.lang.Object)pilha19);
    ds.Pilha pilha26 = new ds.Pilha();
    pilha26.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    pilha29.empilha((java.lang.Object)"hi!");
    java.lang.Object obj33 = pilha29.desempilha();
    pilha29.empilha((java.lang.Object)'4');
    pilha26.empilha((java.lang.Object)pilha29);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)"hi!");
    java.lang.Object obj41 = pilha37.desempilha();
    pilha37.empilha((java.lang.Object)'4');
    pilha29.empilha((java.lang.Object)'4');
    pilha11.empilha((java.lang.Object)pilha29);
    pilha0.empilha((java.lang.Object)pilha11);
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    pilha47.empilha((java.lang.Object)"hi!");
    java.lang.Object obj51 = null;
    pilha47.empilha(obj51);
    pilha47.empilha((java.lang.Object)100.0d);
    java.lang.Object obj55 = pilha47.desempilha();
    pilha11.empilha((java.lang.Object)pilha47);
    ds.Pilha pilha57 = new ds.Pilha();
    int i58 = pilha57.tamanho();
    boolean b59 = pilha57.vazia();
    int i60 = pilha57.tamanho();
    int i61 = pilha57.tamanho();
    pilha57.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha64 = new ds.Pilha();
    int i65 = pilha64.tamanho();
    boolean b66 = pilha64.vazia();
    int i67 = pilha64.tamanho();
    int i68 = pilha64.tamanho();
    pilha64.empilha((java.lang.Object)(byte)10);
    pilha57.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj72 = pilha57.desempilha();
    boolean b73 = pilha57.vazia();
    java.lang.Object obj74 = pilha57.desempilha();
    boolean b75 = pilha57.vazia();
    ds.Pilha pilha76 = new ds.Pilha();
    ds.Pilha pilha77 = new ds.Pilha();
    int i78 = pilha77.tamanho();
    boolean b79 = pilha77.vazia();
    int i80 = pilha77.tamanho();
    pilha76.empilha((java.lang.Object)pilha77);
    int i82 = pilha77.tamanho();
    pilha57.empilha((java.lang.Object)i82);
    java.lang.Object obj84 = pilha57.desempilha();
    pilha11.empilha((java.lang.Object)pilha57);
    int i86 = pilha57.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj87 = pilha57.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + "hi!"+ "'", obj33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj41 + "' != '" + "hi!"+ "'", obj41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj55 + "' != '" + 100.0d+ "'", obj55.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i60 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i65 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i67 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj72 + "' != '" + (byte)10+ "'", obj72.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj74 + "' != '" + (byte)10+ "'", obj74.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i78 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i80 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i82 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj84 + "' != '" + 0+ "'", obj84.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i86 == 0);

  }

  @Test
  public void test358() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test358"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(short)10);
    ds.Pilha pilha8 = new ds.Pilha();
    pilha8.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)"hi!");
    java.lang.Object obj15 = pilha11.desempilha();
    pilha11.empilha((java.lang.Object)'4');
    pilha8.empilha((java.lang.Object)pilha11);
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    pilha19.empilha((java.lang.Object)"hi!");
    java.lang.Object obj23 = pilha19.desempilha();
    pilha19.empilha((java.lang.Object)'4');
    pilha11.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha11);
    java.lang.Object obj28 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + "hi!"+ "'", obj15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj23 + "' != '" + "hi!"+ "'", obj23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj28);

  }

  @Test
  public void test359() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test359"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    int i16 = pilha10.tamanho();
    int i17 = pilha10.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);

  }

  @Test
  public void test360() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test360"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    int i8 = pilha0.tamanho();
    int i9 = pilha0.tamanho();
    java.lang.Object obj10 = pilha0.desempilha();
    int i11 = pilha0.tamanho();
    ds.Pilha pilha12 = new ds.Pilha();
    ds.Pilha pilha13 = new ds.Pilha();
    int i14 = pilha13.tamanho();
    boolean b15 = pilha13.vazia();
    int i16 = pilha13.tamanho();
    pilha12.empilha((java.lang.Object)pilha13);
    boolean b18 = pilha12.vazia();
    pilha12.empilha((java.lang.Object)(short)1);
    boolean b21 = pilha12.vazia();
    ds.Pilha pilha22 = new ds.Pilha();
    int i23 = pilha22.tamanho();
    pilha22.empilha((java.lang.Object)"hi!");
    java.lang.Object obj26 = null;
    pilha22.empilha(obj26);
    int i28 = pilha22.tamanho();
    int i29 = pilha22.tamanho();
    java.lang.Object obj30 = pilha22.desempilha();
    pilha12.empilha((java.lang.Object)pilha22);
    java.lang.Object obj32 = pilha12.desempilha();
    int i33 = pilha12.tamanho();
    java.lang.Object obj34 = pilha12.desempilha();
    pilha0.empilha((java.lang.Object)pilha12);
    ds.Pilha pilha36 = new ds.Pilha();
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    boolean b39 = pilha37.vazia();
    int i40 = pilha37.tamanho();
    pilha36.empilha((java.lang.Object)pilha37);
    int i42 = pilha36.tamanho();
    pilha12.empilha((java.lang.Object)i42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short)1+ "'", obj34.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 1);

  }

  @Test
  public void test361() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test361"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    int i2 = pilha0.tamanho();
    ds.Pilha pilha3 = new ds.Pilha();
    boolean b4 = pilha3.vazia();
    int i5 = pilha3.tamanho();
    boolean b6 = pilha3.vazia();
    pilha0.empilha((java.lang.Object)b6);
    ds.Pilha pilha8 = new ds.Pilha();
    int i9 = pilha8.tamanho();
    boolean b10 = pilha8.vazia();
    int i11 = pilha8.tamanho();
    int i12 = pilha8.tamanho();
    pilha8.empilha((java.lang.Object)(byte)10);
    pilha8.empilha((java.lang.Object)10.0d);
    ds.Pilha pilha17 = new ds.Pilha();
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    pilha17.empilha((java.lang.Object)pilha18);
    boolean b23 = pilha17.vazia();
    pilha17.empilha((java.lang.Object)(short)1);
    boolean b26 = pilha17.vazia();
    java.lang.Object obj27 = pilha17.desempilha();
    pilha17.empilha((java.lang.Object)100.0f);
    int i30 = pilha17.tamanho();
    pilha8.empilha((java.lang.Object)i30);
    ds.Pilha pilha32 = new ds.Pilha();
    int i33 = pilha32.tamanho();
    boolean b34 = pilha32.vazia();
    int i35 = pilha32.tamanho();
    int i36 = pilha32.tamanho();
    pilha32.empilha((java.lang.Object)1);
    boolean b39 = pilha32.vazia();
    ds.Pilha pilha40 = new ds.Pilha();
    ds.Pilha pilha41 = new ds.Pilha();
    int i42 = pilha41.tamanho();
    boolean b43 = pilha41.vazia();
    int i44 = pilha41.tamanho();
    pilha40.empilha((java.lang.Object)pilha41);
    pilha32.empilha((java.lang.Object)pilha40);
    ds.Pilha pilha47 = new ds.Pilha();
    pilha47.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha50 = new ds.Pilha();
    int i51 = pilha50.tamanho();
    pilha50.empilha((java.lang.Object)"hi!");
    java.lang.Object obj54 = pilha50.desempilha();
    pilha50.empilha((java.lang.Object)'4');
    pilha47.empilha((java.lang.Object)pilha50);
    ds.Pilha pilha58 = new ds.Pilha();
    int i59 = pilha58.tamanho();
    pilha58.empilha((java.lang.Object)"hi!");
    java.lang.Object obj62 = pilha58.desempilha();
    pilha58.empilha((java.lang.Object)'4');
    pilha50.empilha((java.lang.Object)'4');
    pilha32.empilha((java.lang.Object)pilha50);
    pilha8.empilha((java.lang.Object)pilha32);
    int i68 = pilha8.tamanho();
    boolean b69 = pilha8.vazia();
    pilha0.empilha((java.lang.Object)b69);
    int i71 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (short)1+ "'", obj27.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj54 + "' != '" + "hi!"+ "'", obj54.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj62 + "' != '" + "hi!"+ "'", obj62.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i71 == 2);

  }

  @Test
  public void test362() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test362"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    int i9 = pilha0.tamanho();
    boolean b10 = pilha0.vazia();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)1);
    pilha11.empilha((java.lang.Object)3);
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    pilha20.empilha((java.lang.Object)"hi!");
    java.lang.Object obj24 = null;
    pilha20.empilha(obj24);
    pilha20.empilha((java.lang.Object)100.0d);
    int i28 = pilha20.tamanho();
    java.lang.Object obj29 = pilha20.desempilha();
    pilha11.empilha(obj29);
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    int i33 = pilha31.tamanho();
    int i34 = pilha31.tamanho();
    pilha11.empilha((java.lang.Object)pilha31);
    int i36 = pilha11.tamanho();
    pilha0.empilha((java.lang.Object)i36);
    java.lang.Object obj38 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj29 + "' != '" + 100.0d+ "'", obj29.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj38 + "' != '" + 4+ "'", obj38.equals(4));

  }

  @Test
  public void test363() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test363"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    int i6 = pilha0.tamanho();
    ds.Pilha pilha7 = new ds.Pilha();
    ds.Pilha pilha8 = new ds.Pilha();
    int i9 = pilha8.tamanho();
    boolean b10 = pilha8.vazia();
    int i11 = pilha8.tamanho();
    pilha7.empilha((java.lang.Object)pilha8);
    boolean b13 = pilha7.vazia();
    pilha7.empilha((java.lang.Object)(short)1);
    pilha0.empilha((java.lang.Object)pilha7);
    boolean b17 = pilha7.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);

  }

  @Test
  public void test364() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test364"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    int i8 = pilha0.tamanho();
    int i9 = pilha0.tamanho();
    java.lang.Object obj10 = pilha0.desempilha();
    int i11 = pilha0.tamanho();
    boolean b12 = pilha0.vazia();
    ds.Pilha pilha13 = new ds.Pilha();
    int i14 = pilha13.tamanho();
    pilha13.empilha((java.lang.Object)"hi!");
    java.lang.Object obj17 = null;
    pilha13.empilha(obj17);
    ds.Pilha pilha19 = new ds.Pilha();
    boolean b20 = pilha19.vazia();
    boolean b21 = pilha19.vazia();
    pilha13.empilha((java.lang.Object)b21);
    int i23 = pilha13.tamanho();
    int i24 = pilha13.tamanho();
    pilha0.empilha((java.lang.Object)pilha13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + "hi!"+ "'", obj10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 3);

  }

  @Test
  public void test365() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test365"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)100L);
    pilha0.empilha((java.lang.Object)100);
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    int i11 = pilha0.tamanho();
    ds.Pilha pilha12 = new ds.Pilha();
    int i13 = pilha12.tamanho();
    pilha12.empilha((java.lang.Object)"hi!");
    java.lang.Object obj16 = pilha12.desempilha();
    boolean b17 = pilha12.vazia();
    pilha0.empilha((java.lang.Object)pilha12);
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    pilha19.empilha((java.lang.Object)"hi!");
    java.lang.Object obj23 = pilha19.desempilha();
    pilha19.empilha((java.lang.Object)'4');
    boolean b26 = pilha19.vazia();
    pilha0.empilha((java.lang.Object)pilha19);
    ds.Pilha pilha28 = new ds.Pilha();
    pilha28.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    pilha31.empilha((java.lang.Object)"hi!");
    java.lang.Object obj35 = pilha31.desempilha();
    pilha31.empilha((java.lang.Object)'4');
    pilha28.empilha((java.lang.Object)pilha31);
    int i39 = pilha31.tamanho();
    java.lang.Object obj40 = pilha31.desempilha();
    pilha19.empilha(obj40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100+ "'", obj9.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj16 + "' != '" + "hi!"+ "'", obj16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj23 + "' != '" + "hi!"+ "'", obj23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj35 + "' != '" + "hi!"+ "'", obj35.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj40 + "' != '" + '4'+ "'", obj40.equals('4'));

  }

  @Test
  public void test366() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test366"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)100L);
    pilha0.empilha((java.lang.Object)100);
    java.lang.Object obj9 = pilha0.desempilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)"hi!");
    java.lang.Object obj14 = null;
    pilha10.empilha(obj14);
    int i16 = pilha10.tamanho();
    int i17 = pilha10.tamanho();
    pilha0.empilha((java.lang.Object)i17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100+ "'", obj9.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 2);

  }

  @Test
  public void test367() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test367"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    boolean b5 = pilha0.vazia();
    boolean b6 = pilha0.vazia();
    ds.Pilha pilha7 = new ds.Pilha();
    ds.Pilha pilha8 = new ds.Pilha();
    int i9 = pilha8.tamanho();
    boolean b10 = pilha8.vazia();
    int i11 = pilha8.tamanho();
    pilha7.empilha((java.lang.Object)pilha8);
    int i13 = pilha7.tamanho();
    java.lang.Object obj14 = pilha7.desempilha();
    pilha0.empilha((java.lang.Object)pilha7);
    ds.Pilha pilha16 = new ds.Pilha();
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    boolean b19 = pilha17.vazia();
    int i20 = pilha17.tamanho();
    pilha16.empilha((java.lang.Object)pilha17);
    boolean b22 = pilha16.vazia();
    pilha16.empilha((java.lang.Object)(short)1);
    boolean b25 = pilha16.vazia();
    java.lang.Object obj26 = pilha16.desempilha();
    ds.Pilha pilha27 = new ds.Pilha();
    int i28 = pilha27.tamanho();
    boolean b29 = pilha27.vazia();
    int i30 = pilha27.tamanho();
    int i31 = pilha27.tamanho();
    pilha27.empilha((java.lang.Object)1);
    boolean b34 = pilha27.vazia();
    ds.Pilha pilha35 = new ds.Pilha();
    ds.Pilha pilha36 = new ds.Pilha();
    int i37 = pilha36.tamanho();
    boolean b38 = pilha36.vazia();
    int i39 = pilha36.tamanho();
    pilha35.empilha((java.lang.Object)pilha36);
    pilha27.empilha((java.lang.Object)pilha35);
    ds.Pilha pilha42 = new ds.Pilha();
    pilha42.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha45 = new ds.Pilha();
    int i46 = pilha45.tamanho();
    pilha45.empilha((java.lang.Object)"hi!");
    java.lang.Object obj49 = pilha45.desempilha();
    pilha45.empilha((java.lang.Object)'4');
    pilha42.empilha((java.lang.Object)pilha45);
    ds.Pilha pilha53 = new ds.Pilha();
    int i54 = pilha53.tamanho();
    pilha53.empilha((java.lang.Object)"hi!");
    java.lang.Object obj57 = pilha53.desempilha();
    pilha53.empilha((java.lang.Object)'4');
    pilha45.empilha((java.lang.Object)'4');
    pilha27.empilha((java.lang.Object)pilha45);
    pilha16.empilha((java.lang.Object)pilha27);
    pilha7.empilha((java.lang.Object)pilha16);
    boolean b64 = pilha7.vazia();
    java.lang.Object obj65 = pilha7.desempilha();
    int i66 = pilha7.tamanho();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj67 = pilha7.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (short)1+ "'", obj26.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i46 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj49 + "' != '" + "hi!"+ "'", obj49.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i54 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj57 + "' != '" + "hi!"+ "'", obj57.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i66 == 0);

  }

  @Test
  public void test368() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test368"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(short)10);
    ds.Pilha pilha8 = new ds.Pilha();
    pilha8.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)"hi!");
    java.lang.Object obj15 = pilha11.desempilha();
    pilha11.empilha((java.lang.Object)'4');
    pilha8.empilha((java.lang.Object)pilha11);
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    pilha19.empilha((java.lang.Object)"hi!");
    java.lang.Object obj23 = pilha19.desempilha();
    pilha19.empilha((java.lang.Object)'4');
    pilha11.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha11);
    boolean b28 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + "hi!"+ "'", obj15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj23 + "' != '" + "hi!"+ "'", obj23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test369() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test369"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    pilha9.empilha((java.lang.Object)100.0d);
    int i17 = pilha9.tamanho();
    java.lang.Object obj18 = pilha9.desempilha();
    pilha0.empilha(obj18);
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    int i22 = pilha20.tamanho();
    int i23 = pilha20.tamanho();
    pilha0.empilha((java.lang.Object)pilha20);
    boolean b25 = pilha20.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 100.0d+ "'", obj18.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);

  }

  @Test
  public void test370() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test370"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    boolean b9 = pilha0.vazia();
    int i10 = pilha0.tamanho();
    boolean b11 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test371() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test371"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    int i6 = pilha1.tamanho();
    boolean b7 = pilha1.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    int i9 = pilha8.tamanho();
    pilha8.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj12 = null;
    pilha8.empilha(obj12);
    int i14 = pilha8.tamanho();
    int i15 = pilha8.tamanho();
    pilha1.empilha((java.lang.Object)pilha8);
    java.lang.Object obj17 = pilha8.desempilha();
    boolean b18 = pilha8.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);

  }

  @Test
  public void test372() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test372"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    boolean b7 = pilha0.vazia();
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha8);
    ds.Pilha pilha15 = new ds.Pilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha15.empilha((java.lang.Object)pilha16);
    boolean b21 = pilha15.vazia();
    pilha15.empilha((java.lang.Object)(short)1);
    boolean b24 = pilha15.vazia();
    java.lang.Object obj25 = pilha15.desempilha();
    pilha15.empilha((java.lang.Object)100.0f);
    int i28 = pilha15.tamanho();
    ds.Pilha pilha29 = new ds.Pilha();
    ds.Pilha pilha30 = new ds.Pilha();
    int i31 = pilha30.tamanho();
    boolean b32 = pilha30.vazia();
    int i33 = pilha30.tamanho();
    pilha29.empilha((java.lang.Object)pilha30);
    boolean b35 = pilha29.vazia();
    pilha29.empilha((java.lang.Object)(short)1);
    boolean b38 = pilha29.vazia();
    java.lang.Object obj39 = pilha29.desempilha();
    pilha29.empilha((java.lang.Object)100.0f);
    pilha15.empilha((java.lang.Object)pilha29);
    pilha8.empilha((java.lang.Object)pilha15);
    java.lang.Object obj44 = pilha8.desempilha();
    boolean b45 = pilha8.vazia();
    ds.Pilha pilha46 = new ds.Pilha();
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    boolean b49 = pilha47.vazia();
    int i50 = pilha47.tamanho();
    pilha46.empilha((java.lang.Object)pilha47);
    int i52 = pilha46.tamanho();
    int i53 = pilha46.tamanho();
    boolean b54 = pilha46.vazia();
    pilha8.empilha((java.lang.Object)pilha46);
    java.lang.Object obj56 = pilha46.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short)1+ "'", obj25.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (short)1+ "'", obj39.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i50 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj56);

  }

  @Test
  public void test373() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test373"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    int i18 = pilha0.tamanho();
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    boolean b21 = pilha19.vazia();
    int i22 = pilha19.tamanho();
    int i23 = pilha19.tamanho();
    ds.Pilha pilha24 = new ds.Pilha();
    ds.Pilha pilha25 = new ds.Pilha();
    int i26 = pilha25.tamanho();
    boolean b27 = pilha25.vazia();
    int i28 = pilha25.tamanho();
    pilha24.empilha((java.lang.Object)pilha25);
    boolean b30 = pilha24.vazia();
    pilha24.empilha((java.lang.Object)(short)1);
    pilha19.empilha((java.lang.Object)(short)1);
    ds.Pilha pilha34 = new ds.Pilha();
    ds.Pilha pilha35 = new ds.Pilha();
    int i36 = pilha35.tamanho();
    boolean b37 = pilha35.vazia();
    int i38 = pilha35.tamanho();
    pilha34.empilha((java.lang.Object)pilha35);
    int i40 = pilha34.tamanho();
    ds.Pilha pilha41 = new ds.Pilha();
    ds.Pilha pilha42 = new ds.Pilha();
    int i43 = pilha42.tamanho();
    boolean b44 = pilha42.vazia();
    int i45 = pilha42.tamanho();
    pilha41.empilha((java.lang.Object)pilha42);
    boolean b47 = pilha41.vazia();
    pilha41.empilha((java.lang.Object)(short)1);
    pilha34.empilha((java.lang.Object)pilha41);
    pilha19.empilha((java.lang.Object)pilha41);
    pilha0.empilha((java.lang.Object)pilha41);
    ds.Pilha pilha53 = new ds.Pilha();
    pilha53.empilha((java.lang.Object)(short)0);
    pilha53.empilha((java.lang.Object)(byte)10);
    int i58 = pilha53.tamanho();
    pilha0.empilha((java.lang.Object)pilha53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 2);

  }

  @Test
  public void test374() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test374"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    ds.Pilha pilha7 = new ds.Pilha();
    ds.Pilha pilha8 = new ds.Pilha();
    int i9 = pilha8.tamanho();
    boolean b10 = pilha8.vazia();
    int i11 = pilha8.tamanho();
    pilha7.empilha((java.lang.Object)pilha8);
    boolean b13 = pilha7.vazia();
    pilha7.empilha((java.lang.Object)(short)1);
    boolean b16 = pilha7.vazia();
    java.lang.Object obj17 = pilha7.desempilha();
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    int i22 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)1);
    boolean b25 = pilha18.vazia();
    ds.Pilha pilha26 = new ds.Pilha();
    ds.Pilha pilha27 = new ds.Pilha();
    int i28 = pilha27.tamanho();
    boolean b29 = pilha27.vazia();
    int i30 = pilha27.tamanho();
    pilha26.empilha((java.lang.Object)pilha27);
    pilha18.empilha((java.lang.Object)pilha26);
    ds.Pilha pilha33 = new ds.Pilha();
    pilha33.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha36 = new ds.Pilha();
    int i37 = pilha36.tamanho();
    pilha36.empilha((java.lang.Object)"hi!");
    java.lang.Object obj40 = pilha36.desempilha();
    pilha36.empilha((java.lang.Object)'4');
    pilha33.empilha((java.lang.Object)pilha36);
    ds.Pilha pilha44 = new ds.Pilha();
    int i45 = pilha44.tamanho();
    pilha44.empilha((java.lang.Object)"hi!");
    java.lang.Object obj48 = pilha44.desempilha();
    pilha44.empilha((java.lang.Object)'4');
    pilha36.empilha((java.lang.Object)'4');
    pilha18.empilha((java.lang.Object)pilha36);
    pilha7.empilha((java.lang.Object)pilha18);
    ds.Pilha pilha54 = new ds.Pilha();
    int i55 = pilha54.tamanho();
    pilha54.empilha((java.lang.Object)"hi!");
    java.lang.Object obj58 = null;
    pilha54.empilha(obj58);
    pilha54.empilha((java.lang.Object)100.0d);
    java.lang.Object obj62 = pilha54.desempilha();
    pilha18.empilha((java.lang.Object)pilha54);
    ds.Pilha pilha64 = new ds.Pilha();
    int i65 = pilha64.tamanho();
    boolean b66 = pilha64.vazia();
    int i67 = pilha64.tamanho();
    int i68 = pilha64.tamanho();
    pilha64.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha71 = new ds.Pilha();
    int i72 = pilha71.tamanho();
    boolean b73 = pilha71.vazia();
    int i74 = pilha71.tamanho();
    int i75 = pilha71.tamanho();
    pilha71.empilha((java.lang.Object)(byte)10);
    pilha64.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj79 = pilha64.desempilha();
    boolean b80 = pilha64.vazia();
    java.lang.Object obj81 = pilha64.desempilha();
    boolean b82 = pilha64.vazia();
    ds.Pilha pilha83 = new ds.Pilha();
    ds.Pilha pilha84 = new ds.Pilha();
    int i85 = pilha84.tamanho();
    boolean b86 = pilha84.vazia();
    int i87 = pilha84.tamanho();
    pilha83.empilha((java.lang.Object)pilha84);
    int i89 = pilha84.tamanho();
    pilha64.empilha((java.lang.Object)i89);
    java.lang.Object obj91 = pilha64.desempilha();
    pilha18.empilha((java.lang.Object)pilha64);
    boolean b93 = pilha18.vazia();
    pilha0.empilha((java.lang.Object)pilha18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (short)1+ "'", obj17.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj40 + "' != '" + "hi!"+ "'", obj40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj48 + "' != '" + "hi!"+ "'", obj48.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj62 + "' != '" + 100.0d+ "'", obj62.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i65 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i67 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i72 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i74 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i75 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj79 + "' != '" + (byte)10+ "'", obj79.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj81 + "' != '" + (byte)10+ "'", obj81.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b82 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i85 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b86 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i87 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i89 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj91 + "' != '" + 0+ "'", obj91.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b93 == false);

  }

  @Test
  public void test375() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test375"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    pilha6.empilha((java.lang.Object)"hi!");
    java.lang.Object obj10 = null;
    pilha6.empilha(obj10);
    int i12 = pilha6.tamanho();
    int i13 = pilha6.tamanho();
    ds.Pilha pilha14 = new ds.Pilha();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    pilha14.empilha((java.lang.Object)pilha15);
    int i20 = pilha14.tamanho();
    int i21 = pilha14.tamanho();
    pilha6.empilha((java.lang.Object)pilha14);
    pilha0.empilha((java.lang.Object)pilha6);
    java.lang.Object obj24 = pilha6.desempilha();
    java.lang.Object obj25 = pilha6.desempilha();
    ds.Pilha pilha26 = new ds.Pilha();
    boolean b27 = pilha26.vazia();
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)"hi!");
    java.lang.Object obj32 = null;
    pilha28.empilha(obj32);
    int i34 = pilha28.tamanho();
    int i35 = pilha28.tamanho();
    ds.Pilha pilha36 = new ds.Pilha();
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    boolean b39 = pilha37.vazia();
    int i40 = pilha37.tamanho();
    pilha36.empilha((java.lang.Object)pilha37);
    int i42 = pilha36.tamanho();
    int i43 = pilha36.tamanho();
    pilha28.empilha((java.lang.Object)pilha36);
    pilha26.empilha((java.lang.Object)pilha28);
    pilha6.empilha((java.lang.Object)pilha28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 1);

  }

  @Test
  public void test376() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test376"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    pilha1.empilha((java.lang.Object)100);
    ds.Pilha pilha8 = new ds.Pilha();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    boolean b11 = pilha9.vazia();
    int i12 = pilha9.tamanho();
    pilha8.empilha((java.lang.Object)pilha9);
    int i14 = pilha8.tamanho();
    ds.Pilha pilha15 = new ds.Pilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha15.empilha((java.lang.Object)pilha16);
    boolean b21 = pilha15.vazia();
    pilha15.empilha((java.lang.Object)(short)1);
    pilha8.empilha((java.lang.Object)pilha15);
    java.lang.Object obj25 = pilha15.desempilha();
    java.lang.Object obj26 = pilha15.desempilha();
    pilha1.empilha(obj26);
    int i28 = pilha1.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (short)1+ "'", obj25.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 2);

  }

  @Test
  public void test377() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test377"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    int i5 = pilha0.tamanho();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    int i8 = pilha6.tamanho();
    int i9 = pilha6.tamanho();
    pilha0.empilha((java.lang.Object)pilha6);
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)1);
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    pilha11.empilha((java.lang.Object)i21);
    pilha11.empilha((java.lang.Object)'4');
    int i25 = pilha11.tamanho();
    java.lang.Object obj26 = pilha11.desempilha();
    pilha6.empilha(obj26);
    int i28 = pilha6.tamanho();
    boolean b29 = pilha6.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i5 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj26 + "' != '" + '4'+ "'", obj26.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);

  }

  @Test
  public void test378() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test378"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)1);
    boolean b18 = pilha11.vazia();
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    pilha11.empilha((java.lang.Object)pilha19);
    ds.Pilha pilha26 = new ds.Pilha();
    pilha26.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha29 = new ds.Pilha();
    int i30 = pilha29.tamanho();
    pilha29.empilha((java.lang.Object)"hi!");
    java.lang.Object obj33 = pilha29.desempilha();
    pilha29.empilha((java.lang.Object)'4');
    pilha26.empilha((java.lang.Object)pilha29);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)"hi!");
    java.lang.Object obj41 = pilha37.desempilha();
    pilha37.empilha((java.lang.Object)'4');
    pilha29.empilha((java.lang.Object)'4');
    pilha11.empilha((java.lang.Object)pilha29);
    pilha0.empilha((java.lang.Object)pilha11);
    ds.Pilha pilha47 = new ds.Pilha();
    int i48 = pilha47.tamanho();
    pilha47.empilha((java.lang.Object)"hi!");
    java.lang.Object obj51 = null;
    pilha47.empilha(obj51);
    pilha47.empilha((java.lang.Object)100.0d);
    java.lang.Object obj55 = pilha47.desempilha();
    pilha11.empilha((java.lang.Object)pilha47);
    ds.Pilha pilha57 = new ds.Pilha();
    int i58 = pilha57.tamanho();
    boolean b59 = pilha57.vazia();
    int i60 = pilha57.tamanho();
    int i61 = pilha57.tamanho();
    pilha57.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha64 = new ds.Pilha();
    int i65 = pilha64.tamanho();
    boolean b66 = pilha64.vazia();
    int i67 = pilha64.tamanho();
    int i68 = pilha64.tamanho();
    pilha64.empilha((java.lang.Object)(byte)10);
    pilha57.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj72 = pilha57.desempilha();
    boolean b73 = pilha57.vazia();
    java.lang.Object obj74 = pilha57.desempilha();
    boolean b75 = pilha57.vazia();
    ds.Pilha pilha76 = new ds.Pilha();
    ds.Pilha pilha77 = new ds.Pilha();
    int i78 = pilha77.tamanho();
    boolean b79 = pilha77.vazia();
    int i80 = pilha77.tamanho();
    pilha76.empilha((java.lang.Object)pilha77);
    int i82 = pilha77.tamanho();
    pilha57.empilha((java.lang.Object)i82);
    java.lang.Object obj84 = pilha57.desempilha();
    pilha11.empilha((java.lang.Object)pilha57);
    int i86 = pilha57.tamanho();
    int i87 = pilha57.tamanho();
    int i88 = pilha57.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + "hi!"+ "'", obj33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj41 + "' != '" + "hi!"+ "'", obj41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj55 + "' != '" + 100.0d+ "'", obj55.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i60 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i65 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i67 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj72 + "' != '" + (byte)10+ "'", obj72.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj74 + "' != '" + (byte)10+ "'", obj74.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i78 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b79 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i80 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i82 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj84 + "' != '" + 0+ "'", obj84.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i86 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i87 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i88 == 0);

  }

  @Test
  public void test379() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test379"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    boolean b8 = pilha6.vazia();
    int i9 = pilha6.tamanho();
    pilha5.empilha((java.lang.Object)pilha6);
    boolean b11 = pilha5.vazia();
    pilha5.empilha((java.lang.Object)(short)1);
    pilha0.empilha((java.lang.Object)(short)1);
    ds.Pilha pilha15 = new ds.Pilha();
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    boolean b18 = pilha16.vazia();
    int i19 = pilha16.tamanho();
    pilha15.empilha((java.lang.Object)pilha16);
    int i21 = pilha15.tamanho();
    ds.Pilha pilha22 = new ds.Pilha();
    ds.Pilha pilha23 = new ds.Pilha();
    int i24 = pilha23.tamanho();
    boolean b25 = pilha23.vazia();
    int i26 = pilha23.tamanho();
    pilha22.empilha((java.lang.Object)pilha23);
    boolean b28 = pilha22.vazia();
    pilha22.empilha((java.lang.Object)(short)1);
    pilha15.empilha((java.lang.Object)pilha22);
    pilha0.empilha((java.lang.Object)pilha22);
    int i33 = pilha22.tamanho();
    java.lang.Object obj34 = pilha22.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj34 + "' != '" + (short)1+ "'", obj34.equals((short)1));

  }

  @Test
  public void test380() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test380"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    int i8 = pilha0.tamanho();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = null;
    pilha9.empilha(obj13);
    int i15 = pilha9.tamanho();
    int i16 = pilha9.tamanho();
    java.lang.Object obj17 = pilha9.desempilha();
    pilha0.empilha((java.lang.Object)pilha9);
    int i19 = pilha0.tamanho();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    int i24 = pilha20.tamanho();
    pilha20.empilha((java.lang.Object)1);
    ds.Pilha pilha27 = new ds.Pilha();
    int i28 = pilha27.tamanho();
    boolean b29 = pilha27.vazia();
    int i30 = pilha27.tamanho();
    pilha20.empilha((java.lang.Object)i30);
    boolean b32 = pilha20.vazia();
    java.lang.Object obj33 = pilha20.desempilha();
    java.lang.Object obj34 = pilha20.desempilha();
    pilha0.empilha((java.lang.Object)pilha20);
    boolean b36 = pilha20.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj33 + "' != '" + 0+ "'", obj33.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj34 + "' != '" + 1+ "'", obj34.equals(1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);

  }

  @Test
  public void test381() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test381"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = pilha3.desempilha();
    pilha3.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha3);
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)"hi!");
    java.lang.Object obj15 = pilha11.desempilha();
    pilha11.empilha((java.lang.Object)'4');
    pilha3.empilha((java.lang.Object)'4');
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    boolean b25 = pilha19.vazia();
    pilha3.empilha((java.lang.Object)b25);
    int i27 = pilha3.tamanho();
    boolean b28 = pilha3.vazia();
    boolean b29 = pilha3.vazia();
    ds.Pilha pilha30 = new ds.Pilha();
    boolean b31 = pilha30.vazia();
    boolean b32 = pilha30.vazia();
    ds.Pilha pilha33 = new ds.Pilha();
    int i34 = pilha33.tamanho();
    boolean b35 = pilha33.vazia();
    int i36 = pilha33.tamanho();
    int i37 = pilha33.tamanho();
    int i38 = pilha33.tamanho();
    ds.Pilha pilha39 = new ds.Pilha();
    int i40 = pilha39.tamanho();
    pilha39.empilha((java.lang.Object)"hi!");
    java.lang.Object obj43 = pilha39.desempilha();
    pilha39.empilha((java.lang.Object)'4');
    pilha39.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha48 = new ds.Pilha();
    int i49 = pilha48.tamanho();
    boolean b50 = pilha48.vazia();
    int i51 = pilha48.tamanho();
    int i52 = pilha48.tamanho();
    pilha48.empilha((java.lang.Object)(byte)10);
    pilha48.empilha((java.lang.Object)10.0d);
    java.lang.Object obj57 = pilha48.desempilha();
    ds.Pilha pilha58 = new ds.Pilha();
    int i59 = pilha58.tamanho();
    boolean b60 = pilha58.vazia();
    int i61 = pilha58.tamanho();
    int i62 = pilha58.tamanho();
    pilha58.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj65 = pilha58.desempilha();
    int i66 = pilha58.tamanho();
    pilha48.empilha((java.lang.Object)i66);
    pilha39.empilha((java.lang.Object)i66);
    pilha33.empilha((java.lang.Object)pilha39);
    pilha30.empilha((java.lang.Object)pilha33);
    pilha3.empilha((java.lang.Object)pilha33);
    int i72 = pilha33.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + "hi!"+ "'", obj7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + "hi!"+ "'", obj15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj43 + "' != '" + "hi!"+ "'", obj43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj57 + "' != '" + 10.0d+ "'", obj57.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i62 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (byte)10+ "'", obj65.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i66 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i72 == 1);

  }

  @Test
  public void test382() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test382"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = pilha3.desempilha();
    pilha3.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha3);
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)"hi!");
    java.lang.Object obj15 = pilha11.desempilha();
    pilha11.empilha((java.lang.Object)'4');
    pilha3.empilha((java.lang.Object)'4');
    boolean b19 = pilha3.vazia();
    boolean b20 = pilha3.vazia();
    ds.Pilha pilha21 = new ds.Pilha();
    ds.Pilha pilha22 = new ds.Pilha();
    int i23 = pilha22.tamanho();
    boolean b24 = pilha22.vazia();
    int i25 = pilha22.tamanho();
    pilha21.empilha((java.lang.Object)pilha22);
    int i27 = pilha21.tamanho();
    int i28 = pilha21.tamanho();
    int i29 = pilha21.tamanho();
    boolean b30 = pilha21.vazia();
    pilha3.empilha((java.lang.Object)b30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + "hi!"+ "'", obj7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + "hi!"+ "'", obj15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test383() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test383"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    ds.Pilha pilha16 = new ds.Pilha();
    int i17 = pilha16.tamanho();
    pilha16.empilha((java.lang.Object)"hi!");
    java.lang.Object obj20 = null;
    pilha16.empilha(obj20);
    int i22 = pilha16.tamanho();
    java.lang.Object obj23 = pilha16.desempilha();
    java.lang.Object obj24 = pilha16.desempilha();
    ds.Pilha pilha25 = new ds.Pilha();
    ds.Pilha pilha26 = new ds.Pilha();
    int i27 = pilha26.tamanho();
    boolean b28 = pilha26.vazia();
    int i29 = pilha26.tamanho();
    pilha25.empilha((java.lang.Object)pilha26);
    pilha16.empilha((java.lang.Object)pilha26);
    ds.Pilha pilha32 = new ds.Pilha();
    pilha32.empilha((java.lang.Object)(short)0);
    pilha32.empilha((java.lang.Object)(byte)10);
    pilha16.empilha((java.lang.Object)pilha32);
    java.lang.Object obj38 = pilha32.desempilha();
    pilha0.empilha(obj38);
    ds.Pilha pilha40 = new ds.Pilha();
    ds.Pilha pilha41 = new ds.Pilha();
    int i42 = pilha41.tamanho();
    boolean b43 = pilha41.vazia();
    int i44 = pilha41.tamanho();
    pilha40.empilha((java.lang.Object)pilha41);
    boolean b46 = pilha40.vazia();
    pilha40.empilha((java.lang.Object)(short)1);
    boolean b49 = pilha40.vazia();
    java.lang.Object obj50 = pilha40.desempilha();
    ds.Pilha pilha51 = new ds.Pilha();
    ds.Pilha pilha52 = new ds.Pilha();
    int i53 = pilha52.tamanho();
    boolean b54 = pilha52.vazia();
    int i55 = pilha52.tamanho();
    pilha51.empilha((java.lang.Object)pilha52);
    int i57 = pilha52.tamanho();
    int i58 = pilha52.tamanho();
    pilha40.empilha((java.lang.Object)i58);
    ds.Pilha pilha60 = new ds.Pilha();
    pilha60.empilha((java.lang.Object)(short)0);
    boolean b63 = pilha60.vazia();
    int i64 = pilha60.tamanho();
    ds.Pilha pilha65 = new ds.Pilha();
    int i66 = pilha65.tamanho();
    pilha65.empilha((java.lang.Object)"hi!");
    java.lang.Object obj69 = null;
    pilha65.empilha(obj69);
    int i71 = pilha65.tamanho();
    java.lang.Object obj72 = pilha65.desempilha();
    int i73 = pilha65.tamanho();
    ds.Pilha pilha74 = new ds.Pilha();
    int i75 = pilha74.tamanho();
    pilha74.empilha((java.lang.Object)"hi!");
    java.lang.Object obj78 = null;
    pilha74.empilha(obj78);
    int i80 = pilha74.tamanho();
    int i81 = pilha74.tamanho();
    java.lang.Object obj82 = pilha74.desempilha();
    pilha65.empilha((java.lang.Object)pilha74);
    int i84 = pilha74.tamanho();
    java.lang.Object obj85 = pilha74.desempilha();
    pilha60.empilha((java.lang.Object)pilha74);
    pilha40.empilha((java.lang.Object)pilha60);
    pilha0.empilha((java.lang.Object)pilha40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj24 + "' != '" + "hi!"+ "'", obj24.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (byte)10+ "'", obj38.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (short)1+ "'", obj50.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i57 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i66 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i71 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i75 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i80 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i81 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj85 + "' != '" + "hi!"+ "'", obj85.equals("hi!"));

  }

  @Test
  public void test384() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test384"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    ds.Pilha pilha11 = new ds.Pilha();
    ds.Pilha pilha12 = new ds.Pilha();
    int i13 = pilha12.tamanho();
    boolean b14 = pilha12.vazia();
    int i15 = pilha12.tamanho();
    pilha11.empilha((java.lang.Object)pilha12);
    int i17 = pilha12.tamanho();
    int i18 = pilha12.tamanho();
    pilha0.empilha((java.lang.Object)i18);
    java.lang.Object obj20 = pilha0.desempilha();
    int i21 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj20 + "' != '" + 0+ "'", obj20.equals(0));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 1);

  }

  @Test
  public void test385() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test385"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)(-1));
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    boolean b8 = pilha0.vazia();
    java.lang.Object obj9 = pilha0.desempilha();
    int i10 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 1);

  }

  @Test
  public void test386() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test386"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    boolean b5 = pilha3.vazia();
    int i6 = pilha3.tamanho();
    int i7 = pilha3.tamanho();
    int i8 = pilha3.tamanho();
    ds.Pilha pilha9 = new ds.Pilha();
    int i10 = pilha9.tamanho();
    pilha9.empilha((java.lang.Object)"hi!");
    java.lang.Object obj13 = pilha9.desempilha();
    pilha9.empilha((java.lang.Object)'4');
    pilha9.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha18 = new ds.Pilha();
    int i19 = pilha18.tamanho();
    boolean b20 = pilha18.vazia();
    int i21 = pilha18.tamanho();
    int i22 = pilha18.tamanho();
    pilha18.empilha((java.lang.Object)(byte)10);
    pilha18.empilha((java.lang.Object)10.0d);
    java.lang.Object obj27 = pilha18.desempilha();
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    boolean b30 = pilha28.vazia();
    int i31 = pilha28.tamanho();
    int i32 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj35 = pilha28.desempilha();
    int i36 = pilha28.tamanho();
    pilha18.empilha((java.lang.Object)i36);
    pilha9.empilha((java.lang.Object)i36);
    pilha3.empilha((java.lang.Object)pilha9);
    pilha0.empilha((java.lang.Object)pilha3);
    java.lang.Object obj41 = pilha3.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj13 + "' != '" + "hi!"+ "'", obj13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj27 + "' != '" + 10.0d+ "'", obj27.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte)10+ "'", obj35.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj41);

  }

  @Test
  public void test387() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test387"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    pilha0.empilha((java.lang.Object)3);
    int i9 = pilha0.tamanho();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    int i14 = pilha10.tamanho();
    pilha10.empilha((java.lang.Object)1);
    boolean b17 = pilha10.vazia();
    ds.Pilha pilha18 = new ds.Pilha();
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    boolean b21 = pilha19.vazia();
    int i22 = pilha19.tamanho();
    pilha18.empilha((java.lang.Object)pilha19);
    pilha10.empilha((java.lang.Object)pilha18);
    ds.Pilha pilha25 = new ds.Pilha();
    pilha25.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)"hi!");
    java.lang.Object obj32 = pilha28.desempilha();
    pilha28.empilha((java.lang.Object)'4');
    pilha25.empilha((java.lang.Object)pilha28);
    ds.Pilha pilha36 = new ds.Pilha();
    int i37 = pilha36.tamanho();
    pilha36.empilha((java.lang.Object)"hi!");
    java.lang.Object obj40 = pilha36.desempilha();
    pilha36.empilha((java.lang.Object)'4');
    pilha28.empilha((java.lang.Object)'4');
    pilha10.empilha((java.lang.Object)pilha28);
    pilha0.empilha((java.lang.Object)pilha10);
    int i46 = pilha10.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj32 + "' != '" + "hi!"+ "'", obj32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj40 + "' != '" + "hi!"+ "'", obj40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i46 == 3);

  }

  @Test
  public void test388() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test388"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    pilha0.empilha((java.lang.Object)pilha10);
    boolean b16 = pilha0.vazia();
    java.lang.Object obj17 = pilha0.desempilha();
    int i18 = pilha0.tamanho();
    int i19 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + "hi!"+ "'", obj8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);

  }

  @Test
  public void test389() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test389"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    boolean b6 = pilha0.vazia();
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    pilha7.empilha((java.lang.Object)"hi!");
    boolean b11 = pilha7.vazia();
    pilha0.empilha((java.lang.Object)pilha7);
    int i13 = pilha0.tamanho();
    int i14 = pilha0.tamanho();
    int i15 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 3);

  }

  @Test
  public void test390() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test390"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    int i6 = pilha0.tamanho();
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = pilha0.desempilha();
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    int i15 = pilha11.tamanho();
    int i16 = pilha11.tamanho();
    ds.Pilha pilha17 = new ds.Pilha();
    int i18 = pilha17.tamanho();
    int i19 = pilha17.tamanho();
    int i20 = pilha17.tamanho();
    pilha11.empilha((java.lang.Object)pilha17);
    pilha0.empilha((java.lang.Object)pilha17);
    int i23 = pilha17.tamanho();
    ds.Pilha pilha24 = new ds.Pilha();
    int i25 = pilha24.tamanho();
    pilha24.empilha((java.lang.Object)"hi!");
    java.lang.Object obj28 = pilha24.desempilha();
    pilha24.empilha((java.lang.Object)'4');
    pilha24.empilha((java.lang.Object)"hi!");
    boolean b33 = pilha24.vazia();
    pilha17.empilha((java.lang.Object)pilha24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + "hi!"+ "'", obj9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj28 + "' != '" + "hi!"+ "'", obj28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == false);

  }

  @Test
  public void test391() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test391"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)100L);
    java.lang.Object obj7 = pilha0.desempilha();
    java.lang.Object obj8 = pilha0.desempilha();
    ds.Pilha pilha9 = new ds.Pilha();
    ds.Pilha pilha10 = new ds.Pilha();
    int i11 = pilha10.tamanho();
    boolean b12 = pilha10.vazia();
    int i13 = pilha10.tamanho();
    pilha9.empilha((java.lang.Object)pilha10);
    boolean b15 = pilha9.vazia();
    pilha9.empilha((java.lang.Object)(short)1);
    boolean b18 = pilha9.vazia();
    ds.Pilha pilha19 = new ds.Pilha();
    int i20 = pilha19.tamanho();
    pilha19.empilha((java.lang.Object)"hi!");
    java.lang.Object obj23 = null;
    pilha19.empilha(obj23);
    int i25 = pilha19.tamanho();
    int i26 = pilha19.tamanho();
    java.lang.Object obj27 = pilha19.desempilha();
    pilha9.empilha((java.lang.Object)pilha19);
    java.lang.Object obj29 = pilha9.desempilha();
    pilha0.empilha(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + 100L+ "'", obj7.equals(100L));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (byte)10+ "'", obj8.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj29);

  }

  @Test
  public void test392() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test392"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    java.lang.Object obj11 = pilha0.desempilha();
    int i12 = pilha0.tamanho();
    ds.Pilha pilha13 = new ds.Pilha();
    ds.Pilha pilha14 = new ds.Pilha();
    int i15 = pilha14.tamanho();
    boolean b16 = pilha14.vazia();
    int i17 = pilha14.tamanho();
    pilha13.empilha((java.lang.Object)pilha14);
    boolean b19 = pilha13.vazia();
    pilha13.empilha((java.lang.Object)(short)1);
    boolean b22 = pilha13.vazia();
    java.lang.Object obj23 = pilha13.desempilha();
    pilha13.empilha((java.lang.Object)100.0f);
    pilha0.empilha((java.lang.Object)pilha13);
    java.lang.Object obj27 = pilha0.desempilha();
    ds.Pilha pilha28 = new ds.Pilha();
    int i29 = pilha28.tamanho();
    pilha28.empilha((java.lang.Object)"hi!");
    java.lang.Object obj32 = null;
    pilha28.empilha(obj32);
    pilha28.empilha((java.lang.Object)100.0d);
    int i36 = pilha28.tamanho();
    java.lang.Object obj37 = pilha28.desempilha();
    ds.Pilha pilha38 = new ds.Pilha();
    int i39 = pilha38.tamanho();
    boolean b40 = pilha38.vazia();
    int i41 = pilha38.tamanho();
    int i42 = pilha38.tamanho();
    pilha38.empilha((java.lang.Object)1);
    ds.Pilha pilha45 = new ds.Pilha();
    int i46 = pilha45.tamanho();
    boolean b47 = pilha45.vazia();
    int i48 = pilha45.tamanho();
    pilha38.empilha((java.lang.Object)i48);
    pilha38.empilha((java.lang.Object)'4');
    int i52 = pilha38.tamanho();
    pilha28.empilha((java.lang.Object)pilha38);
    java.lang.Object obj54 = pilha28.desempilha();
    pilha0.empilha((java.lang.Object)pilha28);
    boolean b56 = pilha28.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (short)1+ "'", obj23.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj37 + "' != '" + 100.0d+ "'", obj37.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i46 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);

  }

  @Test
  public void test393() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test393"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)1);
    ds.Pilha pilha7 = new ds.Pilha();
    int i8 = pilha7.tamanho();
    boolean b9 = pilha7.vazia();
    int i10 = pilha7.tamanho();
    pilha0.empilha((java.lang.Object)i10);
    pilha0.empilha((java.lang.Object)'4');
    java.lang.Object obj14 = pilha0.desempilha();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    ds.Pilha pilha20 = new ds.Pilha();
    ds.Pilha pilha21 = new ds.Pilha();
    int i22 = pilha21.tamanho();
    boolean b23 = pilha21.vazia();
    int i24 = pilha21.tamanho();
    pilha20.empilha((java.lang.Object)pilha21);
    boolean b26 = pilha20.vazia();
    pilha20.empilha((java.lang.Object)(short)1);
    pilha15.empilha((java.lang.Object)(short)1);
    ds.Pilha pilha30 = new ds.Pilha();
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    boolean b33 = pilha31.vazia();
    int i34 = pilha31.tamanho();
    pilha30.empilha((java.lang.Object)pilha31);
    int i36 = pilha30.tamanho();
    ds.Pilha pilha37 = new ds.Pilha();
    ds.Pilha pilha38 = new ds.Pilha();
    int i39 = pilha38.tamanho();
    boolean b40 = pilha38.vazia();
    int i41 = pilha38.tamanho();
    pilha37.empilha((java.lang.Object)pilha38);
    boolean b43 = pilha37.vazia();
    pilha37.empilha((java.lang.Object)(short)1);
    pilha30.empilha((java.lang.Object)pilha37);
    pilha15.empilha((java.lang.Object)pilha37);
    pilha0.empilha((java.lang.Object)pilha37);
    int i49 = pilha37.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj14 + "' != '" + '4'+ "'", obj14.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 2);

  }

  @Test
  public void test394() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test394"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)'4');
    java.lang.Object obj7 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + '4'+ "'", obj7.equals('4'));

  }

  @Test
  public void test395() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test395"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    boolean b2 = pilha0.vazia();
    int i3 = pilha0.tamanho();
    int i4 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)(byte)10);
    int i7 = pilha0.tamanho();
    java.lang.Object obj8 = null;
    pilha0.empilha(obj8);
    java.lang.Object obj10 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj10);

  }

  @Test
  public void test396() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test396"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    int i2 = pilha0.tamanho();
    int i3 = pilha0.tamanho();
    boolean b4 = pilha0.vazia();
    ds.Pilha pilha5 = new ds.Pilha();
    ds.Pilha pilha6 = new ds.Pilha();
    int i7 = pilha6.tamanho();
    boolean b8 = pilha6.vazia();
    int i9 = pilha6.tamanho();
    pilha5.empilha((java.lang.Object)pilha6);
    boolean b11 = pilha5.vazia();
    pilha5.empilha((java.lang.Object)(short)1);
    pilha0.empilha((java.lang.Object)(short)1);
    int i15 = pilha0.tamanho();
    java.lang.Object obj16 = pilha0.desempilha();
    ds.Pilha pilha17 = new ds.Pilha();
    pilha17.empilha((java.lang.Object)(short)0);
    boolean b20 = pilha17.vazia();
    int i21 = pilha17.tamanho();
    ds.Pilha pilha22 = new ds.Pilha();
    int i23 = pilha22.tamanho();
    boolean b24 = pilha22.vazia();
    int i25 = pilha22.tamanho();
    int i26 = pilha22.tamanho();
    pilha22.empilha((java.lang.Object)1);
    boolean b29 = pilha22.vazia();
    ds.Pilha pilha30 = new ds.Pilha();
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    boolean b33 = pilha31.vazia();
    int i34 = pilha31.tamanho();
    pilha30.empilha((java.lang.Object)pilha31);
    pilha22.empilha((java.lang.Object)pilha30);
    ds.Pilha pilha37 = new ds.Pilha();
    pilha37.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha40 = new ds.Pilha();
    int i41 = pilha40.tamanho();
    pilha40.empilha((java.lang.Object)"hi!");
    java.lang.Object obj44 = pilha40.desempilha();
    pilha40.empilha((java.lang.Object)'4');
    pilha37.empilha((java.lang.Object)pilha40);
    ds.Pilha pilha48 = new ds.Pilha();
    int i49 = pilha48.tamanho();
    pilha48.empilha((java.lang.Object)"hi!");
    java.lang.Object obj52 = pilha48.desempilha();
    pilha48.empilha((java.lang.Object)'4');
    pilha40.empilha((java.lang.Object)'4');
    pilha22.empilha((java.lang.Object)pilha40);
    ds.Pilha pilha57 = new ds.Pilha();
    ds.Pilha pilha58 = new ds.Pilha();
    int i59 = pilha58.tamanho();
    boolean b60 = pilha58.vazia();
    int i61 = pilha58.tamanho();
    pilha57.empilha((java.lang.Object)pilha58);
    boolean b63 = pilha57.vazia();
    pilha57.empilha((java.lang.Object)(short)1);
    boolean b66 = pilha57.vazia();
    java.lang.Object obj67 = pilha57.desempilha();
    pilha57.empilha((java.lang.Object)100.0f);
    boolean b70 = pilha57.vazia();
    pilha22.empilha((java.lang.Object)pilha57);
    boolean b72 = pilha22.vazia();
    java.lang.Object obj73 = pilha22.desempilha();
    pilha17.empilha((java.lang.Object)pilha22);
    pilha0.empilha((java.lang.Object)pilha22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i3 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (short)1+ "'", obj16.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i41 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj44 + "' != '" + "hi!"+ "'", obj44.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj52 + "' != '" + "hi!"+ "'", obj52.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj67 + "' != '" + (short)1+ "'", obj67.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj73);

  }

  @Test
  public void test397() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test397"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    pilha0.empilha((java.lang.Object)(byte)10);
    pilha0.empilha((java.lang.Object)100L);
    int i7 = pilha0.tamanho();
    boolean b8 = pilha0.vazia();
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    int i11 = pilha0.tamanho();
    java.lang.Object obj12 = pilha0.desempilha();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + 100L+ "'", obj10.equals(100L));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte)10+ "'", obj12.equals((byte)10));

  }

  @Test
  public void test398() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test398"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    java.lang.Object obj9 = pilha0.desempilha();
    boolean b10 = pilha0.vazia();
    int i11 = pilha0.tamanho();
    java.lang.Object obj12 = pilha0.desempilha();
    boolean b13 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100.0d+ "'", obj9.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test399() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test399"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)"hi!");
    boolean b9 = pilha0.vazia();
    int i10 = pilha0.tamanho();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj4 + "' != '" + "hi!"+ "'", obj4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i10 == 2);

  }

  @Test
  public void test400() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test400"); }


    ds.Pilha pilha0 = new ds.Pilha();
    ds.Pilha pilha1 = new ds.Pilha();
    int i2 = pilha1.tamanho();
    boolean b3 = pilha1.vazia();
    int i4 = pilha1.tamanho();
    pilha0.empilha((java.lang.Object)pilha1);
    boolean b6 = pilha0.vazia();
    pilha0.empilha((java.lang.Object)(short)1);
    boolean b9 = pilha0.vazia();
    java.lang.Object obj10 = pilha0.desempilha();
    pilha0.empilha((java.lang.Object)100.0f);
    boolean b13 = pilha0.vazia();
    java.lang.Object obj14 = pilha0.desempilha();
    ds.Pilha pilha15 = new ds.Pilha();
    int i16 = pilha15.tamanho();
    boolean b17 = pilha15.vazia();
    int i18 = pilha15.tamanho();
    int i19 = pilha15.tamanho();
    pilha15.empilha((java.lang.Object)(byte)10);
    ds.Pilha pilha22 = new ds.Pilha();
    int i23 = pilha22.tamanho();
    boolean b24 = pilha22.vazia();
    int i25 = pilha22.tamanho();
    int i26 = pilha22.tamanho();
    pilha22.empilha((java.lang.Object)(byte)10);
    pilha15.empilha((java.lang.Object)(byte)10);
    boolean b30 = pilha15.vazia();
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    pilha31.empilha((java.lang.Object)"hi!");
    java.lang.Object obj35 = null;
    pilha31.empilha(obj35);
    ds.Pilha pilha37 = new ds.Pilha();
    int i38 = pilha37.tamanho();
    pilha37.empilha((java.lang.Object)"hi!");
    java.lang.Object obj41 = null;
    pilha37.empilha(obj41);
    int i43 = pilha37.tamanho();
    int i44 = pilha37.tamanho();
    ds.Pilha pilha45 = new ds.Pilha();
    ds.Pilha pilha46 = new ds.Pilha();
    int i47 = pilha46.tamanho();
    boolean b48 = pilha46.vazia();
    int i49 = pilha46.tamanho();
    pilha45.empilha((java.lang.Object)pilha46);
    int i51 = pilha45.tamanho();
    int i52 = pilha45.tamanho();
    pilha37.empilha((java.lang.Object)pilha45);
    pilha31.empilha((java.lang.Object)pilha37);
    pilha15.empilha((java.lang.Object)pilha31);
    int i56 = pilha31.tamanho();
    pilha0.empilha((java.lang.Object)i56);
    ds.Pilha pilha58 = new ds.Pilha();
    boolean b59 = pilha58.vazia();
    boolean b60 = pilha58.vazia();
    boolean b61 = pilha58.vazia();
    ds.Pilha pilha62 = new ds.Pilha();
    int i63 = pilha62.tamanho();
    pilha62.empilha((java.lang.Object)"hi!");
    java.lang.Object obj66 = null;
    pilha62.empilha(obj66);
    pilha58.empilha(obj66);
    pilha0.empilha((java.lang.Object)pilha58);
    boolean b70 = pilha58.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short)1+ "'", obj10.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj14 + "' != '" + 100.0f+ "'", obj14.equals(100.0f));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i43 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i56 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i63 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);

  }

  @Test
  public void test401() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test401"); }


    ds.Pilha pilha0 = new ds.Pilha();
    pilha0.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha3 = new ds.Pilha();
    int i4 = pilha3.tamanho();
    pilha3.empilha((java.lang.Object)"hi!");
    java.lang.Object obj7 = pilha3.desempilha();
    pilha3.empilha((java.lang.Object)'4');
    pilha0.empilha((java.lang.Object)pilha3);
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    pilha11.empilha((java.lang.Object)"hi!");
    java.lang.Object obj15 = pilha11.desempilha();
    pilha11.empilha((java.lang.Object)'4');
    pilha3.empilha((java.lang.Object)'4');
    ds.Pilha pilha19 = new ds.Pilha();
    ds.Pilha pilha20 = new ds.Pilha();
    int i21 = pilha20.tamanho();
    boolean b22 = pilha20.vazia();
    int i23 = pilha20.tamanho();
    pilha19.empilha((java.lang.Object)pilha20);
    boolean b25 = pilha19.vazia();
    pilha3.empilha((java.lang.Object)b25);
    int i27 = pilha3.tamanho();
    boolean b28 = pilha3.vazia();
    boolean b29 = pilha3.vazia();
    ds.Pilha pilha30 = new ds.Pilha();
    boolean b31 = pilha30.vazia();
    boolean b32 = pilha30.vazia();
    ds.Pilha pilha33 = new ds.Pilha();
    int i34 = pilha33.tamanho();
    boolean b35 = pilha33.vazia();
    int i36 = pilha33.tamanho();
    int i37 = pilha33.tamanho();
    int i38 = pilha33.tamanho();
    ds.Pilha pilha39 = new ds.Pilha();
    int i40 = pilha39.tamanho();
    pilha39.empilha((java.lang.Object)"hi!");
    java.lang.Object obj43 = pilha39.desempilha();
    pilha39.empilha((java.lang.Object)'4');
    pilha39.empilha((java.lang.Object)"hi!");
    ds.Pilha pilha48 = new ds.Pilha();
    int i49 = pilha48.tamanho();
    boolean b50 = pilha48.vazia();
    int i51 = pilha48.tamanho();
    int i52 = pilha48.tamanho();
    pilha48.empilha((java.lang.Object)(byte)10);
    pilha48.empilha((java.lang.Object)10.0d);
    java.lang.Object obj57 = pilha48.desempilha();
    ds.Pilha pilha58 = new ds.Pilha();
    int i59 = pilha58.tamanho();
    boolean b60 = pilha58.vazia();
    int i61 = pilha58.tamanho();
    int i62 = pilha58.tamanho();
    pilha58.empilha((java.lang.Object)(byte)10);
    java.lang.Object obj65 = pilha58.desempilha();
    int i66 = pilha58.tamanho();
    pilha48.empilha((java.lang.Object)i66);
    pilha39.empilha((java.lang.Object)i66);
    pilha33.empilha((java.lang.Object)pilha39);
    pilha30.empilha((java.lang.Object)pilha33);
    pilha3.empilha((java.lang.Object)pilha33);
    boolean b72 = pilha33.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj7 + "' != '" + "hi!"+ "'", obj7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj15 + "' != '" + "hi!"+ "'", obj15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj43 + "' != '" + "hi!"+ "'", obj43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i49 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj57 + "' != '" + 10.0d+ "'", obj57.equals(10.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i62 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (byte)10+ "'", obj65.equals((byte)10));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i66 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b72 == false);

  }

  @Test
  public void test402() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test402"); }


    ds.Pilha pilha0 = new ds.Pilha();
    int i1 = pilha0.tamanho();
    pilha0.empilha((java.lang.Object)"hi!");
    java.lang.Object obj4 = null;
    pilha0.empilha(obj4);
    pilha0.empilha((java.lang.Object)100.0d);
    int i8 = pilha0.tamanho();
    java.lang.Object obj9 = pilha0.desempilha();
    ds.Pilha pilha10 = new ds.Pilha();
    ds.Pilha pilha11 = new ds.Pilha();
    int i12 = pilha11.tamanho();
    boolean b13 = pilha11.vazia();
    int i14 = pilha11.tamanho();
    pilha10.empilha((java.lang.Object)pilha11);
    int i16 = pilha11.tamanho();
    int i17 = pilha11.tamanho();
    boolean b18 = pilha11.vazia();
    pilha0.empilha((java.lang.Object)pilha11);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Object obj20 = pilha11.desempilha();
      org.junit.Assert.fail("Expected exception of type java.lang.Exception");
    } catch (java.lang.Exception e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.Exception")) {
        org.junit.Assert.fail("Expected exception of type java.lang.Exception, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 100.0d+ "'", obj9.equals(100.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);

  }

  @Test
  public void test403() throws Throwable {

    if (debug) { System.out.format("%n%s%n","Randoop0.test403"); }


    ds.Pilha pilha0 = new ds.Pilha();
    boolean b1 = pilha0.vazia();
    boolean b2 = pilha0.vazia();
    boolean b3 = pilha0.vazia();
    int i4 = pilha0.tamanho();
    ds.Pilha pilha5 = new ds.Pilha();
    int i6 = pilha5.tamanho();
    pilha5.empilha((java.lang.Object)"hi!");
    java.lang.Object obj9 = null;
    pilha5.empilha(obj9);
    java.lang.Object obj11 = pilha5.desempilha();
    pilha0.empilha((java.lang.Object)pilha5);
    int i13 = pilha0.tamanho();
    ds.Pilha pilha14 = new ds.Pilha();
    int i15 = pilha14.tamanho();
    boolean b16 = pilha14.vazia();
    int i17 = pilha14.tamanho();
    int i18 = pilha14.tamanho();
    boolean b19 = pilha14.vazia();
    boolean b20 = pilha14.vazia();
    ds.Pilha pilha21 = new ds.Pilha();
    ds.Pilha pilha22 = new ds.Pilha();
    int i23 = pilha22.tamanho();
    boolean b24 = pilha22.vazia();
    int i25 = pilha22.tamanho();
    pilha21.empilha((java.lang.Object)pilha22);
    int i27 = pilha21.tamanho();
    java.lang.Object obj28 = pilha21.desempilha();
    pilha14.empilha((java.lang.Object)pilha21);
    ds.Pilha pilha30 = new ds.Pilha();
    ds.Pilha pilha31 = new ds.Pilha();
    int i32 = pilha31.tamanho();
    boolean b33 = pilha31.vazia();
    int i34 = pilha31.tamanho();
    pilha30.empilha((java.lang.Object)pilha31);
    boolean b36 = pilha30.vazia();
    pilha30.empilha((java.lang.Object)(short)1);
    boolean b39 = pilha30.vazia();
    java.lang.Object obj40 = pilha30.desempilha();
    ds.Pilha pilha41 = new ds.Pilha();
    int i42 = pilha41.tamanho();
    boolean b43 = pilha41.vazia();
    int i44 = pilha41.tamanho();
    int i45 = pilha41.tamanho();
    pilha41.empilha((java.lang.Object)1);
    boolean b48 = pilha41.vazia();
    ds.Pilha pilha49 = new ds.Pilha();
    ds.Pilha pilha50 = new ds.Pilha();
    int i51 = pilha50.tamanho();
    boolean b52 = pilha50.vazia();
    int i53 = pilha50.tamanho();
    pilha49.empilha((java.lang.Object)pilha50);
    pilha41.empilha((java.lang.Object)pilha49);
    ds.Pilha pilha56 = new ds.Pilha();
    pilha56.empilha((java.lang.Object)(short)0);
    ds.Pilha pilha59 = new ds.Pilha();
    int i60 = pilha59.tamanho();
    pilha59.empilha((java.lang.Object)"hi!");
    java.lang.Object obj63 = pilha59.desempilha();
    pilha59.empilha((java.lang.Object)'4');
    pilha56.empilha((java.lang.Object)pilha59);
    ds.Pilha pilha67 = new ds.Pilha();
    int i68 = pilha67.tamanho();
    pilha67.empilha((java.lang.Object)"hi!");
    java.lang.Object obj71 = pilha67.desempilha();
    pilha67.empilha((java.lang.Object)'4');
    pilha59.empilha((java.lang.Object)'4');
    pilha41.empilha((java.lang.Object)pilha59);
    pilha30.empilha((java.lang.Object)pilha41);
    pilha21.empilha((java.lang.Object)pilha30);
    boolean b78 = pilha21.vazia();
    pilha0.empilha((java.lang.Object)b78);
    boolean b80 = pilha0.vazia();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b33 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (short)1+ "'", obj40.equals((short)1));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i51 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i60 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj63 + "' != '" + "hi!"+ "'", obj63.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i68 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + obj71 + "' != '" + "hi!"+ "'", obj71.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b80 == false);

  }

}
