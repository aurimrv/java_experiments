/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 04 20:26:38 GMT 2020
 */

package ds.seed5831;

import org.junit.Test;
import static org.junit.Assert.*;
import ds.TabelaHash;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Evo extends TabelaHash_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TabelaHash tabelaHash0 = new TabelaHash();
      tabelaHash0.insere("XS", (Object) null);
      tabelaHash0.retira("XS");
      tabelaHash0.imprime();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TabelaHash tabelaHash0 = new TabelaHash();
      tabelaHash0.insere("XS", (Object) null);
      tabelaHash0.retira("XS");
      Object[] objectArray0 = tabelaHash0.recuperaItens();
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TabelaHash tabelaHash0 = new TabelaHash();
      tabelaHash0.insere("G:2}[", "G:2}[");
      Object[] objectArray0 = tabelaHash0.recuperaItens();
      assertEquals(1, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TabelaHash tabelaHash0 = new TabelaHash();
      tabelaHash0.insere("G:2}[", "G:2}[");
      tabelaHash0.insere("XS", (Object) null);
      tabelaHash0.insere("XS", "XS");
      tabelaHash0.retira("XS");
      tabelaHash0.retira("XS");
      tabelaHash0.insere("FD3D", "XS");
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TabelaHash tabelaHash0 = new TabelaHash();
      tabelaHash0.insere("f>45k?I", "dX");
      tabelaHash0.insere("~F{V]dQ~", "~F{V]dQ~");
      tabelaHash0.insere("dX", "dX");
      tabelaHash0.insere("3bn.PX23U", "~F{V]dQ~");
      tabelaHash0.insere(" U}J", " U}J");
      tabelaHash0.insere("", "f>45k?I");
      tabelaHash0.insere("iM", "f>45k?I");
      tabelaHash0.insere("(86V#", "f>45k?I");
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TabelaHash tabelaHash0 = new TabelaHash();
      tabelaHash0.insere("~F{V]dQ~", "~F{V]dQ~");
      tabelaHash0.insere("~F{V]dQ~", "~F{V]dQ~");
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Random.setNextRandom(4360);
      TabelaHash tabelaHash0 = new TabelaHash();
      tabelaHash0.insere("f>45k?I", "dX");
      tabelaHash0.retira("");
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TabelaHash tabelaHash0 = new TabelaHash();
      tabelaHash0.insere("f>45k?I", "dX");
      tabelaHash0.imprime();
  }
}
