/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 03 19:44:42 GMT 2016
 */

package ds;

import org.junit.Test;
import static org.junit.Assert.*;

//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

import ds.Ordenacao;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Evo {

  //Test case number: 0
  /*
   * 374 covered goals:
   * Goal 1. Weak Mutation 170: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable dir -> j
   * Goal 2. cap2.Ordenacao.merge([IIII)V: Line 4
   * Goal 3. cap2.Ordenacao.merge([IIII)V: Line 6
   * Goal 4. cap2.Ordenacao.merge([IIII)V: Line 7
   * Goal 5. cap2.Ordenacao.merge([IIII)V: Line 8
   * Goal 6. cap2.Ordenacao.merge([IIII)V: Line 9
   * Goal 7. cap2.Ordenacao.merge([IIII)V: Line 10
   * Goal 8. cap2.Ordenacao.merge([IIII)V: Line 11
   * Goal 9. cap2.Ordenacao.merge([IIII)V: Line 13
   * Goal 10. cap2.Ordenacao.merge([IIII)V: Line 14
   * Goal 11. cap2.Ordenacao.mergeSort([III)V: Line 16
   * Goal 12. cap2.Ordenacao.mergeSort([III)V: Line 17
   * Goal 13. cap2.Ordenacao.mergeSort([III)V: Line 18
   * Goal 14. cap2.Ordenacao.mergeSort([III)V: Line 19
   * Goal 15. cap2.Ordenacao.mergeSort([III)V: Line 20
   * Goal 16. cap2.Ordenacao.mergeSort([III)V: Line 22
   * Goal 17. cap2.Ordenacao.merge([IIII)V: I28 Branch 1 IF_ICMPLE L6 - true
   * Goal 18. cap2.Ordenacao.merge([IIII)V: I57 Branch 2 IF_ICMPGT L10 - true
   * Goal 19. cap2.Ordenacao.merge([IIII)V: I81 Branch 3 IF_ICMPGE L9 - true
   * Goal 20. cap2.Ordenacao.merge([IIII)V: I84 Branch 4 IF_ICMPLE L9 - true
   * Goal 21. cap2.Ordenacao.merge([IIII)V: I100 Branch 5 IF_ICMPLT L13 - true
   * Goal 22. cap2.Ordenacao.mergeSort([III)V: I4 Branch 6 IF_ICMPGE L16 - true
   * Goal 23. cap2.Ordenacao.merge([IIII)V: I28 Branch 1 IF_ICMPLE L6 - false
   * Goal 24. cap2.Ordenacao.merge([IIII)V: I57 Branch 2 IF_ICMPGT L10 - false
   * Goal 25. cap2.Ordenacao.merge([IIII)V: I81 Branch 3 IF_ICMPGE L9 - false
   * Goal 26. cap2.Ordenacao.merge([IIII)V: I84 Branch 4 IF_ICMPLE L9 - false
   * Goal 27. cap2.Ordenacao.merge([IIII)V: I100 Branch 5 IF_ICMPLT L13 - false
   * Goal 28. cap2.Ordenacao.mergeSort([III)V: I4 Branch 6 IF_ICMPGE L16 - false
   * Goal 29. mergeSort([III)V_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 30. Weak Mutation 0: cap2.Ordenacao.merge([IIII)V:4 - ReplaceVariable m -> i
   * Goal 31. Weak Mutation 1: cap2.Ordenacao.merge([IIII)V:4 - ReplaceVariable m -> j
   * Goal 32. Weak Mutation 2: cap2.Ordenacao.merge([IIII)V:4 - InsertUnaryOp Negation of m
   * Goal 33. Weak Mutation 3: cap2.Ordenacao.merge([IIII)V:4 - InsertUnaryOp IINC 1 m
   * Goal 34. Weak Mutation 4: cap2.Ordenacao.merge([IIII)V:4 - InsertUnaryOp IINC -1 m
   * Goal 35. Weak Mutation 5: cap2.Ordenacao.merge([IIII)V:4 - ReplaceVariable i -> m
   * Goal 36. Weak Mutation 6: cap2.Ordenacao.merge([IIII)V:4 - ReplaceVariable i -> j
   * Goal 37. Weak Mutation 7: cap2.Ordenacao.merge([IIII)V:4 - InsertUnaryOp Negation of i
   * Goal 38. Weak Mutation 8: cap2.Ordenacao.merge([IIII)V:4 - InsertUnaryOp IINC 1 i
   * Goal 39. Weak Mutation 9: cap2.Ordenacao.merge([IIII)V:4 - InsertUnaryOp IINC -1 i
   * Goal 40. Weak Mutation 10: cap2.Ordenacao.merge([IIII)V:4 - ReplaceArithmeticOperator - -> +
   * Goal 41. Weak Mutation 11: cap2.Ordenacao.merge([IIII)V:4 - ReplaceArithmeticOperator - -> %
   * Goal 42. Weak Mutation 12: cap2.Ordenacao.merge([IIII)V:4 - ReplaceArithmeticOperator - -> *
   * Goal 43. Weak Mutation 13: cap2.Ordenacao.merge([IIII)V:4 - ReplaceArithmeticOperator - -> /
   * Goal 44. Weak Mutation 14: cap2.Ordenacao.merge([IIII)V:4 - ReplaceConstant - 1 -> 0
   * Goal 45. Weak Mutation 15: cap2.Ordenacao.merge([IIII)V:4 - ReplaceArithmeticOperator + -> %
   * Goal 46. Weak Mutation 16: cap2.Ordenacao.merge([IIII)V:4 - ReplaceArithmeticOperator + -> -
   * Goal 47. Weak Mutation 17: cap2.Ordenacao.merge([IIII)V:4 - ReplaceArithmeticOperator + -> *
   * Goal 48. Weak Mutation 18: cap2.Ordenacao.merge([IIII)V:4 - ReplaceArithmeticOperator + -> /
   * Goal 49. Weak Mutation 19: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable i -> m
   * Goal 50. Weak Mutation 20: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable i -> j
   * Goal 51. Weak Mutation 21: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp Negation of i
   * Goal 52. Weak Mutation 22: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp IINC 1 i
   * Goal 53. Weak Mutation 23: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp IINC -1 i
   * Goal 54. Weak Mutation 24: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable temp -> v
   * Goal 55. Weak Mutation 25: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable k -> i
   * Goal 56. Weak Mutation 26: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable k -> j
   * Goal 57. Weak Mutation 27: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable k -> m
   * Goal 58. Weak Mutation 28: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp Negation of k
   * Goal 59. Weak Mutation 29: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp IINC 1 k
   * Goal 60. Weak Mutation 30: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp IINC -1 k
   * Goal 61. Weak Mutation 31: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable i -> j
   * Goal 62. Weak Mutation 32: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable i -> k
   * Goal 63. Weak Mutation 33: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable i -> m
   * Goal 64. Weak Mutation 34: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp Negation of i
   * Goal 65. Weak Mutation 35: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp IINC 1 i
   * Goal 66. Weak Mutation 36: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp IINC -1 i
   * Goal 67. Weak Mutation 37: cap2.Ordenacao.merge([IIII)V:6 - ReplaceArithmeticOperator - -> +
   * Goal 68. Weak Mutation 38: cap2.Ordenacao.merge([IIII)V:6 - ReplaceArithmeticOperator - -> %
   * Goal 69. Weak Mutation 39: cap2.Ordenacao.merge([IIII)V:6 - ReplaceArithmeticOperator - -> *
   * Goal 70. Weak Mutation 40: cap2.Ordenacao.merge([IIII)V:6 - ReplaceArithmeticOperator - -> /
   * Goal 71. Weak Mutation 41: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable v -> temp
   * Goal 72. Weak Mutation 42: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable k -> i
   * Goal 73. Weak Mutation 43: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable k -> j
   * Goal 74. Weak Mutation 44: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable k -> m
   * Goal 75. Weak Mutation 45: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp Negation of k
   * Goal 76. Weak Mutation 46: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp IINC 1 k
   * Goal 77. Weak Mutation 47: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp IINC -1 k
   * Goal 78. Weak Mutation 48: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable k -> i
   * Goal 79. Weak Mutation 49: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable k -> j
   * Goal 80. Weak Mutation 50: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable k -> m
   * Goal 81. Weak Mutation 51: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable k -> i
   * Goal 82. Weak Mutation 52: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable k -> j
   * Goal 83. Weak Mutation 53: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable k -> m
   * Goal 84. Weak Mutation 54: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp Negation of k
   * Goal 85. Weak Mutation 55: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp IINC 1 k
   * Goal 86. Weak Mutation 56: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp IINC -1 k
   * Goal 87. Weak Mutation 57: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable m -> i
   * Goal 88. Weak Mutation 58: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable m -> j
   * Goal 89. Weak Mutation 59: cap2.Ordenacao.merge([IIII)V:6 - ReplaceVariable m -> k
   * Goal 90. Weak Mutation 60: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp Negation of m
   * Goal 91. Weak Mutation 61: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp IINC 1 m
   * Goal 92. Weak Mutation 62: cap2.Ordenacao.merge([IIII)V:6 - InsertUnaryOp IINC -1 m
   * Goal 93. Weak Mutation 63: cap2.Ordenacao.merge([IIII)V:6 - ReplaceComparisonOperator <= -> -1
   * Goal 94. Weak Mutation 64: cap2.Ordenacao.merge([IIII)V:6 - ReplaceComparisonOperator <= -> <
   * Goal 95. Weak Mutation 65: cap2.Ordenacao.merge([IIII)V:6 - ReplaceComparisonOperator <= -> ==
   * Goal 96. Weak Mutation 66: cap2.Ordenacao.merge([IIII)V:7 - ReplaceConstant - 0 -> 1
   * Goal 97. Weak Mutation 67: cap2.Ordenacao.merge([IIII)V:7 - ReplaceVariable m -> i
   * Goal 98. Weak Mutation 68: cap2.Ordenacao.merge([IIII)V:7 - ReplaceVariable m -> esq
   * Goal 99. Weak Mutation 69: cap2.Ordenacao.merge([IIII)V:7 - ReplaceVariable m -> j
   * Goal 100. Weak Mutation 70: cap2.Ordenacao.merge([IIII)V:7 - ReplaceVariable m -> k
   * Goal 101. Weak Mutation 71: cap2.Ordenacao.merge([IIII)V:7 - InsertUnaryOp Negation of m
   * Goal 102. Weak Mutation 72: cap2.Ordenacao.merge([IIII)V:7 - InsertUnaryOp IINC 1 m
   * Goal 103. Weak Mutation 73: cap2.Ordenacao.merge([IIII)V:7 - InsertUnaryOp IINC -1 m
   * Goal 104. Weak Mutation 74: cap2.Ordenacao.merge([IIII)V:7 - ReplaceConstant - 1 -> 0
   * Goal 105. Weak Mutation 75: cap2.Ordenacao.merge([IIII)V:7 - ReplaceArithmeticOperator + -> %
   * Goal 106. Weak Mutation 76: cap2.Ordenacao.merge([IIII)V:7 - ReplaceArithmeticOperator + -> -
   * Goal 107. Weak Mutation 77: cap2.Ordenacao.merge([IIII)V:7 - ReplaceArithmeticOperator + -> *
   * Goal 108. Weak Mutation 78: cap2.Ordenacao.merge([IIII)V:7 - ReplaceArithmeticOperator + -> /
   * Goal 109. Weak Mutation 79: cap2.Ordenacao.merge([IIII)V:8 - ReplaceVariable m -> i
   * Goal 110. Weak Mutation 80: cap2.Ordenacao.merge([IIII)V:8 - ReplaceVariable m -> esq
   * Goal 111. Weak Mutation 81: cap2.Ordenacao.merge([IIII)V:8 - ReplaceVariable m -> j
   * Goal 112. Weak Mutation 82: cap2.Ordenacao.merge([IIII)V:8 - ReplaceVariable m -> k
   * Goal 113. Weak Mutation 83: cap2.Ordenacao.merge([IIII)V:8 - ReplaceVariable m -> dir
   * Goal 114. Weak Mutation 84: cap2.Ordenacao.merge([IIII)V:8 - InsertUnaryOp Negation of m
   * Goal 115. Weak Mutation 85: cap2.Ordenacao.merge([IIII)V:8 - InsertUnaryOp IINC 1 m
   * Goal 116. Weak Mutation 86: cap2.Ordenacao.merge([IIII)V:8 - InsertUnaryOp IINC -1 m
   * Goal 117. Weak Mutation 87: cap2.Ordenacao.merge([IIII)V:8 - ReplaceVariable i -> esq
   * Goal 118. Weak Mutation 88: cap2.Ordenacao.merge([IIII)V:8 - ReplaceVariable i -> j
   * Goal 119. Weak Mutation 89: cap2.Ordenacao.merge([IIII)V:8 - ReplaceVariable i -> k
   * Goal 120. Weak Mutation 90: cap2.Ordenacao.merge([IIII)V:8 - ReplaceVariable i -> dir
   * Goal 121. Weak Mutation 91: cap2.Ordenacao.merge([IIII)V:8 - ReplaceVariable i -> m
   * Goal 122. Weak Mutation 92: cap2.Ordenacao.merge([IIII)V:8 - InsertUnaryOp Negation of i
   * Goal 123. Weak Mutation 93: cap2.Ordenacao.merge([IIII)V:8 - InsertUnaryOp IINC 1 i
   * Goal 124. Weak Mutation 94: cap2.Ordenacao.merge([IIII)V:8 - InsertUnaryOp IINC -1 i
   * Goal 125. Weak Mutation 95: cap2.Ordenacao.merge([IIII)V:8 - ReplaceArithmeticOperator - -> +
   * Goal 126. Weak Mutation 96: cap2.Ordenacao.merge([IIII)V:8 - ReplaceArithmeticOperator - -> %
   * Goal 127. Weak Mutation 97: cap2.Ordenacao.merge([IIII)V:8 - ReplaceArithmeticOperator - -> *
   * Goal 128. Weak Mutation 98: cap2.Ordenacao.merge([IIII)V:8 - ReplaceArithmeticOperator - -> /
   * Goal 129. Weak Mutation 99: cap2.Ordenacao.merge([IIII)V:8 - ReplaceConstant - 1 -> 0
   * Goal 130. Weak Mutation 100: cap2.Ordenacao.merge([IIII)V:8 - ReplaceArithmeticOperator + -> %
   * Goal 131. Weak Mutation 101: cap2.Ordenacao.merge([IIII)V:8 - ReplaceArithmeticOperator + -> -
   * Goal 132. Weak Mutation 102: cap2.Ordenacao.merge([IIII)V:8 - ReplaceArithmeticOperator + -> *
   * Goal 133. Weak Mutation 103: cap2.Ordenacao.merge([IIII)V:8 - ReplaceArithmeticOperator + -> /
   * Goal 134. Weak Mutation 104: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable temp -> v
   * Goal 135. Weak Mutation 105: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable esq -> i
   * Goal 136. Weak Mutation 106: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable esq -> j
   * Goal 137. Weak Mutation 107: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable esq -> k
   * Goal 138. Weak Mutation 108: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable esq -> dir
   * Goal 139. Weak Mutation 109: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable esq -> m
   * Goal 140. Weak Mutation 110: cap2.Ordenacao.merge([IIII)V:10 - InsertUnaryOp Negation of esq
   * Goal 141. Weak Mutation 111: cap2.Ordenacao.merge([IIII)V:10 - InsertUnaryOp IINC 1 esq
   * Goal 142. Weak Mutation 112: cap2.Ordenacao.merge([IIII)V:10 - InsertUnaryOp IINC -1 esq
   * Goal 143. Weak Mutation 113: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable v -> temp
   * Goal 144. Weak Mutation 114: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable dir -> i
   * Goal 145. Weak Mutation 115: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable dir -> esq
   * Goal 146. Weak Mutation 116: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable dir -> j
   * Goal 147. Weak Mutation 117: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable dir -> k
   * Goal 148. Weak Mutation 118: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable dir -> m
   * Goal 149. Weak Mutation 119: cap2.Ordenacao.merge([IIII)V:10 - InsertUnaryOp Negation of dir
   * Goal 150. Weak Mutation 120: cap2.Ordenacao.merge([IIII)V:10 - InsertUnaryOp IINC 1 dir
   * Goal 151. Weak Mutation 121: cap2.Ordenacao.merge([IIII)V:10 - InsertUnaryOp IINC -1 dir
   * Goal 152. Weak Mutation 122: cap2.Ordenacao.merge([IIII)V:10 - ReplaceComparisonOperator > -> !=
   * Goal 153. Weak Mutation 123: cap2.Ordenacao.merge([IIII)V:10 - ReplaceComparisonOperator > -> -2
   * Goal 154. Weak Mutation 125: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable v -> temp
   * Goal 155. Weak Mutation 126: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable i -> esq
   * Goal 156. Weak Mutation 127: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable i -> j
   * Goal 157. Weak Mutation 128: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable i -> k
   * Goal 158. Weak Mutation 129: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable i -> dir
   * Goal 159. Weak Mutation 130: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable i -> m
   * Goal 160. Weak Mutation 131: cap2.Ordenacao.merge([IIII)V:10 - InsertUnaryOp Negation of i
   * Goal 161. Weak Mutation 132: cap2.Ordenacao.merge([IIII)V:10 - InsertUnaryOp IINC 1 i
   * Goal 162. Weak Mutation 133: cap2.Ordenacao.merge([IIII)V:10 - InsertUnaryOp IINC -1 i
   * Goal 163. Weak Mutation 134: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable i -> esq
   * Goal 164. Weak Mutation 135: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable i -> j
   * Goal 165. Weak Mutation 136: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable i -> k
   * Goal 166. Weak Mutation 137: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable i -> dir
   * Goal 167. Weak Mutation 138: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable i -> m
   * Goal 168. Weak Mutation 139: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable temp -> v
   * Goal 169. Weak Mutation 140: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable esq -> i
   * Goal 170. Weak Mutation 141: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable esq -> j
   * Goal 171. Weak Mutation 142: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable esq -> k
   * Goal 172. Weak Mutation 143: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable esq -> dir
   * Goal 173. Weak Mutation 144: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable esq -> m
   * Goal 174. Weak Mutation 145: cap2.Ordenacao.merge([IIII)V:10 - InsertUnaryOp Negation of esq
   * Goal 175. Weak Mutation 146: cap2.Ordenacao.merge([IIII)V:10 - InsertUnaryOp IINC 1 esq
   * Goal 176. Weak Mutation 147: cap2.Ordenacao.merge([IIII)V:10 - InsertUnaryOp IINC -1 esq
   * Goal 177. Weak Mutation 148: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable esq -> i
   * Goal 178. Weak Mutation 149: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable esq -> j
   * Goal 179. Weak Mutation 150: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable esq -> k
   * Goal 180. Weak Mutation 151: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable esq -> dir
   * Goal 181. Weak Mutation 152: cap2.Ordenacao.merge([IIII)V:10 - ReplaceVariable esq -> m
   * Goal 182. Weak Mutation 153: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable v -> temp
   * Goal 183. Weak Mutation 154: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable i -> esq
   * Goal 184. Weak Mutation 155: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable i -> j
   * Goal 185. Weak Mutation 156: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable i -> k
   * Goal 186. Weak Mutation 157: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable i -> dir
   * Goal 187. Weak Mutation 158: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable i -> m
   * Goal 188. Weak Mutation 159: cap2.Ordenacao.merge([IIII)V:11 - InsertUnaryOp Negation of i
   * Goal 189. Weak Mutation 160: cap2.Ordenacao.merge([IIII)V:11 - InsertUnaryOp IINC 1 i
   * Goal 190. Weak Mutation 161: cap2.Ordenacao.merge([IIII)V:11 - InsertUnaryOp IINC -1 i
   * Goal 191. Weak Mutation 162: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable i -> esq
   * Goal 192. Weak Mutation 163: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable i -> j
   * Goal 193. Weak Mutation 164: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable i -> k
   * Goal 194. Weak Mutation 165: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable i -> dir
   * Goal 195. Weak Mutation 166: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable i -> m
   * Goal 196. Weak Mutation 167: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable v -> temp
   * Goal 197. Weak Mutation 168: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable dir -> i
   * Goal 198. Weak Mutation 169: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable dir -> esq
   * Goal 199. Weak Mutation 171: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable dir -> k
   * Goal 200. Weak Mutation 172: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable dir -> m
   * Goal 201. Weak Mutation 173: cap2.Ordenacao.merge([IIII)V:11 - InsertUnaryOp Negation of dir
   * Goal 202. Weak Mutation 174: cap2.Ordenacao.merge([IIII)V:11 - InsertUnaryOp IINC 1 dir
   * Goal 203. Weak Mutation 175: cap2.Ordenacao.merge([IIII)V:11 - InsertUnaryOp IINC -1 dir
   * Goal 204. Weak Mutation 176: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable dir -> i
   * Goal 205. Weak Mutation 177: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable dir -> esq
   * Goal 206. Weak Mutation 178: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable dir -> j
   * Goal 207. Weak Mutation 179: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable dir -> k
   * Goal 208. Weak Mutation 180: cap2.Ordenacao.merge([IIII)V:11 - ReplaceVariable dir -> m
   * Goal 209. Weak Mutation 181: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable esq -> i
   * Goal 210. Weak Mutation 182: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable esq -> j
   * Goal 211. Weak Mutation 183: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable esq -> k
   * Goal 212. Weak Mutation 184: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable esq -> dir
   * Goal 213. Weak Mutation 185: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable esq -> m
   * Goal 214. Weak Mutation 186: cap2.Ordenacao.merge([IIII)V:9 - InsertUnaryOp Negation of esq
   * Goal 215. Weak Mutation 187: cap2.Ordenacao.merge([IIII)V:9 - InsertUnaryOp IINC 1 esq
   * Goal 216. Weak Mutation 188: cap2.Ordenacao.merge([IIII)V:9 - InsertUnaryOp IINC -1 esq
   * Goal 217. Weak Mutation 189: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable k -> i
   * Goal 218. Weak Mutation 190: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable k -> esq
   * Goal 219. Weak Mutation 191: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable k -> j
   * Goal 220. Weak Mutation 192: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable k -> dir
   * Goal 221. Weak Mutation 193: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable k -> m
   * Goal 222. Weak Mutation 194: cap2.Ordenacao.merge([IIII)V:9 - InsertUnaryOp Negation of k
   * Goal 223. Weak Mutation 195: cap2.Ordenacao.merge([IIII)V:9 - InsertUnaryOp IINC 1 k
   * Goal 224. Weak Mutation 196: cap2.Ordenacao.merge([IIII)V:9 - InsertUnaryOp IINC -1 k
   * Goal 225. Weak Mutation 197: cap2.Ordenacao.merge([IIII)V:9 - ReplaceComparisonOperator >= -> -1
   * Goal 226. Weak Mutation 198: cap2.Ordenacao.merge([IIII)V:9 - ReplaceComparisonOperator >= -> >
   * Goal 227. Weak Mutation 200: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable dir -> i
   * Goal 228. Weak Mutation 201: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable dir -> esq
   * Goal 229. Weak Mutation 202: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable dir -> j
   * Goal 230. Weak Mutation 203: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable dir -> k
   * Goal 231. Weak Mutation 204: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable dir -> m
   * Goal 232. Weak Mutation 205: cap2.Ordenacao.merge([IIII)V:9 - InsertUnaryOp Negation of dir
   * Goal 233. Weak Mutation 206: cap2.Ordenacao.merge([IIII)V:9 - InsertUnaryOp IINC 1 dir
   * Goal 234. Weak Mutation 207: cap2.Ordenacao.merge([IIII)V:9 - InsertUnaryOp IINC -1 dir
   * Goal 235. Weak Mutation 208: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable j -> i
   * Goal 236. Weak Mutation 209: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable j -> esq
   * Goal 237. Weak Mutation 210: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable j -> k
   * Goal 238. Weak Mutation 211: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable j -> dir
   * Goal 239. Weak Mutation 212: cap2.Ordenacao.merge([IIII)V:9 - ReplaceVariable j -> m
   * Goal 240. Weak Mutation 213: cap2.Ordenacao.merge([IIII)V:9 - InsertUnaryOp Negation of j
   * Goal 241. Weak Mutation 214: cap2.Ordenacao.merge([IIII)V:9 - InsertUnaryOp IINC 1 j
   * Goal 242. Weak Mutation 215: cap2.Ordenacao.merge([IIII)V:9 - InsertUnaryOp IINC -1 j
   * Goal 243. Weak Mutation 216: cap2.Ordenacao.merge([IIII)V:9 - ReplaceComparisonOperator <= -> -1
   * Goal 244. Weak Mutation 217: cap2.Ordenacao.merge([IIII)V:9 - ReplaceComparisonOperator <= -> <
   * Goal 245. Weak Mutation 218: cap2.Ordenacao.merge([IIII)V:9 - ReplaceComparisonOperator <= -> ==
   * Goal 246. Weak Mutation 219: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable v -> temp
   * Goal 247. Weak Mutation 220: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable i -> esq
   * Goal 248. Weak Mutation 221: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable i -> j
   * Goal 249. Weak Mutation 222: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable i -> k
   * Goal 250. Weak Mutation 223: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable i -> dir
   * Goal 251. Weak Mutation 224: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable i -> m
   * Goal 252. Weak Mutation 225: cap2.Ordenacao.merge([IIII)V:13 - InsertUnaryOp Negation of i
   * Goal 253. Weak Mutation 226: cap2.Ordenacao.merge([IIII)V:13 - InsertUnaryOp IINC 1 i
   * Goal 254. Weak Mutation 227: cap2.Ordenacao.merge([IIII)V:13 - InsertUnaryOp IINC -1 i
   * Goal 255. Weak Mutation 228: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable i -> esq
   * Goal 256. Weak Mutation 229: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable i -> j
   * Goal 257. Weak Mutation 230: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable i -> k
   * Goal 258. Weak Mutation 231: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable i -> dir
   * Goal 259. Weak Mutation 232: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable i -> m
   * Goal 260. Weak Mutation 233: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable temp -> v
   * Goal 261. Weak Mutation 234: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable esq -> i
   * Goal 262. Weak Mutation 235: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable esq -> j
   * Goal 263. Weak Mutation 236: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable esq -> k
   * Goal 264. Weak Mutation 237: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable esq -> dir
   * Goal 265. Weak Mutation 238: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable esq -> m
   * Goal 266. Weak Mutation 239: cap2.Ordenacao.merge([IIII)V:13 - InsertUnaryOp Negation of esq
   * Goal 267. Weak Mutation 240: cap2.Ordenacao.merge([IIII)V:13 - InsertUnaryOp IINC 1 esq
   * Goal 268. Weak Mutation 241: cap2.Ordenacao.merge([IIII)V:13 - InsertUnaryOp IINC -1 esq
   * Goal 269. Weak Mutation 242: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable esq -> i
   * Goal 270. Weak Mutation 243: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable esq -> j
   * Goal 271. Weak Mutation 244: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable esq -> k
   * Goal 272. Weak Mutation 245: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable esq -> dir
   * Goal 273. Weak Mutation 246: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable esq -> m
   * Goal 274. Weak Mutation 247: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable esq -> i
   * Goal 275. Weak Mutation 248: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable esq -> j
   * Goal 276. Weak Mutation 249: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable esq -> k
   * Goal 277. Weak Mutation 250: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable esq -> dir
   * Goal 278. Weak Mutation 251: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable esq -> m
   * Goal 279. Weak Mutation 252: cap2.Ordenacao.merge([IIII)V:13 - InsertUnaryOp Negation of esq
   * Goal 280. Weak Mutation 253: cap2.Ordenacao.merge([IIII)V:13 - InsertUnaryOp IINC 1 esq
   * Goal 281. Weak Mutation 254: cap2.Ordenacao.merge([IIII)V:13 - InsertUnaryOp IINC -1 esq
   * Goal 282. Weak Mutation 255: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable k -> i
   * Goal 283. Weak Mutation 256: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable k -> esq
   * Goal 284. Weak Mutation 257: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable k -> j
   * Goal 285. Weak Mutation 258: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable k -> dir
   * Goal 286. Weak Mutation 259: cap2.Ordenacao.merge([IIII)V:13 - ReplaceVariable k -> m
   * Goal 287. Weak Mutation 260: cap2.Ordenacao.merge([IIII)V:13 - InsertUnaryOp Negation of k
   * Goal 288. Weak Mutation 261: cap2.Ordenacao.merge([IIII)V:13 - InsertUnaryOp IINC 1 k
   * Goal 289. Weak Mutation 262: cap2.Ordenacao.merge([IIII)V:13 - InsertUnaryOp IINC -1 k
   * Goal 290. Weak Mutation 264: cap2.Ordenacao.merge([IIII)V:13 - ReplaceComparisonOperator < -> -2
   * Goal 291. Weak Mutation 265: cap2.Ordenacao.merge([IIII)V:13 - ReplaceComparisonOperator < -> <=
   * Goal 292. Weak Mutation 266: cap2.Ordenacao.mergeSort([III)V:16 - ReplaceVariable i -> j
   * Goal 293. Weak Mutation 267: cap2.Ordenacao.mergeSort([III)V:16 - InsertUnaryOp Negation of i
   * Goal 294. Weak Mutation 268: cap2.Ordenacao.mergeSort([III)V:16 - InsertUnaryOp IINC 1 i
   * Goal 295. Weak Mutation 269: cap2.Ordenacao.mergeSort([III)V:16 - InsertUnaryOp IINC -1 i
   * Goal 296. Weak Mutation 270: cap2.Ordenacao.mergeSort([III)V:16 - ReplaceVariable j -> i
   * Goal 297. Weak Mutation 271: cap2.Ordenacao.mergeSort([III)V:16 - InsertUnaryOp Negation of j
   * Goal 298. Weak Mutation 272: cap2.Ordenacao.mergeSort([III)V:16 - InsertUnaryOp IINC 1 j
   * Goal 299. Weak Mutation 273: cap2.Ordenacao.mergeSort([III)V:16 - InsertUnaryOp IINC -1 j
   * Goal 300. Weak Mutation 274: cap2.Ordenacao.mergeSort([III)V:16 - ReplaceComparisonOperator >= -> -1
   * Goal 301. Weak Mutation 275: cap2.Ordenacao.mergeSort([III)V:16 - ReplaceComparisonOperator >= -> >
   * Goal 302. Weak Mutation 276: cap2.Ordenacao.mergeSort([III)V:16 - ReplaceComparisonOperator >= -> ==
   * Goal 303. Weak Mutation 277: cap2.Ordenacao.mergeSort([III)V:17 - ReplaceVariable i -> j
   * Goal 304. Weak Mutation 278: cap2.Ordenacao.mergeSort([III)V:17 - InsertUnaryOp Negation of i
   * Goal 305. Weak Mutation 279: cap2.Ordenacao.mergeSort([III)V:17 - InsertUnaryOp IINC 1 i
   * Goal 306. Weak Mutation 280: cap2.Ordenacao.mergeSort([III)V:17 - InsertUnaryOp IINC -1 i
   * Goal 307. Weak Mutation 281: cap2.Ordenacao.mergeSort([III)V:17 - ReplaceVariable j -> i
   * Goal 308. Weak Mutation 282: cap2.Ordenacao.mergeSort([III)V:17 - InsertUnaryOp Negation of j
   * Goal 309. Weak Mutation 283: cap2.Ordenacao.mergeSort([III)V:17 - InsertUnaryOp IINC 1 j
   * Goal 310. Weak Mutation 284: cap2.Ordenacao.mergeSort([III)V:17 - InsertUnaryOp IINC -1 j
   * Goal 311. Weak Mutation 285: cap2.Ordenacao.mergeSort([III)V:17 - ReplaceArithmeticOperator + -> %
   * Goal 312. Weak Mutation 286: cap2.Ordenacao.mergeSort([III)V:17 - ReplaceArithmeticOperator + -> -
   * Goal 313. Weak Mutation 287: cap2.Ordenacao.mergeSort([III)V:17 - ReplaceArithmeticOperator + -> *
   * Goal 314. Weak Mutation 288: cap2.Ordenacao.mergeSort([III)V:17 - ReplaceArithmeticOperator + -> /
   * Goal 315. Weak Mutation 289: cap2.Ordenacao.mergeSort([III)V:17 - ReplaceConstant - 2 -> 0
   * Goal 316. Weak Mutation 290: cap2.Ordenacao.mergeSort([III)V:17 - ReplaceConstant - 2 -> 1
   * Goal 317. Weak Mutation 291: cap2.Ordenacao.mergeSort([III)V:17 - ReplaceConstant - 2 -> -1
   * Goal 318. Weak Mutation 292: cap2.Ordenacao.mergeSort([III)V:17 - ReplaceConstant - 2 -> 3
   * Goal 319. Weak Mutation 293: cap2.Ordenacao.mergeSort([III)V:17 - ReplaceArithmeticOperator / -> +
   * Goal 320. Weak Mutation 294: cap2.Ordenacao.mergeSort([III)V:17 - ReplaceArithmeticOperator / -> %
   * Goal 321. Weak Mutation 295: cap2.Ordenacao.mergeSort([III)V:17 - ReplaceArithmeticOperator / -> -
   * Goal 322. Weak Mutation 296: cap2.Ordenacao.mergeSort([III)V:17 - ReplaceArithmeticOperator / -> *
   * Goal 323. Weak Mutation 297: cap2.Ordenacao.mergeSort([III)V:18 - ReplaceVariable i -> m
   * Goal 324. Weak Mutation 298: cap2.Ordenacao.mergeSort([III)V:18 - ReplaceVariable i -> j
   * Goal 325. Weak Mutation 299: cap2.Ordenacao.mergeSort([III)V:18 - InsertUnaryOp Negation of i
   * Goal 326. Weak Mutation 300: cap2.Ordenacao.mergeSort([III)V:18 - InsertUnaryOp IINC 1 i
   * Goal 327. Weak Mutation 301: cap2.Ordenacao.mergeSort([III)V:18 - InsertUnaryOp IINC -1 i
   * Goal 328. Weak Mutation 302: cap2.Ordenacao.mergeSort([III)V:18 - ReplaceVariable m -> i
   * Goal 329. Weak Mutation 303: cap2.Ordenacao.mergeSort([III)V:18 - ReplaceVariable m -> j
   * Goal 330. Weak Mutation 304: cap2.Ordenacao.mergeSort([III)V:18 - InsertUnaryOp Negation of m
   * Goal 331. Weak Mutation 305: cap2.Ordenacao.mergeSort([III)V:18 - InsertUnaryOp IINC 1 m
   * Goal 332. Weak Mutation 306: cap2.Ordenacao.mergeSort([III)V:18 - InsertUnaryOp IINC -1 m
   * Goal 333. Weak Mutation 307: cap2.Ordenacao.mergeSort([III)V:19 - ReplaceVariable m -> i
   * Goal 334. Weak Mutation 308: cap2.Ordenacao.mergeSort([III)V:19 - ReplaceVariable m -> j
   * Goal 335. Weak Mutation 309: cap2.Ordenacao.mergeSort([III)V:19 - InsertUnaryOp Negation of m
   * Goal 336. Weak Mutation 310: cap2.Ordenacao.mergeSort([III)V:19 - InsertUnaryOp IINC 1 m
   * Goal 337. Weak Mutation 311: cap2.Ordenacao.mergeSort([III)V:19 - InsertUnaryOp IINC -1 m
   * Goal 338. Weak Mutation 312: cap2.Ordenacao.mergeSort([III)V:19 - ReplaceConstant - 1 -> 0
   * Goal 339. Weak Mutation 313: cap2.Ordenacao.mergeSort([III)V:19 - ReplaceArithmeticOperator + -> %
   * Goal 340. Weak Mutation 314: cap2.Ordenacao.mergeSort([III)V:19 - ReplaceArithmeticOperator + -> -
   * Goal 341. Weak Mutation 315: cap2.Ordenacao.mergeSort([III)V:19 - ReplaceArithmeticOperator + -> *
   * Goal 342. Weak Mutation 316: cap2.Ordenacao.mergeSort([III)V:19 - ReplaceArithmeticOperator + -> /
   * Goal 343. Weak Mutation 317: cap2.Ordenacao.mergeSort([III)V:19 - ReplaceVariable j -> i
   * Goal 344. Weak Mutation 318: cap2.Ordenacao.mergeSort([III)V:19 - ReplaceVariable j -> m
   * Goal 345. Weak Mutation 319: cap2.Ordenacao.mergeSort([III)V:19 - InsertUnaryOp Negation of j
   * Goal 346. Weak Mutation 320: cap2.Ordenacao.mergeSort([III)V:19 - InsertUnaryOp IINC 1 j
   * Goal 347. Weak Mutation 321: cap2.Ordenacao.mergeSort([III)V:19 - InsertUnaryOp IINC -1 j
   * Goal 348. Weak Mutation 322: cap2.Ordenacao.mergeSort([III)V:20 - ReplaceVariable i -> m
   * Goal 349. Weak Mutation 323: cap2.Ordenacao.mergeSort([III)V:20 - ReplaceVariable i -> j
   * Goal 350. Weak Mutation 324: cap2.Ordenacao.mergeSort([III)V:20 - InsertUnaryOp Negation of i
   * Goal 351. Weak Mutation 325: cap2.Ordenacao.mergeSort([III)V:20 - InsertUnaryOp IINC 1 i
   * Goal 352. Weak Mutation 326: cap2.Ordenacao.mergeSort([III)V:20 - InsertUnaryOp IINC -1 i
   * Goal 353. Weak Mutation 327: cap2.Ordenacao.mergeSort([III)V:20 - ReplaceVariable m -> i
   * Goal 354. Weak Mutation 328: cap2.Ordenacao.mergeSort([III)V:20 - ReplaceVariable m -> j
   * Goal 355. Weak Mutation 329: cap2.Ordenacao.mergeSort([III)V:20 - InsertUnaryOp Negation of m
   * Goal 356. Weak Mutation 330: cap2.Ordenacao.mergeSort([III)V:20 - InsertUnaryOp IINC 1 m
   * Goal 357. Weak Mutation 331: cap2.Ordenacao.mergeSort([III)V:20 - InsertUnaryOp IINC -1 m
   * Goal 358. Weak Mutation 332: cap2.Ordenacao.mergeSort([III)V:20 - ReplaceVariable j -> i
   * Goal 359. Weak Mutation 333: cap2.Ordenacao.mergeSort([III)V:20 - ReplaceVariable j -> m
   * Goal 360. Weak Mutation 334: cap2.Ordenacao.mergeSort([III)V:20 - InsertUnaryOp Negation of j
   * Goal 361. Weak Mutation 335: cap2.Ordenacao.mergeSort([III)V:20 - InsertUnaryOp IINC 1 j
   * Goal 362. Weak Mutation 336: cap2.Ordenacao.mergeSort([III)V:20 - InsertUnaryOp IINC -1 j
   * Goal 363. Branch cap2.Ordenacao.merge([IIII)V: I28 Branch 1 IF_ICMPLE L6 - true in context: 
   * Goal 364. Branch cap2.Ordenacao.merge([IIII)V: I28 Branch 1 IF_ICMPLE L6 - false in context: 
   * Goal 365. Branch cap2.Ordenacao.merge([IIII)V: I57 Branch 2 IF_ICMPGT L10 - true in context: 
   * Goal 366. Branch cap2.Ordenacao.merge([IIII)V: I57 Branch 2 IF_ICMPGT L10 - false in context: 
   * Goal 367. Branch cap2.Ordenacao.merge([IIII)V: I81 Branch 3 IF_ICMPGE L9 - true in context: 
   * Goal 368. Branch cap2.Ordenacao.merge([IIII)V: I81 Branch 3 IF_ICMPGE L9 - false in context: 
   * Goal 369. Branch cap2.Ordenacao.merge([IIII)V: I84 Branch 4 IF_ICMPLE L9 - true in context: 
   * Goal 370. Branch cap2.Ordenacao.merge([IIII)V: I84 Branch 4 IF_ICMPLE L9 - false in context: 
   * Goal 371. Branch cap2.Ordenacao.merge([IIII)V: I100 Branch 5 IF_ICMPLT L13 - true in context: 
   * Goal 372. Branch cap2.Ordenacao.merge([IIII)V: I100 Branch 5 IF_ICMPLT L13 - false in context: 
   * Goal 373. Branch cap2.Ordenacao.mergeSort([III)V: I4 Branch 6 IF_ICMPGE L16 - true in context: cap2.Ordenacao:mergeSort([III)V
   * Goal 374. Branch cap2.Ordenacao.mergeSort([III)V: I4 Branch 6 IF_ICMPGE L16 - false in context: cap2.Ordenacao:mergeSort([III)V
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-1142);
      intArray0[1] = 64;
      intArray0[2] = 1904;
      intArray0[3] = 344;
      int int0 = 2074;
      intArray0[4] = 2074;
      int int1 = 752;
      intArray0[5] = 752;
      int int2 = (-798);
      intArray0[6] = (-798);
      intArray0[7] = (-1376);
      Ordenacao.mergeSort(intArray0, 1904, (-1142));
      int int3 = 1;
      // Undeclared exception!
      try { 
        Ordenacao.mergeSort(intArray0, 1, 1426);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
    	  assertTrue(true);//assertThrownBy("cap2.Ordenacao", e);
      }
  }
}
