/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 24 18:54:37 GMT 2016
 */

package ds;

import org.junit.Test;
import static org.junit.Assert.*;
import ds.Aresta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Aresta_ESTest extends Aresta_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 28 covered goals:
   * Goal 1. ds.Aresta.<init>(III)V: root-Branch
   * Goal 2. ds.Aresta.v2()I: root-Branch
   * Goal 3. Branch ds.Aresta.<init>(III)V: root-Branch in context: ds.Aresta:<init>(III)V
   * Goal 4. Branch ds.Aresta.v2()I: root-Branch in context: ds.Aresta:v2()I
   * Goal 5. [Output]: ds.Aresta.v2()I:Positive
   * Goal 6. ds.Aresta.<init>(III)V: Line 6
   * Goal 7. ds.Aresta.<init>(III)V: Line 7
   * Goal 8. ds.Aresta.v2()I: Line 10
   * Goal 9. [METHOD] ds.Aresta.<init>(III)V
   * Goal 10. [METHOD] ds.Aresta.v2()I
   * Goal 11. [METHODNOEX] ds.Aresta.<init>(III)V
   * Goal 12. [METHODNOEX] ds.Aresta.v2()I
   * Goal 13. Weak Mutation 0: ds.Aresta.<init>(III)V:6 - ReplaceVariable v1 -> v2
   * Goal 14. Weak Mutation 2: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v1
   * Goal 15. Weak Mutation 3: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v1
   * Goal 16. Weak Mutation 4: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v1
   * Goal 17. Weak Mutation 5: ds.Aresta.<init>(III)V:6 - ReplaceVariable v2 -> peso
   * Goal 18. Weak Mutation 6: ds.Aresta.<init>(III)V:6 - ReplaceVariable v2 -> v1
   * Goal 19. Weak Mutation 7: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v2
   * Goal 20. Weak Mutation 8: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v2
   * Goal 21. Weak Mutation 9: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v2
   * Goal 22. Weak Mutation 10: ds.Aresta.<init>(III)V:6 - ReplaceVariable peso -> v2
   * Goal 23. Weak Mutation 12: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of peso
   * Goal 24. Weak Mutation 13: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 peso
   * Goal 25. Weak Mutation 14: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 peso
   * Goal 26. Weak Mutation 21: ds.Aresta.v2()I:10 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 22: ds.Aresta.v2()I:10 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 23: ds.Aresta.v2()I:10 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Aresta aresta0 = new Aresta((-1), 794, (-1));
      int int0 = aresta0.v2();
      assertEquals(-1, aresta0.peso());
      assertEquals(-1, aresta0.v1());
      assertEquals(794, int0);
  }

  //Test case number: 1
  /*
   * 30 covered goals:
   * Goal 1. ds.Aresta.<init>(III)V: root-Branch
   * Goal 2. ds.Aresta.v1()I: root-Branch
   * Goal 3. Branch ds.Aresta.<init>(III)V: root-Branch in context: ds.Aresta:<init>(III)V
   * Goal 4. Branch ds.Aresta.v1()I: root-Branch in context: ds.Aresta:v1()I
   * Goal 5. [Output]: ds.Aresta.v1()I:Zero
   * Goal 6. ds.Aresta.<init>(III)V: Line 6
   * Goal 7. ds.Aresta.<init>(III)V: Line 7
   * Goal 8. ds.Aresta.v1()I: Line 9
   * Goal 9. [METHOD] ds.Aresta.<init>(III)V
   * Goal 10. [METHOD] ds.Aresta.v1()I
   * Goal 11. [METHODNOEX] ds.Aresta.<init>(III)V
   * Goal 12. [METHODNOEX] ds.Aresta.v1()I
   * Goal 13. Weak Mutation 0: ds.Aresta.<init>(III)V:6 - ReplaceVariable v1 -> v2
   * Goal 14. Weak Mutation 1: ds.Aresta.<init>(III)V:6 - ReplaceVariable v1 -> peso
   * Goal 15. Weak Mutation 2: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v1
   * Goal 16. Weak Mutation 3: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v1
   * Goal 17. Weak Mutation 4: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v1
   * Goal 18. Weak Mutation 5: ds.Aresta.<init>(III)V:6 - ReplaceVariable v2 -> peso
   * Goal 19. Weak Mutation 6: ds.Aresta.<init>(III)V:6 - ReplaceVariable v2 -> v1
   * Goal 20. Weak Mutation 7: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v2
   * Goal 21. Weak Mutation 8: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v2
   * Goal 22. Weak Mutation 9: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v2
   * Goal 23. Weak Mutation 10: ds.Aresta.<init>(III)V:6 - ReplaceVariable peso -> v2
   * Goal 24. Weak Mutation 11: ds.Aresta.<init>(III)V:6 - ReplaceVariable peso -> v1
   * Goal 25. Weak Mutation 12: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of peso
   * Goal 26. Weak Mutation 13: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 peso
   * Goal 27. Weak Mutation 14: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 peso
   * Goal 28. Weak Mutation 18: ds.Aresta.v1()I:9 - InsertUnaryOp Negation
   * Goal 29. Weak Mutation 19: ds.Aresta.v1()I:9 - InsertUnaryOp +1
   * Goal 30. Weak Mutation 20: ds.Aresta.v1()I:9 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Aresta aresta0 = new Aresta(0, (-609), (-921));
      int int0 = aresta0.v1();
      assertEquals(-609, aresta0.v2());
      assertEquals(-921, aresta0.peso());
      assertEquals(0, int0);
  }

  //Test case number: 2
  /*
   * 30 covered goals:
   * Goal 1. ds.Aresta.<init>(III)V: root-Branch
   * Goal 2. ds.Aresta.v1()I: root-Branch
   * Goal 3. Branch ds.Aresta.<init>(III)V: root-Branch in context: ds.Aresta:<init>(III)V
   * Goal 4. Branch ds.Aresta.v1()I: root-Branch in context: ds.Aresta:v1()I
   * Goal 5. [Output]: ds.Aresta.v1()I:Positive
   * Goal 6. ds.Aresta.<init>(III)V: Line 6
   * Goal 7. ds.Aresta.<init>(III)V: Line 7
   * Goal 8. ds.Aresta.v1()I: Line 9
   * Goal 9. [METHOD] ds.Aresta.<init>(III)V
   * Goal 10. [METHOD] ds.Aresta.v1()I
   * Goal 11. [METHODNOEX] ds.Aresta.<init>(III)V
   * Goal 12. [METHODNOEX] ds.Aresta.v1()I
   * Goal 13. Weak Mutation 0: ds.Aresta.<init>(III)V:6 - ReplaceVariable v1 -> v2
   * Goal 14. Weak Mutation 1: ds.Aresta.<init>(III)V:6 - ReplaceVariable v1 -> peso
   * Goal 15. Weak Mutation 2: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v1
   * Goal 16. Weak Mutation 3: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v1
   * Goal 17. Weak Mutation 4: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v1
   * Goal 18. Weak Mutation 5: ds.Aresta.<init>(III)V:6 - ReplaceVariable v2 -> peso
   * Goal 19. Weak Mutation 6: ds.Aresta.<init>(III)V:6 - ReplaceVariable v2 -> v1
   * Goal 20. Weak Mutation 7: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v2
   * Goal 21. Weak Mutation 8: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v2
   * Goal 22. Weak Mutation 9: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v2
   * Goal 23. Weak Mutation 10: ds.Aresta.<init>(III)V:6 - ReplaceVariable peso -> v2
   * Goal 24. Weak Mutation 11: ds.Aresta.<init>(III)V:6 - ReplaceVariable peso -> v1
   * Goal 25. Weak Mutation 12: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of peso
   * Goal 26. Weak Mutation 13: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 peso
   * Goal 27. Weak Mutation 14: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 peso
   * Goal 28. Weak Mutation 18: ds.Aresta.v1()I:9 - InsertUnaryOp Negation
   * Goal 29. Weak Mutation 19: ds.Aresta.v1()I:9 - InsertUnaryOp +1
   * Goal 30. Weak Mutation 20: ds.Aresta.v1()I:9 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Aresta aresta0 = new Aresta(2180, 0, (-609));
      int int0 = aresta0.v1();
      assertEquals(2180, int0);
      assertEquals(0, aresta0.v2());
      assertEquals(-609, aresta0.peso());
  }

  //Test case number: 3
  /*
   * 28 covered goals:
   * Goal 1. ds.Aresta.<init>(III)V: root-Branch
   * Goal 2. ds.Aresta.peso()I: root-Branch
   * Goal 3. Branch ds.Aresta.<init>(III)V: root-Branch in context: ds.Aresta:<init>(III)V
   * Goal 4. Branch ds.Aresta.peso()I: root-Branch in context: ds.Aresta:peso()I
   * Goal 5. [Output]: ds.Aresta.peso()I:Zero
   * Goal 6. ds.Aresta.<init>(III)V: Line 6
   * Goal 7. ds.Aresta.<init>(III)V: Line 7
   * Goal 8. ds.Aresta.peso()I: Line 8
   * Goal 9. [METHOD] ds.Aresta.<init>(III)V
   * Goal 10. [METHOD] ds.Aresta.peso()I
   * Goal 11. [METHODNOEX] ds.Aresta.<init>(III)V
   * Goal 12. [METHODNOEX] ds.Aresta.peso()I
   * Goal 13. Weak Mutation 1: ds.Aresta.<init>(III)V:6 - ReplaceVariable v1 -> peso
   * Goal 14. Weak Mutation 2: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v1
   * Goal 15. Weak Mutation 3: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v1
   * Goal 16. Weak Mutation 4: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v1
   * Goal 17. Weak Mutation 5: ds.Aresta.<init>(III)V:6 - ReplaceVariable v2 -> peso
   * Goal 18. Weak Mutation 7: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v2
   * Goal 19. Weak Mutation 8: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v2
   * Goal 20. Weak Mutation 9: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v2
   * Goal 21. Weak Mutation 10: ds.Aresta.<init>(III)V:6 - ReplaceVariable peso -> v2
   * Goal 22. Weak Mutation 11: ds.Aresta.<init>(III)V:6 - ReplaceVariable peso -> v1
   * Goal 23. Weak Mutation 12: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of peso
   * Goal 24. Weak Mutation 13: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 peso
   * Goal 25. Weak Mutation 14: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 peso
   * Goal 26. Weak Mutation 15: ds.Aresta.peso()I:8 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 16: ds.Aresta.peso()I:8 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 17: ds.Aresta.peso()I:8 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Aresta aresta0 = new Aresta((-1), (-1), 0);
      int int0 = aresta0.peso();
      assertEquals(0, int0);
      assertEquals(-1, aresta0.v2());
      assertEquals(-1, aresta0.v1());
  }

  //Test case number: 4
  /*
   * 28 covered goals:
   * Goal 1. ds.Aresta.<init>(III)V: root-Branch
   * Goal 2. ds.Aresta.peso()I: root-Branch
   * Goal 3. Branch ds.Aresta.<init>(III)V: root-Branch in context: ds.Aresta:<init>(III)V
   * Goal 4. Branch ds.Aresta.peso()I: root-Branch in context: ds.Aresta:peso()I
   * Goal 5. [Output]: ds.Aresta.peso()I:Positive
   * Goal 6. ds.Aresta.<init>(III)V: Line 6
   * Goal 7. ds.Aresta.<init>(III)V: Line 7
   * Goal 8. ds.Aresta.peso()I: Line 8
   * Goal 9. [METHOD] ds.Aresta.<init>(III)V
   * Goal 10. [METHOD] ds.Aresta.peso()I
   * Goal 11. [METHODNOEX] ds.Aresta.<init>(III)V
   * Goal 12. [METHODNOEX] ds.Aresta.peso()I
   * Goal 13. Weak Mutation 0: ds.Aresta.<init>(III)V:6 - ReplaceVariable v1 -> v2
   * Goal 14. Weak Mutation 1: ds.Aresta.<init>(III)V:6 - ReplaceVariable v1 -> peso
   * Goal 15. Weak Mutation 2: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v1
   * Goal 16. Weak Mutation 3: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v1
   * Goal 17. Weak Mutation 4: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v1
   * Goal 18. Weak Mutation 6: ds.Aresta.<init>(III)V:6 - ReplaceVariable v2 -> v1
   * Goal 19. Weak Mutation 7: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v2
   * Goal 20. Weak Mutation 8: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v2
   * Goal 21. Weak Mutation 9: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v2
   * Goal 22. Weak Mutation 11: ds.Aresta.<init>(III)V:6 - ReplaceVariable peso -> v1
   * Goal 23. Weak Mutation 12: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of peso
   * Goal 24. Weak Mutation 13: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 peso
   * Goal 25. Weak Mutation 14: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 peso
   * Goal 26. Weak Mutation 15: ds.Aresta.peso()I:8 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 16: ds.Aresta.peso()I:8 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 17: ds.Aresta.peso()I:8 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Aresta aresta0 = new Aresta(0, 3588, 3588);
      int int0 = aresta0.peso();
      assertEquals(0, aresta0.v1());
      assertEquals(3588, aresta0.v2());
      assertEquals(3588, int0);
  }

  //Test case number: 5
  /*
   * 28 covered goals:
   * Goal 1. ds.Aresta.<init>(III)V: root-Branch
   * Goal 2. ds.Aresta.v2()I: root-Branch
   * Goal 3. Branch ds.Aresta.<init>(III)V: root-Branch in context: ds.Aresta:<init>(III)V
   * Goal 4. Branch ds.Aresta.v2()I: root-Branch in context: ds.Aresta:v2()I
   * Goal 5. [Output]: ds.Aresta.v2()I:Negative
   * Goal 6. ds.Aresta.<init>(III)V: Line 6
   * Goal 7. ds.Aresta.<init>(III)V: Line 7
   * Goal 8. ds.Aresta.v2()I: Line 10
   * Goal 9. [METHOD] ds.Aresta.<init>(III)V
   * Goal 10. [METHOD] ds.Aresta.v2()I
   * Goal 11. [METHODNOEX] ds.Aresta.<init>(III)V
   * Goal 12. [METHODNOEX] ds.Aresta.v2()I
   * Goal 13. Weak Mutation 1: ds.Aresta.<init>(III)V:6 - ReplaceVariable v1 -> peso
   * Goal 14. Weak Mutation 2: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v1
   * Goal 15. Weak Mutation 3: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v1
   * Goal 16. Weak Mutation 4: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v1
   * Goal 17. Weak Mutation 5: ds.Aresta.<init>(III)V:6 - ReplaceVariable v2 -> peso
   * Goal 18. Weak Mutation 7: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v2
   * Goal 19. Weak Mutation 8: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v2
   * Goal 20. Weak Mutation 9: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v2
   * Goal 21. Weak Mutation 10: ds.Aresta.<init>(III)V:6 - ReplaceVariable peso -> v2
   * Goal 22. Weak Mutation 11: ds.Aresta.<init>(III)V:6 - ReplaceVariable peso -> v1
   * Goal 23. Weak Mutation 12: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of peso
   * Goal 24. Weak Mutation 13: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 peso
   * Goal 25. Weak Mutation 14: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 peso
   * Goal 26. Weak Mutation 21: ds.Aresta.v2()I:10 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 22: ds.Aresta.v2()I:10 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 23: ds.Aresta.v2()I:10 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Aresta aresta0 = new Aresta((-1), (-1), (-609));
      int int0 = aresta0.v2();
      assertEquals((-1), int0);
      assertEquals(-609, aresta0.peso());
      assertEquals(-1, aresta0.v1());
  }

  //Test case number: 6
  /*
   * 28 covered goals:
   * Goal 1. ds.Aresta.<init>(III)V: root-Branch
   * Goal 2. ds.Aresta.v1()I: root-Branch
   * Goal 3. Branch ds.Aresta.<init>(III)V: root-Branch in context: ds.Aresta:<init>(III)V
   * Goal 4. Branch ds.Aresta.v1()I: root-Branch in context: ds.Aresta:v1()I
   * Goal 5. [Output]: ds.Aresta.v1()I:Negative
   * Goal 6. ds.Aresta.<init>(III)V: Line 6
   * Goal 7. ds.Aresta.<init>(III)V: Line 7
   * Goal 8. ds.Aresta.v1()I: Line 9
   * Goal 9. [METHOD] ds.Aresta.<init>(III)V
   * Goal 10. [METHOD] ds.Aresta.v1()I
   * Goal 11. [METHODNOEX] ds.Aresta.<init>(III)V
   * Goal 12. [METHODNOEX] ds.Aresta.v1()I
   * Goal 13. Weak Mutation 1: ds.Aresta.<init>(III)V:6 - ReplaceVariable v1 -> peso
   * Goal 14. Weak Mutation 2: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v1
   * Goal 15. Weak Mutation 3: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v1
   * Goal 16. Weak Mutation 4: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v1
   * Goal 17. Weak Mutation 5: ds.Aresta.<init>(III)V:6 - ReplaceVariable v2 -> peso
   * Goal 18. Weak Mutation 7: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v2
   * Goal 19. Weak Mutation 8: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v2
   * Goal 20. Weak Mutation 9: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v2
   * Goal 21. Weak Mutation 10: ds.Aresta.<init>(III)V:6 - ReplaceVariable peso -> v2
   * Goal 22. Weak Mutation 11: ds.Aresta.<init>(III)V:6 - ReplaceVariable peso -> v1
   * Goal 23. Weak Mutation 12: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of peso
   * Goal 24. Weak Mutation 13: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 peso
   * Goal 25. Weak Mutation 14: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 peso
   * Goal 26. Weak Mutation 18: ds.Aresta.v1()I:9 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 19: ds.Aresta.v1()I:9 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 20: ds.Aresta.v1()I:9 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Aresta aresta0 = new Aresta((-1), (-1), (-609));
      int int0 = aresta0.v1();
      assertEquals(-609, aresta0.peso());
      assertEquals((-1), int0);
      assertEquals(-1, aresta0.v2());
  }

  //Test case number: 7
  /*
   * 28 covered goals:
   * Goal 1. ds.Aresta.<init>(III)V: root-Branch
   * Goal 2. ds.Aresta.peso()I: root-Branch
   * Goal 3. Branch ds.Aresta.<init>(III)V: root-Branch in context: ds.Aresta:<init>(III)V
   * Goal 4. Branch ds.Aresta.peso()I: root-Branch in context: ds.Aresta:peso()I
   * Goal 5. [Output]: ds.Aresta.peso()I:Negative
   * Goal 6. ds.Aresta.<init>(III)V: Line 6
   * Goal 7. ds.Aresta.<init>(III)V: Line 7
   * Goal 8. ds.Aresta.peso()I: Line 8
   * Goal 9. [METHOD] ds.Aresta.<init>(III)V
   * Goal 10. [METHOD] ds.Aresta.peso()I
   * Goal 11. [METHODNOEX] ds.Aresta.<init>(III)V
   * Goal 12. [METHODNOEX] ds.Aresta.peso()I
   * Goal 13. Weak Mutation 1: ds.Aresta.<init>(III)V:6 - ReplaceVariable v1 -> peso
   * Goal 14. Weak Mutation 2: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v1
   * Goal 15. Weak Mutation 3: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v1
   * Goal 16. Weak Mutation 4: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v1
   * Goal 17. Weak Mutation 5: ds.Aresta.<init>(III)V:6 - ReplaceVariable v2 -> peso
   * Goal 18. Weak Mutation 7: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v2
   * Goal 19. Weak Mutation 8: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v2
   * Goal 20. Weak Mutation 9: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v2
   * Goal 21. Weak Mutation 10: ds.Aresta.<init>(III)V:6 - ReplaceVariable peso -> v2
   * Goal 22. Weak Mutation 11: ds.Aresta.<init>(III)V:6 - ReplaceVariable peso -> v1
   * Goal 23. Weak Mutation 12: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of peso
   * Goal 24. Weak Mutation 13: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 peso
   * Goal 25. Weak Mutation 14: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 peso
   * Goal 26. Weak Mutation 15: ds.Aresta.peso()I:8 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 16: ds.Aresta.peso()I:8 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 17: ds.Aresta.peso()I:8 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Aresta aresta0 = new Aresta((-1), (-1), (-609));
      int int0 = aresta0.peso();
      assertEquals((-609), int0);
      assertEquals(-1, aresta0.v1());
      assertEquals(-1, aresta0.v2());
  }

  //Test case number: 8
  /*
   * 28 covered goals:
   * Goal 1. ds.Aresta.<init>(III)V: root-Branch
   * Goal 2. ds.Aresta.v2()I: root-Branch
   * Goal 3. Branch ds.Aresta.<init>(III)V: root-Branch in context: ds.Aresta:<init>(III)V
   * Goal 4. Branch ds.Aresta.v2()I: root-Branch in context: ds.Aresta:v2()I
   * Goal 5. [Output]: ds.Aresta.v2()I:Zero
   * Goal 6. ds.Aresta.<init>(III)V: Line 6
   * Goal 7. ds.Aresta.<init>(III)V: Line 7
   * Goal 8. ds.Aresta.v2()I: Line 10
   * Goal 9. [METHOD] ds.Aresta.<init>(III)V
   * Goal 10. [METHOD] ds.Aresta.v2()I
   * Goal 11. [METHODNOEX] ds.Aresta.<init>(III)V
   * Goal 12. [METHODNOEX] ds.Aresta.v2()I
   * Goal 13. Weak Mutation 0: ds.Aresta.<init>(III)V:6 - ReplaceVariable v1 -> v2
   * Goal 14. Weak Mutation 1: ds.Aresta.<init>(III)V:6 - ReplaceVariable v1 -> peso
   * Goal 15. Weak Mutation 2: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v1
   * Goal 16. Weak Mutation 3: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v1
   * Goal 17. Weak Mutation 4: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v1
   * Goal 18. Weak Mutation 6: ds.Aresta.<init>(III)V:6 - ReplaceVariable v2 -> v1
   * Goal 19. Weak Mutation 7: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of v2
   * Goal 20. Weak Mutation 8: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 v2
   * Goal 21. Weak Mutation 9: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 v2
   * Goal 22. Weak Mutation 11: ds.Aresta.<init>(III)V:6 - ReplaceVariable peso -> v1
   * Goal 23. Weak Mutation 12: ds.Aresta.<init>(III)V:6 - InsertUnaryOp Negation of peso
   * Goal 24. Weak Mutation 13: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC 1 peso
   * Goal 25. Weak Mutation 14: ds.Aresta.<init>(III)V:6 - InsertUnaryOp IINC -1 peso
   * Goal 26. Weak Mutation 21: ds.Aresta.v2()I:10 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 22: ds.Aresta.v2()I:10 - InsertUnaryOp +1
   * Goal 28. Weak Mutation 23: ds.Aresta.v2()I:10 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Aresta aresta0 = new Aresta((-1), 0, 0);
      int int0 = aresta0.v2();
      assertEquals(0, aresta0.peso());
      assertEquals(0, int0);
      assertEquals(-1, aresta0.v1());
  }
}
