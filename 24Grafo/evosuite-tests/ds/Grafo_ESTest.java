/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 04 20:23:57 GMT 2016
 */

package ds;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ds.Grafo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Grafo_ESTest extends Grafo_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 81 covered goals:
   * Goal 1. ds.Grafo.<init>()V: I34 Branch 1 IF_ICMPGE L14 - false
   * Goal 2. ds.Grafo.<init>()V: I43 Branch 2 IF_ICMPGE L15 - true
   * Goal 3. ds.Grafo.<init>()V: I43 Branch 2 IF_ICMPGE L15 - false
   * Goal 4. Branch ds.Grafo.<init>()V: I34 Branch 1 IF_ICMPGE L14 - false in context: ds.Grafo:<init>()V
   * Goal 5. Branch ds.Grafo.<init>()V: I43 Branch 2 IF_ICMPGE L15 - true in context: ds.Grafo:<init>()V
   * Goal 6. Branch ds.Grafo.<init>()V: I43 Branch 2 IF_ICMPGE L15 - false in context: ds.Grafo:<init>()V
   * Goal 7. <init>()V_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   * Goal 8. ds.Grafo.<init>()V: Line 10
   * Goal 9. ds.Grafo.<init>()V: Line 11
   * Goal 10. ds.Grafo.<init>()V: Line 12
   * Goal 11. ds.Grafo.<init>()V: Line 13
   * Goal 12. ds.Grafo.<init>()V: Line 14
   * Goal 13. ds.Grafo.<init>()V: Line 15
   * Goal 14. ds.Grafo.<init>()V: Line 16
   * Goal 15. [METHOD] ds.Grafo.<init>()V
   * Goal 16. Weak Mutation 0: ds.Grafo.<init>()V:10 - ReplaceConstant - 100 -> 0
   * Goal 17. Weak Mutation 1: ds.Grafo.<init>()V:10 - ReplaceConstant - 100 -> 1
   * Goal 18. Weak Mutation 2: ds.Grafo.<init>()V:10 - ReplaceConstant - 100 -> -1
   * Goal 19. Weak Mutation 3: ds.Grafo.<init>()V:10 - ReplaceConstant - 100 -> 99
   * Goal 20. Weak Mutation 4: ds.Grafo.<init>()V:10 - ReplaceConstant - 100 -> 101
   * Goal 21. Weak Mutation 5: ds.Grafo.<init>()V:11 - ReplaceConstant - 100 -> 0
   * Goal 22. Weak Mutation 6: ds.Grafo.<init>()V:11 - ReplaceConstant - 100 -> 1
   * Goal 23. Weak Mutation 7: ds.Grafo.<init>()V:11 - ReplaceConstant - 100 -> -1
   * Goal 24. Weak Mutation 8: ds.Grafo.<init>()V:11 - ReplaceConstant - 100 -> 99
   * Goal 25. Weak Mutation 9: ds.Grafo.<init>()V:11 - ReplaceConstant - 100 -> 101
   * Goal 26. Weak Mutation 10: ds.Grafo.<init>()V:11 - ReplaceConstant - 100 -> 0
   * Goal 27. Weak Mutation 11: ds.Grafo.<init>()V:11 - ReplaceConstant - 100 -> 1
   * Goal 28. Weak Mutation 12: ds.Grafo.<init>()V:11 - ReplaceConstant - 100 -> -1
   * Goal 29. Weak Mutation 13: ds.Grafo.<init>()V:11 - ReplaceConstant - 100 -> 99
   * Goal 30. Weak Mutation 14: ds.Grafo.<init>()V:11 - ReplaceConstant - 100 -> 101
   * Goal 31. Weak Mutation 15: ds.Grafo.<init>()V:12 - ReplaceConstant - 100 -> 0
   * Goal 32. Weak Mutation 16: ds.Grafo.<init>()V:12 - ReplaceConstant - 100 -> 1
   * Goal 33. Weak Mutation 17: ds.Grafo.<init>()V:12 - ReplaceConstant - 100 -> -1
   * Goal 34. Weak Mutation 18: ds.Grafo.<init>()V:12 - ReplaceConstant - 100 -> 99
   * Goal 35. Weak Mutation 19: ds.Grafo.<init>()V:12 - ReplaceConstant - 100 -> 101
   * Goal 36. Weak Mutation 20: ds.Grafo.<init>()V:13 - ReplaceConstant - 100 -> 0
   * Goal 37. Weak Mutation 21: ds.Grafo.<init>()V:13 - ReplaceConstant - 100 -> 1
   * Goal 38. Weak Mutation 22: ds.Grafo.<init>()V:13 - ReplaceConstant - 100 -> -1
   * Goal 39. Weak Mutation 23: ds.Grafo.<init>()V:13 - ReplaceConstant - 100 -> 99
   * Goal 40. Weak Mutation 24: ds.Grafo.<init>()V:13 - ReplaceConstant - 100 -> 101
   * Goal 41. Weak Mutation 25: ds.Grafo.<init>()V:14 - ReplaceConstant - 0 -> 1
   * Goal 42. Weak Mutation 26: ds.Grafo.<init>()V:14 - ReplaceVariable i -> numVertices
   * Goal 43. Weak Mutation 27: ds.Grafo.<init>()V:14 - InsertUnaryOp Negation of i
   * Goal 44. Weak Mutation 28: ds.Grafo.<init>()V:14 - InsertUnaryOp IINC 1 i
   * Goal 45. Weak Mutation 29: ds.Grafo.<init>()V:14 - InsertUnaryOp IINC -1 i
   * Goal 46. Weak Mutation 30: ds.Grafo.<init>()V:14 - InsertUnaryOp Negation
   * Goal 47. Weak Mutation 31: ds.Grafo.<init>()V:14 - InsertUnaryOp +1
   * Goal 48. Weak Mutation 32: ds.Grafo.<init>()V:14 - InsertUnaryOp -1
   * Goal 49. Weak Mutation 33: ds.Grafo.<init>()V:14 - ReplaceComparisonOperator >= -> -1
   * Goal 50. Weak Mutation 68: ds.Grafo.<init>()V:14 - ReplaceVariable i -> numVertices
   * Goal 51. Weak Mutation 36: ds.Grafo.<init>()V:15 - ReplaceConstant - 0 -> 1
   * Goal 52. Weak Mutation 37: ds.Grafo.<init>()V:15 - ReplaceVariable j -> numVertices
   * Goal 53. Weak Mutation 38: ds.Grafo.<init>()V:15 - ReplaceVariable j -> i
   * Goal 54. Weak Mutation 39: ds.Grafo.<init>()V:15 - InsertUnaryOp Negation of j
   * Goal 55. Weak Mutation 40: ds.Grafo.<init>()V:15 - InsertUnaryOp IINC 1 j
   * Goal 56. Weak Mutation 41: ds.Grafo.<init>()V:15 - InsertUnaryOp IINC -1 j
   * Goal 57. Weak Mutation 42: ds.Grafo.<init>()V:15 - InsertUnaryOp Negation
   * Goal 58. Weak Mutation 43: ds.Grafo.<init>()V:15 - InsertUnaryOp +1
   * Goal 59. Weak Mutation 44: ds.Grafo.<init>()V:15 - InsertUnaryOp -1
   * Goal 60. Weak Mutation 45: ds.Grafo.<init>()V:15 - ReplaceComparisonOperator >= -> -1
   * Goal 61. Weak Mutation 46: ds.Grafo.<init>()V:15 - ReplaceComparisonOperator >= -> >
   * Goal 62. Weak Mutation 48: ds.Grafo.<init>()V:15 - ReplaceVariable i -> numVertices
   * Goal 63. Weak Mutation 49: ds.Grafo.<init>()V:15 - ReplaceVariable i -> j
   * Goal 64. Weak Mutation 50: ds.Grafo.<init>()V:15 - InsertUnaryOp Negation of i
   * Goal 65. Weak Mutation 51: ds.Grafo.<init>()V:15 - InsertUnaryOp IINC 1 i
   * Goal 66. Weak Mutation 52: ds.Grafo.<init>()V:15 - InsertUnaryOp IINC -1 i
   * Goal 67. Weak Mutation 53: ds.Grafo.<init>()V:15 - ReplaceVariable j -> numVertices
   * Goal 68. Weak Mutation 54: ds.Grafo.<init>()V:15 - ReplaceVariable j -> i
   * Goal 69. Weak Mutation 55: ds.Grafo.<init>()V:15 - InsertUnaryOp Negation of j
   * Goal 70. Weak Mutation 56: ds.Grafo.<init>()V:15 - InsertUnaryOp IINC 1 j
   * Goal 71. Weak Mutation 57: ds.Grafo.<init>()V:15 - InsertUnaryOp IINC -1 j
   * Goal 72. Weak Mutation 58: ds.Grafo.<init>()V:15 - ReplaceConstant - 0 -> 1
   * Goal 73. Weak Mutation 59: ds.Grafo.<init>()V:15 - ReplaceVariable j -> numVertices
   * Goal 74. Weak Mutation 60: ds.Grafo.<init>()V:15 - ReplaceVariable j -> i
   * Goal 75. Weak Mutation 61: ds.Grafo.<init>()V:16 - ReplaceVariable i -> numVertices
   * Goal 76. Weak Mutation 62: ds.Grafo.<init>()V:16 - InsertUnaryOp Negation of i
   * Goal 77. Weak Mutation 63: ds.Grafo.<init>()V:16 - InsertUnaryOp IINC 1 i
   * Goal 78. Weak Mutation 64: ds.Grafo.<init>()V:16 - InsertUnaryOp IINC -1 i
   * Goal 79. Weak Mutation 65: ds.Grafo.<init>()V:16 - ReplaceConstant - -1 -> 0
   * Goal 80. Weak Mutation 66: ds.Grafo.<init>()V:16 - ReplaceConstant - -1 -> 1
   * Goal 81. Weak Mutation 67: ds.Grafo.<init>()V:16 - ReplaceConstant - -1 -> -2
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Grafo grafo0 = null;
      try {
        grafo0 = new Grafo();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }
}
