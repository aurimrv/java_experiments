/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 04 21:00:26 GMT 2020
 */

package ds.seed9121;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ds.Grafo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Evo extends Grafo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Grafo grafo0 = new Grafo(890);
      grafo0.insereAresta(953, 890, 0);
      grafo0.imprime();
      assertEquals(890, grafo0.numVertices());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Grafo grafo0 = new Grafo(2);
      grafo0.insereAresta(0, 0, 381);
      Grafo.Aresta grafo_Aresta0 = grafo0.retiraAresta(2, 2);
      assertEquals(2, grafo_Aresta0.v1());
      assertEquals(2, grafo_Aresta0.v2());
      assertNotNull(grafo_Aresta0);
      assertEquals(0, grafo_Aresta0.peso());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Grafo grafo0 = new Grafo(3383);
      Grafo.Aresta grafo_Aresta0 = grafo0.retiraAresta(0, (-582));
      assertEquals(3383, grafo0.numVertices());
      assertNull(grafo_Aresta0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Grafo grafo0 = new Grafo(1849);
      int[] intArray0 = new int[3];
      intArray0[0] = 1849;
      grafo0.prox = intArray0;
      // Undeclared exception!
      try { 
        grafo0.retiraAresta(0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1849
         //
         verifyException("ds.Grafo", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Grafo grafo0 = new Grafo(2642);
      int[] intArray0 = new int[9];
      intArray0[0] = 2642;
      grafo0.prox = intArray0;
      // Undeclared exception!
      try { 
        grafo0.retiraAresta(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2642
         //
         verifyException("ds.Grafo", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Grafo grafo0 = new Grafo(3383);
      grafo0.insereAresta(0, 0, 3383);
      boolean boolean0 = grafo0.existeAresta(0, 0);
      assertEquals(3383, grafo0.numVertices());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Grafo grafo0 = new Grafo(3383);
      grafo0.insereAresta(0, 1494, (-45));
      boolean boolean0 = grafo0.existeAresta(0, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Grafo grafo0 = new Grafo(2);
      int int0 = grafo0.numVertices();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Grafo grafo0 = new Grafo(4500);
      grafo0.insereAresta(4500, (-1), (-3371));
      Grafo grafo1 = grafo0.grafoTransposto();
      assertNotSame(grafo0, grafo1);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Grafo grafo0 = new Grafo(0);
      Grafo.Aresta grafo_Aresta0 = grafo0.retiraAresta(0, 0);
      assertNotNull(grafo_Aresta0);
      
      int int0 = grafo_Aresta0.v2();
      assertEquals(0, grafo0.numVertices());
      assertEquals(0, int0);
      assertEquals(0, grafo_Aresta0.v1());
  }
}
