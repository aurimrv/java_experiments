/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 04 20:59:20 GMT 2020
 */

package ds.seed9006;

import org.junit.Ignore;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ds.Grafo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Evo extends Grafo_ESTest_scaffolding {

  @Ignore
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Grafo grafo0 = new Grafo(960);
      grafo0.prox = grafo0.cab;
      // Undeclared exception!
      grafo0.imprime();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Grafo grafo0 = new Grafo(1);
      grafo0.imprime();
      assertEquals(1, grafo0.numVertices());
  }

  @Ignore
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Grafo grafo0 = new Grafo(2);
      int[] intArray0 = new int[4];
      intArray0[2] = 2;
      grafo0.prox = intArray0;
      // Undeclared exception!
      grafo0.retiraAresta(2, (-295));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Grafo grafo0 = new Grafo(0);
      grafo0.insereAresta(0, 0, 580);
      grafo0.insereAresta(0, 0, (-1));
      Grafo.Aresta grafo_Aresta0 = grafo0.retiraAresta(0, 0);
      assertNotNull(grafo_Aresta0);
      assertEquals((-1), grafo_Aresta0.peso());
      assertEquals(0, grafo_Aresta0.v2());
      assertEquals(0, grafo_Aresta0.v1());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Grafo grafo0 = new Grafo(2733);
      Grafo.Aresta grafo_Aresta0 = grafo0.retiraAresta(2733, 2733);
      assertNull(grafo_Aresta0);
      assertEquals(2733, grafo0.numVertices());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Grafo grafo0 = new Grafo(1907);
      grafo0.insereAresta(1907, 4500, 4500);
      boolean boolean0 = grafo0.existeAresta(0, 1907);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Grafo grafo0 = new Grafo(0);
      grafo0.insereAresta(0, (-606), (-1921));
      grafo0.insereAresta(0, (-653), (-606));
      grafo0.existeAresta(0, (-3119));
      assertEquals(0, grafo0.numVertices());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Grafo grafo0 = new Grafo(4500);
      int int0 = grafo0.numVertices();
      assertEquals(4500, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Grafo grafo0 = new Grafo(2733);
      grafo0.insereAresta(2733, 2733, 2719);
      Grafo grafo1 = grafo0.grafoTransposto();
      grafo1.cab = grafo0.prox;
      Grafo.Aresta grafo_Aresta0 = grafo1.retiraAresta(2733, 2733);
      assertNotNull(grafo_Aresta0);
      assertEquals(2733, grafo_Aresta0.v2());
      assertEquals(2733, grafo_Aresta0.v1());
      assertEquals(0, grafo_Aresta0.peso());
  }
}
