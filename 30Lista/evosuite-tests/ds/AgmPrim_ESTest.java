/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 09 13:02:28 GMT 2016
 */

package ds;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ds.AgmPrim;
import ds.Grafo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AgmPrim_ESTest extends AgmPrim_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 118 covered goals:
   * Goal 1. ds.AgmPrim.<init>(Lds/Grafo;)V: root-Branch
   * Goal 2. ds.AgmPrim.peso(I)D: root-Branch
   * Goal 3. ds.AgmPrim.obterAgm(I)V: I69 Branch 1 IF_ICMPLT L14 - true
   * Goal 4. ds.AgmPrim.obterAgm(I)V: I162 Branch 5 IFNONNULL L27 - true
   * Goal 5. ds.AgmPrim.obterAgm(I)V: I69 Branch 1 IF_ICMPLT L14 - false
   * Goal 6. ds.AgmPrim.obterAgm(I)V: I167 Branch 6 IFEQ L23 - true
   * Goal 7. ds.AgmPrim.obterAgm(I)V: I109 Branch 2 IFNE L25 - false
   * Goal 8. ds.AgmPrim.obterAgm(I)V: I130 Branch 3 IFEQ L29 - false
   * Goal 9. ds.AgmPrim.obterAgm(I)V: I138 Branch 4 IFGE L29 - false
   * Goal 10. Weak Mutation 101: ds.AgmPrim.peso(I)D:38 - InsertUnaryOp Negation of u
   * Goal 11. Weak Mutation 102: ds.AgmPrim.peso(I)D:38 - InsertUnaryOp IINC 1 u
   * Goal 12. Weak Mutation 103: ds.AgmPrim.peso(I)D:38 - InsertUnaryOp IINC -1 u
   * Goal 13. Weak Mutation 1: ds.AgmPrim.obterAgm(I)V:11 - InsertUnaryOp Negation of n
   * Goal 14. Weak Mutation 2: ds.AgmPrim.obterAgm(I)V:11 - InsertUnaryOp IINC 1 n
   * Goal 15. Weak Mutation 3: ds.AgmPrim.obterAgm(I)V:11 - InsertUnaryOp IINC -1 n
   * Goal 16. Weak Mutation 5: ds.AgmPrim.obterAgm(I)V:12 - InsertUnaryOp Negation of n
   * Goal 17. Weak Mutation 6: ds.AgmPrim.obterAgm(I)V:12 - InsertUnaryOp IINC 1 n
   * Goal 18. Weak Mutation 7: ds.AgmPrim.obterAgm(I)V:12 - InsertUnaryOp IINC -1 n
   * Goal 19. Weak Mutation 8: ds.AgmPrim.obterAgm(I)V:12 - ReplaceConstant - 1 -> 0
   * Goal 20. Weak Mutation 9: ds.AgmPrim.obterAgm(I)V:12 - ReplaceArithmeticOperator + -> %
   * Goal 21. Weak Mutation 10: ds.AgmPrim.obterAgm(I)V:12 - ReplaceArithmeticOperator + -> -
   * Goal 22. Weak Mutation 11: ds.AgmPrim.obterAgm(I)V:12 - ReplaceArithmeticOperator + -> *
   * Goal 23. Weak Mutation 12: ds.AgmPrim.obterAgm(I)V:12 - ReplaceArithmeticOperator + -> /
   * Goal 24. Weak Mutation 14: ds.AgmPrim.obterAgm(I)V:13 - InsertUnaryOp Negation of n
   * Goal 25. Weak Mutation 15: ds.AgmPrim.obterAgm(I)V:13 - InsertUnaryOp IINC 1 n
   * Goal 26. Weak Mutation 16: ds.AgmPrim.obterAgm(I)V:13 - InsertUnaryOp IINC -1 n
   * Goal 27. Weak Mutation 18: ds.AgmPrim.obterAgm(I)V:13 - InsertUnaryOp Negation of n
   * Goal 28. Weak Mutation 19: ds.AgmPrim.obterAgm(I)V:13 - InsertUnaryOp IINC 1 n
   * Goal 29. Weak Mutation 20: ds.AgmPrim.obterAgm(I)V:13 - InsertUnaryOp IINC -1 n
   * Goal 30. Weak Mutation 21: ds.AgmPrim.obterAgm(I)V:14 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 64: ds.AgmPrim.obterAgm(I)V:14 - InsertUnaryOp Negation of u
   * Goal 32. Weak Mutation 65: ds.AgmPrim.obterAgm(I)V:14 - InsertUnaryOp IINC 1 u
   * Goal 33. Weak Mutation 66: ds.AgmPrim.obterAgm(I)V:14 - InsertUnaryOp IINC -1 u
   * Goal 34. Weak Mutation 69: ds.AgmPrim.obterAgm(I)V:14 - InsertUnaryOp Negation of n
   * Goal 35. Weak Mutation 70: ds.AgmPrim.obterAgm(I)V:14 - InsertUnaryOp IINC 1 n
   * Goal 36. Weak Mutation 71: ds.AgmPrim.obterAgm(I)V:14 - InsertUnaryOp IINC -1 n
   * Goal 37. Weak Mutation 74: ds.AgmPrim.obterAgm(I)V:14 - ReplaceComparisonOperator < -> <=
   * Goal 38. Weak Mutation 76: ds.AgmPrim.obterAgm(I)V:20 - InsertUnaryOp Negation of raiz
   * Goal 39. Weak Mutation 77: ds.AgmPrim.obterAgm(I)V:20 - InsertUnaryOp IINC 1 raiz
   * Goal 40. Weak Mutation 78: ds.AgmPrim.obterAgm(I)V:20 - InsertUnaryOp IINC -1 raiz
   * Goal 41. Weak Mutation 79: ds.AgmPrim.obterAgm(I)V:20 - ReplaceConstant - 0.0 -> 1.0
   * Goal 42. Weak Mutation 80: ds.AgmPrim.obterAgm(I)V:20 - ReplaceConstant - 0.0 -> -1.0
   * Goal 43. Weak Mutation 22: ds.AgmPrim.obterAgm(I)V:15 - ReplaceVariable u -> raiz
   * Goal 44. Weak Mutation 23: ds.AgmPrim.obterAgm(I)V:15 - ReplaceVariable u -> n
   * Goal 45. Weak Mutation 24: ds.AgmPrim.obterAgm(I)V:15 - InsertUnaryOp Negation of u
   * Goal 46. Weak Mutation 25: ds.AgmPrim.obterAgm(I)V:15 - InsertUnaryOp IINC 1 u
   * Goal 47. Weak Mutation 26: ds.AgmPrim.obterAgm(I)V:15 - InsertUnaryOp IINC -1 u
   * Goal 48. Weak Mutation 27: ds.AgmPrim.obterAgm(I)V:15 - ReplaceConstant - -1 -> 0
   * Goal 49. Weak Mutation 28: ds.AgmPrim.obterAgm(I)V:15 - ReplaceConstant - -1 -> 1
   * Goal 50. Weak Mutation 29: ds.AgmPrim.obterAgm(I)V:15 - ReplaceConstant - -1 -> -2
   * Goal 51. Weak Mutation 30: ds.AgmPrim.obterAgm(I)V:16 - ReplaceVariable u -> raiz
   * Goal 52. Weak Mutation 31: ds.AgmPrim.obterAgm(I)V:16 - ReplaceVariable u -> n
   * Goal 53. Weak Mutation 32: ds.AgmPrim.obterAgm(I)V:16 - InsertUnaryOp Negation of u
   * Goal 54. Weak Mutation 33: ds.AgmPrim.obterAgm(I)V:16 - InsertUnaryOp IINC 1 u
   * Goal 55. Weak Mutation 34: ds.AgmPrim.obterAgm(I)V:16 - InsertUnaryOp IINC -1 u
   * Goal 56. Weak Mutation 35: ds.AgmPrim.obterAgm(I)V:16 - ReplaceConstant - 1.7976931348623157E308 -> 0.0
   * Goal 57. Weak Mutation 36: ds.AgmPrim.obterAgm(I)V:16 - ReplaceConstant - 1.7976931348623157E308 -> 1.0
   * Goal 58. Weak Mutation 37: ds.AgmPrim.obterAgm(I)V:16 - ReplaceConstant - 1.7976931348623157E308 -> -1.0
   * Goal 59. Weak Mutation 38: ds.AgmPrim.obterAgm(I)V:16 - ReplaceConstant - 1.7976931348623157E308 -> 1.7976931348623157E308
   * Goal 60. Weak Mutation 39: ds.AgmPrim.obterAgm(I)V:17 - ReplaceVariable u -> raiz
   * Goal 61. Weak Mutation 40: ds.AgmPrim.obterAgm(I)V:17 - ReplaceVariable u -> n
   * Goal 62. Weak Mutation 41: ds.AgmPrim.obterAgm(I)V:17 - InsertUnaryOp Negation of u
   * Goal 63. Weak Mutation 42: ds.AgmPrim.obterAgm(I)V:17 - InsertUnaryOp IINC 1 u
   * Goal 64. Weak Mutation 43: ds.AgmPrim.obterAgm(I)V:17 - InsertUnaryOp IINC -1 u
   * Goal 65. Weak Mutation 44: ds.AgmPrim.obterAgm(I)V:17 - ReplaceConstant - 1 -> 0
   * Goal 66. Weak Mutation 45: ds.AgmPrim.obterAgm(I)V:17 - ReplaceArithmeticOperator + -> %
   * Goal 67. Weak Mutation 46: ds.AgmPrim.obterAgm(I)V:17 - ReplaceArithmeticOperator + -> -
   * Goal 68. Weak Mutation 47: ds.AgmPrim.obterAgm(I)V:17 - ReplaceArithmeticOperator + -> *
   * Goal 69. Weak Mutation 48: ds.AgmPrim.obterAgm(I)V:17 - ReplaceArithmeticOperator + -> /
   * Goal 70. Weak Mutation 49: ds.AgmPrim.obterAgm(I)V:17 - ReplaceVariable u -> raiz
   * Goal 71. Weak Mutation 50: ds.AgmPrim.obterAgm(I)V:17 - ReplaceVariable u -> n
   * Goal 72. Weak Mutation 51: ds.AgmPrim.obterAgm(I)V:17 - InsertUnaryOp Negation of u
   * Goal 73. Weak Mutation 52: ds.AgmPrim.obterAgm(I)V:17 - InsertUnaryOp IINC 1 u
   * Goal 74. Weak Mutation 53: ds.AgmPrim.obterAgm(I)V:17 - InsertUnaryOp IINC -1 u
   * Goal 75. Weak Mutation 54: ds.AgmPrim.obterAgm(I)V:18 - ReplaceVariable u -> raiz
   * Goal 76. Weak Mutation 55: ds.AgmPrim.obterAgm(I)V:18 - ReplaceVariable u -> n
   * Goal 77. Weak Mutation 56: ds.AgmPrim.obterAgm(I)V:18 - InsertUnaryOp Negation of u
   * Goal 78. Weak Mutation 57: ds.AgmPrim.obterAgm(I)V:18 - InsertUnaryOp IINC 1 u
   * Goal 79. Weak Mutation 58: ds.AgmPrim.obterAgm(I)V:18 - InsertUnaryOp IINC -1 u
   * Goal 80. Weak Mutation 59: ds.AgmPrim.obterAgm(I)V:18 - ReplaceConstant - 1 -> 0
   * Goal 81. Weak Mutation 60: ds.AgmPrim.obterAgm(I)V:14 - ReplaceVariable u -> raiz
   * Goal 82. Weak Mutation 61: ds.AgmPrim.obterAgm(I)V:14 - ReplaceVariable u -> n
   * Goal 83. Weak Mutation 62: ds.AgmPrim.obterAgm(I)V:14 - ReplaceVariable u -> raiz
   * Goal 84. Weak Mutation 63: ds.AgmPrim.obterAgm(I)V:14 - ReplaceVariable u -> n
   * Goal 85. Weak Mutation 68: ds.AgmPrim.obterAgm(I)V:14 - ReplaceVariable n -> u
   * Goal 86. Weak Mutation 73: ds.AgmPrim.obterAgm(I)V:14 - ReplaceComparisonOperator < -> -2
   * Goal 87. Weak Mutation 0: ds.AgmPrim.obterAgm(I)V:11 - ReplaceVariable n -> raiz
   * Goal 88. Weak Mutation 4: ds.AgmPrim.obterAgm(I)V:12 - ReplaceVariable n -> raiz
   * Goal 89. Weak Mutation 13: ds.AgmPrim.obterAgm(I)V:13 - ReplaceVariable n -> raiz
   * Goal 90. Weak Mutation 17: ds.AgmPrim.obterAgm(I)V:13 - ReplaceVariable n -> raiz
   * Goal 91. Weak Mutation 67: ds.AgmPrim.obterAgm(I)V:14 - ReplaceVariable n -> raiz
   * Goal 92. Weak Mutation 75: ds.AgmPrim.obterAgm(I)V:20 - ReplaceVariable raiz -> n
   * Goal 93. Weak Mutation 82: ds.AgmPrim.obterAgm(I)V:24 - ReplaceVariable u -> n
   * Goal 94. Weak Mutation 83: ds.AgmPrim.obterAgm(I)V:24 - InsertUnaryOp Negation of u
   * Goal 95. Weak Mutation 84: ds.AgmPrim.obterAgm(I)V:24 - InsertUnaryOp IINC 1 u
   * Goal 96. Weak Mutation 85: ds.AgmPrim.obterAgm(I)V:24 - InsertUnaryOp IINC -1 u
   * Goal 97. Weak Mutation 86: ds.AgmPrim.obterAgm(I)V:24 - ReplaceConstant - 0 -> 1
   * Goal 98. Weak Mutation 88: ds.AgmPrim.obterAgm(I)V:25 - ReplaceVariable u -> n
   * Goal 99. Weak Mutation 89: ds.AgmPrim.obterAgm(I)V:25 - InsertUnaryOp Negation of u
   * Goal 100. Weak Mutation 90: ds.AgmPrim.obterAgm(I)V:25 - InsertUnaryOp IINC 1 u
   * Goal 101. Weak Mutation 91: ds.AgmPrim.obterAgm(I)V:25 - InsertUnaryOp IINC -1 u
   * Goal 102. Weak Mutation 92: ds.AgmPrim.obterAgm(I)V:25 - ReplaceComparisonOperator != -> ==
   * Goal 103. Weak Mutation 94: ds.AgmPrim.obterAgm(I)V:26 - ReplaceVariable u -> n
   * Goal 104. Weak Mutation 95: ds.AgmPrim.obterAgm(I)V:26 - InsertUnaryOp Negation of u
   * Goal 105. Weak Mutation 96: ds.AgmPrim.obterAgm(I)V:26 - InsertUnaryOp IINC 1 u
   * Goal 106. Weak Mutation 97: ds.AgmPrim.obterAgm(I)V:26 - InsertUnaryOp IINC -1 u
   * Goal 107. [METHOD] ds.AgmPrim.<init>(Lds/Grafo;)V
   * Goal 108. [METHOD] ds.AgmPrim.obterAgm(I)V
   * Goal 109. [METHODNOEX] ds.AgmPrim.<init>(Lds/Grafo;)V
   * Goal 110. Branch ds.AgmPrim.<init>(Lds/Grafo;)V: root-Branch in context: ds.AgmPrim:<init>(Lds/Grafo;)V
   * Goal 111. Branch ds.AgmPrim.obterAgm(I)V: I69 Branch 1 IF_ICMPLT L14 - false in context: ds.AgmPrim:obterAgm(I)V
   * Goal 112. Branch ds.AgmPrim.obterAgm(I)V: I69 Branch 1 IF_ICMPLT L14 - true in context: ds.AgmPrim:obterAgm(I)V
   * Goal 113. Branch ds.AgmPrim.obterAgm(I)V: I167 Branch 6 IFEQ L23 - true in context: ds.AgmPrim:obterAgm(I)V
   * Goal 114. Branch ds.AgmPrim.obterAgm(I)V: I162 Branch 5 IFNONNULL L27 - true in context: ds.AgmPrim:obterAgm(I)V
   * Goal 115. Branch ds.AgmPrim.obterAgm(I)V: I109 Branch 2 IFNE L25 - false in context: ds.AgmPrim:obterAgm(I)V
   * Goal 116. Branch ds.AgmPrim.obterAgm(I)V: I130 Branch 3 IFEQ L29 - false in context: ds.AgmPrim:obterAgm(I)V
   * Goal 117. Branch ds.AgmPrim.obterAgm(I)V: I138 Branch 4 IFGE L29 - false in context: ds.AgmPrim:obterAgm(I)V
   * Goal 118. obterAgm(I)V_java.lang.Exception_DECLARED
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Grafo grafo0 = new Grafo(2132);
      AgmPrim agmPrim0 = new AgmPrim(grafo0);
      grafo0.insereAresta(0, 630, (-847));
      try { 
        agmPrim0.obterAgm(0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Erro: chaveNova com valor incorreto
         //
         assertThrownBy("ds.FPHeapMinIndireto", e);
      }
  }

  //Test case number: 1
  /*
   * 39 covered goals:
   * Goal 1. ds.AgmPrim.obterAgm(I)V: Line 20
   * Goal 2. ds.AgmPrim.<init>(Lds/Grafo;)V: root-Branch
   * Goal 3. ds.AgmPrim.obterAgm(I)V: I69 Branch 1 IF_ICMPLT L14 - false
   * Goal 4. Weak Mutation 1: ds.AgmPrim.obterAgm(I)V:11 - InsertUnaryOp Negation of n
   * Goal 5. Weak Mutation 2: ds.AgmPrim.obterAgm(I)V:11 - InsertUnaryOp IINC 1 n
   * Goal 6. Weak Mutation 3: ds.AgmPrim.obterAgm(I)V:11 - InsertUnaryOp IINC -1 n
   * Goal 7. Weak Mutation 5: ds.AgmPrim.obterAgm(I)V:12 - InsertUnaryOp Negation of n
   * Goal 8. Weak Mutation 6: ds.AgmPrim.obterAgm(I)V:12 - InsertUnaryOp IINC 1 n
   * Goal 9. Weak Mutation 7: ds.AgmPrim.obterAgm(I)V:12 - InsertUnaryOp IINC -1 n
   * Goal 10. Weak Mutation 8: ds.AgmPrim.obterAgm(I)V:12 - ReplaceConstant - 1 -> 0
   * Goal 11. Weak Mutation 9: ds.AgmPrim.obterAgm(I)V:12 - ReplaceArithmeticOperator + -> %
   * Goal 12. Weak Mutation 10: ds.AgmPrim.obterAgm(I)V:12 - ReplaceArithmeticOperator + -> -
   * Goal 13. Weak Mutation 11: ds.AgmPrim.obterAgm(I)V:12 - ReplaceArithmeticOperator + -> *
   * Goal 14. Weak Mutation 12: ds.AgmPrim.obterAgm(I)V:12 - ReplaceArithmeticOperator + -> /
   * Goal 15. Weak Mutation 14: ds.AgmPrim.obterAgm(I)V:13 - InsertUnaryOp Negation of n
   * Goal 16. Weak Mutation 15: ds.AgmPrim.obterAgm(I)V:13 - InsertUnaryOp IINC 1 n
   * Goal 17. Weak Mutation 16: ds.AgmPrim.obterAgm(I)V:13 - InsertUnaryOp IINC -1 n
   * Goal 18. Weak Mutation 18: ds.AgmPrim.obterAgm(I)V:13 - InsertUnaryOp Negation of n
   * Goal 19. Weak Mutation 19: ds.AgmPrim.obterAgm(I)V:13 - InsertUnaryOp IINC 1 n
   * Goal 20. Weak Mutation 20: ds.AgmPrim.obterAgm(I)V:13 - InsertUnaryOp IINC -1 n
   * Goal 21. Weak Mutation 21: ds.AgmPrim.obterAgm(I)V:14 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 64: ds.AgmPrim.obterAgm(I)V:14 - InsertUnaryOp Negation of u
   * Goal 23. Weak Mutation 65: ds.AgmPrim.obterAgm(I)V:14 - InsertUnaryOp IINC 1 u
   * Goal 24. Weak Mutation 66: ds.AgmPrim.obterAgm(I)V:14 - InsertUnaryOp IINC -1 u
   * Goal 25. Weak Mutation 69: ds.AgmPrim.obterAgm(I)V:14 - InsertUnaryOp Negation of n
   * Goal 26. Weak Mutation 70: ds.AgmPrim.obterAgm(I)V:14 - InsertUnaryOp IINC 1 n
   * Goal 27. Weak Mutation 71: ds.AgmPrim.obterAgm(I)V:14 - InsertUnaryOp IINC -1 n
   * Goal 28. Weak Mutation 74: ds.AgmPrim.obterAgm(I)V:14 - ReplaceComparisonOperator < -> <=
   * Goal 29. Weak Mutation 76: ds.AgmPrim.obterAgm(I)V:20 - InsertUnaryOp Negation of raiz
   * Goal 30. Weak Mutation 77: ds.AgmPrim.obterAgm(I)V:20 - InsertUnaryOp IINC 1 raiz
   * Goal 31. Weak Mutation 78: ds.AgmPrim.obterAgm(I)V:20 - InsertUnaryOp IINC -1 raiz
   * Goal 32. Weak Mutation 79: ds.AgmPrim.obterAgm(I)V:20 - ReplaceConstant - 0.0 -> 1.0
   * Goal 33. Weak Mutation 80: ds.AgmPrim.obterAgm(I)V:20 - ReplaceConstant - 0.0 -> -1.0
   * Goal 34. [METHOD] ds.AgmPrim.<init>(Lds/Grafo;)V
   * Goal 35. [METHOD] ds.AgmPrim.obterAgm(I)V
   * Goal 36. [METHODNOEX] ds.AgmPrim.<init>(Lds/Grafo;)V
   * Goal 37. Branch ds.AgmPrim.<init>(Lds/Grafo;)V: root-Branch in context: ds.AgmPrim:<init>(Lds/Grafo;)V
   * Goal 38. Branch ds.AgmPrim.obterAgm(I)V: I69 Branch 1 IF_ICMPLT L14 - false in context: ds.AgmPrim:obterAgm(I)V
   * Goal 39. obterAgm(I)V_java.lang.ArrayIndexOutOfBoundsException_DECLARED
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Grafo grafo0 = new Grafo(0);
      AgmPrim agmPrim0 = new AgmPrim(grafo0);
      try { 
        agmPrim0.obterAgm(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("ds.AgmPrim", e);
      }
  }

  //Test case number: 2
  /*
   * 12 covered goals:
   * Goal 1. ds.AgmPrim.peso(I)D: Line 38
   * Goal 2. ds.AgmPrim.<init>(Lds/Grafo;)V: root-Branch
   * Goal 3. ds.AgmPrim.peso(I)D: root-Branch
   * Goal 4. Weak Mutation 101: ds.AgmPrim.peso(I)D:38 - InsertUnaryOp Negation of u
   * Goal 5. Weak Mutation 102: ds.AgmPrim.peso(I)D:38 - InsertUnaryOp IINC 1 u
   * Goal 6. Weak Mutation 103: ds.AgmPrim.peso(I)D:38 - InsertUnaryOp IINC -1 u
   * Goal 7. [METHOD] ds.AgmPrim.<init>(Lds/Grafo;)V
   * Goal 8. [METHOD] ds.AgmPrim.peso(I)D
   * Goal 9. [METHODNOEX] ds.AgmPrim.<init>(Lds/Grafo;)V
   * Goal 10. Branch ds.AgmPrim.<init>(Lds/Grafo;)V: root-Branch in context: ds.AgmPrim:<init>(Lds/Grafo;)V
   * Goal 11. Branch ds.AgmPrim.peso(I)D: root-Branch in context: ds.AgmPrim:peso(I)D
   * Goal 12. peso(I)D_java.lang.NullPointerException_IMPLICIT
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Grafo grafo0 = new Grafo(0);
      AgmPrim agmPrim0 = new AgmPrim(grafo0);
      // Undeclared exception!
      try { 
        agmPrim0.peso(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ds.AgmPrim", e);
      }
  }

  //Test case number: 3
  /*
   * 7 covered goals:
   * Goal 1. ds.AgmPrim.obterAgm(I)V: Line 10
   * Goal 2. ds.AgmPrim.<init>(Lds/Grafo;)V: root-Branch
   * Goal 3. obterAgm(I)V_java.lang.NullPointerException_DECLARED
   * Goal 4. [METHOD] ds.AgmPrim.<init>(Lds/Grafo;)V
   * Goal 5. [METHOD] ds.AgmPrim.obterAgm(I)V
   * Goal 6. [METHODNOEX] ds.AgmPrim.<init>(Lds/Grafo;)V
   * Goal 7. Branch ds.AgmPrim.<init>(Lds/Grafo;)V: root-Branch in context: ds.AgmPrim:<init>(Lds/Grafo;)V
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Grafo.Aresta grafo_Aresta0 = new Grafo.Aresta((-288), (-288), (-288));
      AgmPrim agmPrim0 = new AgmPrim((Grafo) null);
      grafo_Aresta0.v1();
      try { 
        agmPrim0.obterAgm(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Grafo.Aresta grafo_Aresta0 = new Grafo.Aresta(1, 0, 0);
      grafo_Aresta0.v2();
      Grafo grafo0 = null;
      try {
        grafo0 = new Grafo((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ds.Grafo", e);
      }
  }

  //Test case number: 5
  /*
   * 8 covered goals:
   * Goal 1. ds.AgmPrim.<init>(Lds/Grafo;)V: root-Branch
   * Goal 2. ds.AgmPrim.imprime()V: Line 40
   * Goal 3. Weak Mutation 104: ds.AgmPrim.imprime()V:40 - ReplaceConstant - 0 -> 1
   * Goal 4. Weak Mutation 126: ds.AgmPrim.imprime()V:40 - InsertUnaryOp Negation of u
   * Goal 5. Weak Mutation 127: ds.AgmPrim.imprime()V:40 - InsertUnaryOp IINC 1 u
   * Goal 6. Weak Mutation 128: ds.AgmPrim.imprime()V:40 - InsertUnaryOp IINC -1 u
   * Goal 7. [METHOD] ds.AgmPrim.imprime()V
   * Goal 8. imprime()V_java.lang.NullPointerException_IMPLICIT
   */

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AgmPrim agmPrim0 = new AgmPrim((Grafo) null);
      // Undeclared exception!
      try { 
        agmPrim0.imprime();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 12 covered goals:
   * Goal 1. ds.AgmPrim.<init>(Lds/Grafo;)V: root-Branch
   * Goal 2. ds.AgmPrim.antecessor(I)I: root-Branch
   * Goal 3. [METHOD] ds.AgmPrim.<init>(Lds/Grafo;)V
   * Goal 4. [METHODNOEX] ds.AgmPrim.<init>(Lds/Grafo;)V
   * Goal 5. Branch ds.AgmPrim.<init>(Lds/Grafo;)V: root-Branch in context: ds.AgmPrim:<init>(Lds/Grafo;)V
   * Goal 6. ds.AgmPrim.antecessor(I)I: Line 37
   * Goal 7. Weak Mutation 98: ds.AgmPrim.antecessor(I)I:37 - InsertUnaryOp Negation of u
   * Goal 8. Weak Mutation 99: ds.AgmPrim.antecessor(I)I:37 - InsertUnaryOp IINC 1 u
   * Goal 9. Weak Mutation 100: ds.AgmPrim.antecessor(I)I:37 - InsertUnaryOp IINC -1 u
   * Goal 10. [METHOD] ds.AgmPrim.antecessor(I)I
   * Goal 11. Branch ds.AgmPrim.antecessor(I)I: root-Branch in context: ds.AgmPrim:antecessor(I)I
   * Goal 12. antecessor(I)I_java.lang.NullPointerException_IMPLICIT
   */

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int int0 = 2564;
      Grafo grafo0 = new Grafo(2564);
      Grafo grafo1 = grafo0.grafoTransposto();
      AgmPrim agmPrim0 = new AgmPrim(grafo1);
      // Undeclared exception!
      try { 
        agmPrim0.antecessor((-2121));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ds.AgmPrim", e);
      }
  }
}
