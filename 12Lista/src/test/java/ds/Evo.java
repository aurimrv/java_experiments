/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 03 19:52:25 GMT 2016
 */

package ds;

import org.junit.Test;
import static org.junit.Assert.*;

//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

import ds.Lista;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Evo {

  //Test case number: 0
  /*
   * 26 covered goals:
   * Goal 1. cap3.autoreferencia.Lista.<init>()V: root-Branch
   * Goal 2. cap3.autoreferencia.Lista.insere(Ljava/lang/Object;)V: root-Branch
   * Goal 3. cap3.autoreferencia.Lista.imprime()V: I30 Branch 2 IFNONNULL L18 - true
   * Goal 4. cap3.autoreferencia.Lista.imprime()V: I30 Branch 2 IFNONNULL L18 - false
   * Goal 5. Branch cap3.autoreferencia.Lista.<init>()V: root-Branch in context: cap3.autoreferencia.Lista:<init>()V
   * Goal 6. Branch cap3.autoreferencia.Lista.insere(Ljava/lang/Object;)V: root-Branch in context: cap3.autoreferencia.Lista:insere(Ljava/lang/Object;)V
   * Goal 7. Branch cap3.autoreferencia.Lista.imprime()V: I30 Branch 2 IFNONNULL L18 - true in context: cap3.autoreferencia.Lista:imprime()V
   * Goal 8. Branch cap3.autoreferencia.Lista.imprime()V: I30 Branch 2 IFNONNULL L18 - false in context: cap3.autoreferencia.Lista:imprime()V
   * Goal 9. cap3.autoreferencia.Lista.<init>()V: Line 8
   * Goal 10. cap3.autoreferencia.Lista.<init>()V: Line 9
   * Goal 11. cap3.autoreferencia.Lista.<init>()V: Line 10
   * Goal 12. cap3.autoreferencia.Lista.imprime()V: Line 17
   * Goal 13. cap3.autoreferencia.Lista.imprime()V: Line 18
   * Goal 14. cap3.autoreferencia.Lista.imprime()V: Line 19
   * Goal 15. cap3.autoreferencia.Lista.imprime()V: Line 21
   * Goal 16. cap3.autoreferencia.Lista.insere(Ljava/lang/Object;)V: Line 12
   * Goal 17. cap3.autoreferencia.Lista.insere(Ljava/lang/Object;)V: Line 13
   * Goal 18. cap3.autoreferencia.Lista.insere(Ljava/lang/Object;)V: Line 14
   * Goal 19. [METHOD] cap3.autoreferencia.Lista.<init>()V
   * Goal 20. [METHOD] cap3.autoreferencia.Lista.imprime()V
   * Goal 21. [METHOD] cap3.autoreferencia.Lista.insere(Ljava/lang/Object;)V
   * Goal 22. [METHODNOEX] cap3.autoreferencia.Lista.<init>()V
   * Goal 23. [METHODNOEX] cap3.autoreferencia.Lista.imprime()V
   * Goal 24. [METHODNOEX] cap3.autoreferencia.Lista.insere(Ljava/lang/Object;)V
   * Goal 25. Weak Mutation 4: cap3.autoreferencia.Lista.imprime()V:18 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 3: cap3.autoreferencia.Lista.imprime()V:19 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Lista lista0 = new Lista();
      Object object0 = new Object();
      lista0.insere(object0);
      lista0.imprime();
      assertFalse(lista0.vazia());
  }

  //Test case number: 1
  /*
   * 15 covered goals:
   * Goal 1. cap3.autoreferencia.Lista.<init>()V: root-Branch
   * Goal 2. cap3.autoreferencia.Lista.vazia()Z: I6 Branch 1 IF_ACMPNE L15 - false
   * Goal 3. Branch cap3.autoreferencia.Lista.<init>()V: root-Branch in context: cap3.autoreferencia.Lista:<init>()V
   * Goal 4. Branch cap3.autoreferencia.Lista.vazia()Z: I6 Branch 1 IF_ACMPNE L15 - false in context: cap3.autoreferencia.Lista:vazia()Z
   * Goal 5. [Output]: cap3.autoreferencia.Lista.vazia()Z:True
   * Goal 6. cap3.autoreferencia.Lista.<init>()V: Line 8
   * Goal 7. cap3.autoreferencia.Lista.<init>()V: Line 9
   * Goal 8. cap3.autoreferencia.Lista.<init>()V: Line 10
   * Goal 9. cap3.autoreferencia.Lista.vazia()Z: Line 15
   * Goal 10. [METHOD] cap3.autoreferencia.Lista.<init>()V
   * Goal 11. [METHOD] cap3.autoreferencia.Lista.vazia()Z
   * Goal 12. [METHODNOEX] cap3.autoreferencia.Lista.<init>()V
   * Goal 13. [METHODNOEX] cap3.autoreferencia.Lista.vazia()Z
   * Goal 14. Weak Mutation 0: cap3.autoreferencia.Lista.vazia()Z:15 - ReplaceComparisonOperator != -> ==
   * Goal 15. Weak Mutation 1: cap3.autoreferencia.Lista.vazia()Z:15 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Lista lista0 = new Lista();
      boolean boolean0 = lista0.vazia();
      assertTrue(boolean0);
  }

  //Test case number: 2
  /*
   * 22 covered goals:
   * Goal 1. cap3.autoreferencia.Lista.<init>()V: root-Branch
   * Goal 2. cap3.autoreferencia.Lista.insere(Ljava/lang/Object;)V: root-Branch
   * Goal 3. cap3.autoreferencia.Lista.vazia()Z: I6 Branch 1 IF_ACMPNE L15 - true
   * Goal 4. Branch cap3.autoreferencia.Lista.<init>()V: root-Branch in context: cap3.autoreferencia.Lista:<init>()V
   * Goal 5. Branch cap3.autoreferencia.Lista.insere(Ljava/lang/Object;)V: root-Branch in context: cap3.autoreferencia.Lista:insere(Ljava/lang/Object;)V
   * Goal 6. Branch cap3.autoreferencia.Lista.vazia()Z: I6 Branch 1 IF_ACMPNE L15 - true in context: cap3.autoreferencia.Lista:vazia()Z
   * Goal 7. [Output]: cap3.autoreferencia.Lista.vazia()Z:False
   * Goal 8. cap3.autoreferencia.Lista.<init>()V: Line 8
   * Goal 9. cap3.autoreferencia.Lista.<init>()V: Line 9
   * Goal 10. cap3.autoreferencia.Lista.<init>()V: Line 10
   * Goal 11. cap3.autoreferencia.Lista.insere(Ljava/lang/Object;)V: Line 12
   * Goal 12. cap3.autoreferencia.Lista.insere(Ljava/lang/Object;)V: Line 13
   * Goal 13. cap3.autoreferencia.Lista.insere(Ljava/lang/Object;)V: Line 14
   * Goal 14. cap3.autoreferencia.Lista.vazia()Z: Line 15
   * Goal 15. [METHOD] cap3.autoreferencia.Lista.<init>()V
   * Goal 16. [METHOD] cap3.autoreferencia.Lista.insere(Ljava/lang/Object;)V
   * Goal 17. [METHOD] cap3.autoreferencia.Lista.vazia()Z
   * Goal 18. [METHODNOEX] cap3.autoreferencia.Lista.<init>()V
   * Goal 19. [METHODNOEX] cap3.autoreferencia.Lista.insere(Ljava/lang/Object;)V
   * Goal 20. [METHODNOEX] cap3.autoreferencia.Lista.vazia()Z
   * Goal 21. Weak Mutation 0: cap3.autoreferencia.Lista.vazia()Z:15 - ReplaceComparisonOperator != -> ==
   * Goal 22. Weak Mutation 2: cap3.autoreferencia.Lista.vazia()Z:15 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Lista lista0 = new Lista();
      Object object0 = new Object();
      lista0.insere(object0);
      boolean boolean0 = lista0.vazia();
      assertFalse(boolean0);
  }
}
