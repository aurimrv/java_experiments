/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 03 21:04:02 GMT 2016
 */

package ds;

import org.junit.Test;
import static org.junit.Assert.*;

//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

import ds.Grafo;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Evo {

  //Test case number: 0
  /*
   * 19 covered goals:
   * Goal 1. cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V: root-Branch
   * Goal 2. Branch cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V: root-Branch in context: cap7.listaadj.autoreferencia.Grafo$Aresta:<init>(III)V
   * Goal 3. cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V: Line 7
   * Goal 4. cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V: Line 8
   * Goal 5. Weak Mutation 26: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - ReplaceVariable v1 -> v2
   * Goal 6. Weak Mutation 27: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - ReplaceVariable v1 -> peso
   * Goal 7. Weak Mutation 28: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp Negation of v1
   * Goal 8. Weak Mutation 29: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp IINC 1 v1
   * Goal 9. Weak Mutation 30: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp IINC -1 v1
   * Goal 10. Weak Mutation 31: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - ReplaceVariable v2 -> peso
   * Goal 11. Weak Mutation 32: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - ReplaceVariable v2 -> v1
   * Goal 12. Weak Mutation 33: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp Negation of v2
   * Goal 13. Weak Mutation 34: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp IINC 1 v2
   * Goal 14. Weak Mutation 35: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp IINC -1 v2
   * Goal 15. Weak Mutation 36: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - ReplaceVariable peso -> v2
   * Goal 16. Weak Mutation 37: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - ReplaceVariable peso -> v1
   * Goal 17. Weak Mutation 38: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp Negation of peso
   * Goal 18. Weak Mutation 39: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp IINC 1 peso
   * Goal 19. Weak Mutation 40: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp IINC -1 peso
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Grafo.Aresta grafo_Aresta0 = new Grafo.Aresta((-1), (-645), 0);
      assertEquals(-645, grafo_Aresta0.v2());
      assertEquals(0, grafo_Aresta0.peso());
      assertEquals(-1, grafo_Aresta0.v1());
  }

  //Test case number: 1
  /*
   * 44 covered goals:
   * Goal 1. cap7.listaadj.autoreferencia.Grafo.listaAdjVazia(I)Z: root-Branch
   * Goal 2. cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - true
   * Goal 3. cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - false
   * Goal 4. Branch cap7.listaadj.autoreferencia.Grafo.listaAdjVazia(I)Z: root-Branch in context: cap7.listaadj.autoreferencia.Grafo:listaAdjVazia(I)Z
   * Goal 5. Branch cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - true in context: cap7.listaadj.autoreferencia.Grafo:<init>()V
   * Goal 6. Branch cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - false in context: cap7.listaadj.autoreferencia.Grafo:<init>()V
   * Goal 7. listaAdjVazia(I)Z_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 8. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 24
   * Goal 9. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 25
   * Goal 10. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 26
   * Goal 11. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 27
   * Goal 12. cap7.listaadj.autoreferencia.Grafo.listaAdjVazia(I)Z: Line 37
   * Goal 13. [METHOD] cap7.listaadj.autoreferencia.Grafo.<init>()V
   * Goal 14. [METHOD] cap7.listaadj.autoreferencia.Grafo.listaAdjVazia(I)Z
   * Goal 15. [METHODNOEX] cap7.listaadj.autoreferencia.Grafo.<init>()V
   * Goal 16. Weak Mutation 50: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 0
   * Goal 17. Weak Mutation 51: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 1
   * Goal 18. Weak Mutation 52: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> -1
   * Goal 19. Weak Mutation 53: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 99
   * Goal 20. Weak Mutation 54: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 101
   * Goal 21. Weak Mutation 55: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp Negation of numVertices
   * Goal 22. Weak Mutation 56: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC 1 numVertices
   * Goal 23. Weak Mutation 57: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC -1 numVertices
   * Goal 24. Weak Mutation 58: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp Negation of numVertices
   * Goal 25. Weak Mutation 59: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC 1 numVertices
   * Goal 26. Weak Mutation 60: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC -1 numVertices
   * Goal 27. Weak Mutation 61: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 62: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceVariable i -> numVertices
   * Goal 29. Weak Mutation 63: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp Negation of i
   * Goal 30. Weak Mutation 64: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC 1 i
   * Goal 31. Weak Mutation 65: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC -1 i
   * Goal 32. Weak Mutation 66: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceVariable i -> numVertices
   * Goal 33. Weak Mutation 67: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceVariable i -> numVertices
   * Goal 34. Weak Mutation 68: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp Negation of i
   * Goal 35. Weak Mutation 69: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC 1 i
   * Goal 36. Weak Mutation 70: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC -1 i
   * Goal 37. Weak Mutation 71: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp Negation
   * Goal 38. Weak Mutation 72: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp +1
   * Goal 39. Weak Mutation 73: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp -1
   * Goal 40. Weak Mutation 75: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceComparisonOperator < -> -2
   * Goal 41. Weak Mutation 76: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceComparisonOperator < -> <=
   * Goal 42. Weak Mutation 104: cap7.listaadj.autoreferencia.Grafo.listaAdjVazia(I)Z:37 - InsertUnaryOp Negation of v
   * Goal 43. Weak Mutation 105: cap7.listaadj.autoreferencia.Grafo.listaAdjVazia(I)Z:37 - InsertUnaryOp IINC 1 v
   * Goal 44. Weak Mutation 106: cap7.listaadj.autoreferencia.Grafo.listaAdjVazia(I)Z:37 - InsertUnaryOp IINC -1 v
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Grafo grafo0 = new Grafo();
      // Undeclared exception!
      try { 
        grafo0.listaAdjVazia((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
    	  assertTrue(true);//assertThrownBy("cap7.listaadj.autoreferencia.Grafo", e);
      }
  }

  //Test case number: 2
  /*
   * 67 covered goals:
   * Goal 1. cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - true
   * Goal 2. cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - false
   * Goal 3. cap7.listaadj.autoreferencia.Grafo.imprime()V: I70 Branch 8 IF_ICMPLT L57 - true
   * Goal 4. cap7.listaadj.autoreferencia.Grafo.imprime()V: I70 Branch 8 IF_ICMPLT L57 - false
   * Goal 5. cap7.listaadj.autoreferencia.Grafo.imprime()V: I62 Branch 7 IFNONNULL L60 - false
   * Goal 6. Branch cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - true in context: cap7.listaadj.autoreferencia.Grafo:<init>()V
   * Goal 7. Branch cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - false in context: cap7.listaadj.autoreferencia.Grafo:<init>()V
   * Goal 8. Branch cap7.listaadj.autoreferencia.Grafo.imprime()V: I70 Branch 8 IF_ICMPLT L57 - false in context: cap7.listaadj.autoreferencia.Grafo:imprime()V
   * Goal 9. Branch cap7.listaadj.autoreferencia.Grafo.imprime()V: I70 Branch 8 IF_ICMPLT L57 - true in context: cap7.listaadj.autoreferencia.Grafo:imprime()V
   * Goal 10. Branch cap7.listaadj.autoreferencia.Grafo.imprime()V: I62 Branch 7 IFNONNULL L60 - false in context: cap7.listaadj.autoreferencia.Grafo:imprime()V
   * Goal 11. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 24
   * Goal 12. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 25
   * Goal 13. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 26
   * Goal 14. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 27
   * Goal 15. cap7.listaadj.autoreferencia.Grafo.imprime()V: Line 57
   * Goal 16. cap7.listaadj.autoreferencia.Grafo.imprime()V: Line 58
   * Goal 17. cap7.listaadj.autoreferencia.Grafo.imprime()V: Line 59
   * Goal 18. cap7.listaadj.autoreferencia.Grafo.imprime()V: Line 60
   * Goal 19. cap7.listaadj.autoreferencia.Grafo.imprime()V: Line 65
   * Goal 20. [METHOD] cap7.listaadj.autoreferencia.Grafo.<init>()V
   * Goal 21. [METHOD] cap7.listaadj.autoreferencia.Grafo.imprime()V
   * Goal 22. [METHODNOEX] cap7.listaadj.autoreferencia.Grafo.<init>()V
   * Goal 23. [METHODNOEX] cap7.listaadj.autoreferencia.Grafo.imprime()V
   * Goal 24. Weak Mutation 50: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 0
   * Goal 25. Weak Mutation 51: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 1
   * Goal 26. Weak Mutation 52: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> -1
   * Goal 27. Weak Mutation 53: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 99
   * Goal 28. Weak Mutation 54: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 101
   * Goal 29. Weak Mutation 55: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp Negation of numVertices
   * Goal 30. Weak Mutation 56: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC 1 numVertices
   * Goal 31. Weak Mutation 57: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC -1 numVertices
   * Goal 32. Weak Mutation 58: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp Negation of numVertices
   * Goal 33. Weak Mutation 59: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC 1 numVertices
   * Goal 34. Weak Mutation 60: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC -1 numVertices
   * Goal 35. Weak Mutation 61: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceConstant - 0 -> 1
   * Goal 36. Weak Mutation 62: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceVariable i -> numVertices
   * Goal 37. Weak Mutation 63: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp Negation of i
   * Goal 38. Weak Mutation 64: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC 1 i
   * Goal 39. Weak Mutation 65: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC -1 i
   * Goal 40. Weak Mutation 66: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceVariable i -> numVertices
   * Goal 41. Weak Mutation 67: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceVariable i -> numVertices
   * Goal 42. Weak Mutation 68: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp Negation of i
   * Goal 43. Weak Mutation 69: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC 1 i
   * Goal 44. Weak Mutation 70: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC -1 i
   * Goal 45. Weak Mutation 71: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp Negation
   * Goal 46. Weak Mutation 72: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp +1
   * Goal 47. Weak Mutation 73: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp -1
   * Goal 48. Weak Mutation 75: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceComparisonOperator < -> -2
   * Goal 49. Weak Mutation 76: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceComparisonOperator < -> <=
   * Goal 50. Weak Mutation 156: cap7.listaadj.autoreferencia.Grafo.imprime()V:57 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 178: cap7.listaadj.autoreferencia.Grafo.imprime()V:57 - InsertUnaryOp Negation of i
   * Goal 52. Weak Mutation 179: cap7.listaadj.autoreferencia.Grafo.imprime()V:57 - InsertUnaryOp IINC 1 i
   * Goal 53. Weak Mutation 180: cap7.listaadj.autoreferencia.Grafo.imprime()V:57 - InsertUnaryOp IINC -1 i
   * Goal 54. Weak Mutation 181: cap7.listaadj.autoreferencia.Grafo.imprime()V:57 - InsertUnaryOp Negation
   * Goal 55. Weak Mutation 182: cap7.listaadj.autoreferencia.Grafo.imprime()V:57 - InsertUnaryOp +1
   * Goal 56. Weak Mutation 183: cap7.listaadj.autoreferencia.Grafo.imprime()V:57 - InsertUnaryOp -1
   * Goal 57. Weak Mutation 185: cap7.listaadj.autoreferencia.Grafo.imprime()V:57 - ReplaceComparisonOperator < -> -2
   * Goal 58. Weak Mutation 186: cap7.listaadj.autoreferencia.Grafo.imprime()V:57 - ReplaceComparisonOperator < -> <=
   * Goal 59. Weak Mutation 157: cap7.listaadj.autoreferencia.Grafo.imprime()V:58 - ReplaceConstant - Vertice  -> 
   * Goal 60. Weak Mutation 158: cap7.listaadj.autoreferencia.Grafo.imprime()V:58 - InsertUnaryOp Negation of i
   * Goal 61. Weak Mutation 159: cap7.listaadj.autoreferencia.Grafo.imprime()V:58 - InsertUnaryOp IINC 1 i
   * Goal 62. Weak Mutation 160: cap7.listaadj.autoreferencia.Grafo.imprime()V:58 - InsertUnaryOp IINC -1 i
   * Goal 63. Weak Mutation 161: cap7.listaadj.autoreferencia.Grafo.imprime()V:58 - ReplaceConstant - : -> 
   * Goal 64. Weak Mutation 162: cap7.listaadj.autoreferencia.Grafo.imprime()V:59 - InsertUnaryOp Negation of i
   * Goal 65. Weak Mutation 163: cap7.listaadj.autoreferencia.Grafo.imprime()V:59 - InsertUnaryOp IINC 1 i
   * Goal 66. Weak Mutation 164: cap7.listaadj.autoreferencia.Grafo.imprime()V:59 - InsertUnaryOp IINC -1 i
   * Goal 67. Weak Mutation 177: cap7.listaadj.autoreferencia.Grafo.imprime()V:60 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Grafo grafo0 = new Grafo();
      grafo0.imprime();
      assertEquals(100, grafo0.numVertices());
  }

  //Test case number: 3
  /*
   * 68 covered goals:
   * Goal 1. cap7.listaadj.autoreferencia.Grafo.listaAdjVazia(I)Z: root-Branch
   * Goal 2. cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - true
   * Goal 3. cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - false
   * Goal 4. cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;: I54 Branch 11 IF_ICMPLT L69 - true
   * Goal 5. cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;: I54 Branch 11 IF_ICMPLT L69 - false
   * Goal 6. cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;: I17 Branch 9 IFNE L70 - true
   * Goal 7. Branch cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - true in context: cap7.listaadj.autoreferencia.Grafo:<init>()V
   * Goal 8. Branch cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - false in context: cap7.listaadj.autoreferencia.Grafo:<init>()V
   * Goal 9. Branch cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;: I54 Branch 11 IF_ICMPLT L69 - true in context: cap7.listaadj.autoreferencia.Grafo:grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;
   * Goal 10. Branch cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;: I54 Branch 11 IF_ICMPLT L69 - false in context: cap7.listaadj.autoreferencia.Grafo:grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;
   * Goal 11. Branch cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;: I17 Branch 9 IFNE L70 - true in context: cap7.listaadj.autoreferencia.Grafo:grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;
   * Goal 12. [Output]: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:NonNull:cap7.listaadj.autoreferencia.Grafo:numVertices()I:Positive
   * Goal 13. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 24
   * Goal 14. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 25
   * Goal 15. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 26
   * Goal 16. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 27
   * Goal 17. cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;: Line 68
   * Goal 18. cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;: Line 69
   * Goal 19. cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;: Line 70
   * Goal 20. cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;: Line 77
   * Goal 21. cap7.listaadj.autoreferencia.Grafo.listaAdjVazia(I)Z: Line 37
   * Goal 22. [METHOD] cap7.listaadj.autoreferencia.Grafo.<init>()V
   * Goal 23. [METHOD] cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;
   * Goal 24. [METHODNOEX] cap7.listaadj.autoreferencia.Grafo.<init>()V
   * Goal 25. [METHODNOEX] cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;
   * Goal 26. Weak Mutation 50: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 0
   * Goal 27. Weak Mutation 51: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 1
   * Goal 28. Weak Mutation 52: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> -1
   * Goal 29. Weak Mutation 53: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 99
   * Goal 30. Weak Mutation 54: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 101
   * Goal 31. Weak Mutation 55: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp Negation of numVertices
   * Goal 32. Weak Mutation 56: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC 1 numVertices
   * Goal 33. Weak Mutation 57: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC -1 numVertices
   * Goal 34. Weak Mutation 58: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp Negation of numVertices
   * Goal 35. Weak Mutation 59: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC 1 numVertices
   * Goal 36. Weak Mutation 60: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC -1 numVertices
   * Goal 37. Weak Mutation 61: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceConstant - 0 -> 1
   * Goal 38. Weak Mutation 62: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceVariable i -> numVertices
   * Goal 39. Weak Mutation 63: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp Negation of i
   * Goal 40. Weak Mutation 64: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC 1 i
   * Goal 41. Weak Mutation 65: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC -1 i
   * Goal 42. Weak Mutation 66: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceVariable i -> numVertices
   * Goal 43. Weak Mutation 67: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceVariable i -> numVertices
   * Goal 44. Weak Mutation 68: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp Negation of i
   * Goal 45. Weak Mutation 69: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC 1 i
   * Goal 46. Weak Mutation 70: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC -1 i
   * Goal 47. Weak Mutation 71: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 72: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp +1
   * Goal 49. Weak Mutation 73: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp -1
   * Goal 50. Weak Mutation 75: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceComparisonOperator < -> -2
   * Goal 51. Weak Mutation 76: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceComparisonOperator < -> <=
   * Goal 52. Weak Mutation 104: cap7.listaadj.autoreferencia.Grafo.listaAdjVazia(I)Z:37 - InsertUnaryOp Negation of v
   * Goal 53. Weak Mutation 105: cap7.listaadj.autoreferencia.Grafo.listaAdjVazia(I)Z:37 - InsertUnaryOp IINC 1 v
   * Goal 54. Weak Mutation 106: cap7.listaadj.autoreferencia.Grafo.listaAdjVazia(I)Z:37 - InsertUnaryOp IINC -1 v
   * Goal 55. Weak Mutation 190: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:69 - ReplaceConstant - 0 -> 1
   * Goal 56. Weak Mutation 203: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:69 - InsertUnaryOp Negation of v
   * Goal 57. Weak Mutation 204: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:69 - InsertUnaryOp IINC 1 v
   * Goal 58. Weak Mutation 205: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:69 - InsertUnaryOp IINC -1 v
   * Goal 59. Weak Mutation 206: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:69 - InsertUnaryOp Negation
   * Goal 60. Weak Mutation 207: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:69 - InsertUnaryOp +1
   * Goal 61. Weak Mutation 208: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:69 - InsertUnaryOp -1
   * Goal 62. Weak Mutation 210: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:69 - ReplaceComparisonOperator < -> -2
   * Goal 63. Weak Mutation 211: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:69 - ReplaceComparisonOperator < -> <=
   * Goal 64. Weak Mutation 191: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:70 - InsertUnaryOp Negation of v
   * Goal 65. Weak Mutation 192: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:70 - InsertUnaryOp IINC 1 v
   * Goal 66. Weak Mutation 193: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:70 - InsertUnaryOp IINC -1 v
   * Goal 67. Weak Mutation 194: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:70 - ReplaceComparisonOperator != -> ==
   * Goal 68. Weak Mutation 212: cap7.listaadj.autoreferencia.Grafo.grafoTransposto()Lcap7/listaadj/autoreferencia/Grafo;:77 - ReplaceVariable grafoT -> this
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Grafo grafo0 = new Grafo();
      Grafo grafo1 = grafo0.grafoTransposto();
      assertEquals(100, grafo1.numVertices());
      assertNotSame(grafo1, grafo0);
  }

  //Test case number: 4
  /*
   * 119 covered goals:
   * Goal 1. cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V: root-Branch
   * Goal 2. cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V: root-Branch
   * Goal 3. cap7.listaadj.autoreferencia.Grafo$Aresta.v2()I: root-Branch
   * Goal 4. cap7.listaadj.autoreferencia.Grafo$Celula.<init>(II)V: root-Branch
   * Goal 5. cap7.listaadj.autoreferencia.Grafo$Celula.equals(Ljava/lang/Object;)Z: I11 Branch 1 IF_ICMPNE L18 - false
   * Goal 6. cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - true
   * Goal 7. cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - false
   * Goal 8. cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;: I21 Branch 6 IFNULL L54 - false
   * Goal 9. Branch cap7.listaadj.autoreferencia.Grafo$Aresta.v2()I: root-Branch in context: cap7.listaadj.autoreferencia.Grafo$Aresta:v2()I
   * Goal 10. Branch cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V: root-Branch in context: cap7.listaadj.autoreferencia.Grafo:insereAresta(III)V
   * Goal 11. Branch cap7.listaadj.autoreferencia.Grafo$Celula.equals(Ljava/lang/Object;)Z: I11 Branch 1 IF_ICMPNE L18 - false in context: 
   * Goal 12. Branch cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - true in context: cap7.listaadj.autoreferencia.Grafo:<init>()V
   * Goal 13. Branch cap7.listaadj.autoreferencia.Grafo.<init>()V: I36 Branch 2 IF_ICMPLT L26 - false in context: cap7.listaadj.autoreferencia.Grafo:<init>()V
   * Goal 14. Branch cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;: I21 Branch 6 IFNULL L54 - false in context: cap7.listaadj.autoreferencia.Grafo:retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;
   * Goal 15. [Output]: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:NonNull:cap7.listaadj.autoreferencia.Grafo$Aresta:peso()I:Zero
   * Goal 16. [Output]: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:NonNull:cap7.listaadj.autoreferencia.Grafo$Aresta:v1()I:Zero
   * Goal 17. [Output]: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:NonNull:cap7.listaadj.autoreferencia.Grafo$Aresta:v2()I:Zero
   * Goal 18. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 24
   * Goal 19. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 25
   * Goal 20. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 26
   * Goal 21. cap7.listaadj.autoreferencia.Grafo.<init>()V: Line 27
   * Goal 22. cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V: Line 29
   * Goal 23. cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V: Line 30
   * Goal 24. cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V: Line 31
   * Goal 25. cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;: Line 52
   * Goal 26. cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;: Line 53
   * Goal 27. cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;: Line 54
   * Goal 28. cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V: Line 7
   * Goal 29. cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V: Line 8
   * Goal 30. cap7.listaadj.autoreferencia.Grafo$Aresta.v2()I: Line 11
   * Goal 31. cap7.listaadj.autoreferencia.Grafo$Celula.equals(Ljava/lang/Object;)Z: Line 17
   * Goal 32. cap7.listaadj.autoreferencia.Grafo$Celula.equals(Ljava/lang/Object;)Z: Line 18
   * Goal 33. [METHOD] cap7.listaadj.autoreferencia.Grafo.<init>()V
   * Goal 34. [METHOD] cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V
   * Goal 35. [METHOD] cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;
   * Goal 36. [METHODNOEX] cap7.listaadj.autoreferencia.Grafo.<init>()V
   * Goal 37. [METHODNOEX] cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V
   * Goal 38. [METHODNOEX] cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;
   * Goal 39. Weak Mutation 28: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp Negation of v1
   * Goal 40. Weak Mutation 29: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp IINC 1 v1
   * Goal 41. Weak Mutation 30: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp IINC -1 v1
   * Goal 42. Weak Mutation 33: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp Negation of v2
   * Goal 43. Weak Mutation 34: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp IINC 1 v2
   * Goal 44. Weak Mutation 35: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp IINC -1 v2
   * Goal 45. Weak Mutation 38: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp Negation of peso
   * Goal 46. Weak Mutation 39: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp IINC 1 peso
   * Goal 47. Weak Mutation 40: cap7.listaadj.autoreferencia.Grafo$Aresta.<init>(III)V:7 - InsertUnaryOp IINC -1 peso
   * Goal 48. Weak Mutation 47: cap7.listaadj.autoreferencia.Grafo$Aresta.v2()I:11 - InsertUnaryOp Negation
   * Goal 49. Weak Mutation 48: cap7.listaadj.autoreferencia.Grafo$Aresta.v2()I:11 - InsertUnaryOp +1
   * Goal 50. Weak Mutation 49: cap7.listaadj.autoreferencia.Grafo$Aresta.v2()I:11 - InsertUnaryOp -1
   * Goal 51. Weak Mutation 3: cap7.listaadj.autoreferencia.Grafo$Celula.<init>(II)V:15 - InsertUnaryOp Negation of v
   * Goal 52. Weak Mutation 4: cap7.listaadj.autoreferencia.Grafo$Celula.<init>(II)V:15 - InsertUnaryOp IINC 1 v
   * Goal 53. Weak Mutation 5: cap7.listaadj.autoreferencia.Grafo$Celula.<init>(II)V:15 - InsertUnaryOp IINC -1 v
   * Goal 54. Weak Mutation 9: cap7.listaadj.autoreferencia.Grafo$Celula.<init>(II)V:15 - InsertUnaryOp Negation of p
   * Goal 55. Weak Mutation 10: cap7.listaadj.autoreferencia.Grafo$Celula.<init>(II)V:15 - InsertUnaryOp IINC 1 p
   * Goal 56. Weak Mutation 11: cap7.listaadj.autoreferencia.Grafo$Celula.<init>(II)V:15 - InsertUnaryOp IINC -1 p
   * Goal 57. Weak Mutation 13: cap7.listaadj.autoreferencia.Grafo$Celula.equals(Ljava/lang/Object;)Z:18 - InsertUnaryOp Negation
   * Goal 58. Weak Mutation 14: cap7.listaadj.autoreferencia.Grafo$Celula.equals(Ljava/lang/Object;)Z:18 - InsertUnaryOp +1
   * Goal 59. Weak Mutation 15: cap7.listaadj.autoreferencia.Grafo$Celula.equals(Ljava/lang/Object;)Z:18 - InsertUnaryOp -1
   * Goal 60. Weak Mutation 16: cap7.listaadj.autoreferencia.Grafo$Celula.equals(Ljava/lang/Object;)Z:18 - ReplaceVariable item -> this
   * Goal 61. Weak Mutation 18: cap7.listaadj.autoreferencia.Grafo$Celula.equals(Ljava/lang/Object;)Z:18 - InsertUnaryOp Negation
   * Goal 62. Weak Mutation 19: cap7.listaadj.autoreferencia.Grafo$Celula.equals(Ljava/lang/Object;)Z:18 - InsertUnaryOp +1
   * Goal 63. Weak Mutation 20: cap7.listaadj.autoreferencia.Grafo$Celula.equals(Ljava/lang/Object;)Z:18 - InsertUnaryOp -1
   * Goal 64. Weak Mutation 21: cap7.listaadj.autoreferencia.Grafo$Celula.equals(Ljava/lang/Object;)Z:18 - ReplaceComparisonOperator != -> -1
   * Goal 65. Weak Mutation 24: cap7.listaadj.autoreferencia.Grafo$Celula.equals(Ljava/lang/Object;)Z:18 - ReplaceConstant - 1 -> 0
   * Goal 66. Weak Mutation 50: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 0
   * Goal 67. Weak Mutation 51: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 1
   * Goal 68. Weak Mutation 52: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> -1
   * Goal 69. Weak Mutation 53: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 99
   * Goal 70. Weak Mutation 54: cap7.listaadj.autoreferencia.Grafo.<init>()V:24 - ReplaceConstant - 100 -> 101
   * Goal 71. Weak Mutation 55: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp Negation of numVertices
   * Goal 72. Weak Mutation 56: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC 1 numVertices
   * Goal 73. Weak Mutation 57: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC -1 numVertices
   * Goal 74. Weak Mutation 58: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp Negation of numVertices
   * Goal 75. Weak Mutation 59: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC 1 numVertices
   * Goal 76. Weak Mutation 60: cap7.listaadj.autoreferencia.Grafo.<init>()V:25 - InsertUnaryOp IINC -1 numVertices
   * Goal 77. Weak Mutation 61: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceConstant - 0 -> 1
   * Goal 78. Weak Mutation 62: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceVariable i -> numVertices
   * Goal 79. Weak Mutation 63: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp Negation of i
   * Goal 80. Weak Mutation 64: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC 1 i
   * Goal 81. Weak Mutation 65: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC -1 i
   * Goal 82. Weak Mutation 66: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceVariable i -> numVertices
   * Goal 83. Weak Mutation 67: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceVariable i -> numVertices
   * Goal 84. Weak Mutation 68: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp Negation of i
   * Goal 85. Weak Mutation 69: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC 1 i
   * Goal 86. Weak Mutation 70: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp IINC -1 i
   * Goal 87. Weak Mutation 71: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp Negation
   * Goal 88. Weak Mutation 72: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp +1
   * Goal 89. Weak Mutation 73: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - InsertUnaryOp -1
   * Goal 90. Weak Mutation 75: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceComparisonOperator < -> -2
   * Goal 91. Weak Mutation 76: cap7.listaadj.autoreferencia.Grafo.<init>()V:26 - ReplaceComparisonOperator < -> <=
   * Goal 92. Weak Mutation 79: cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V:29 - InsertUnaryOp Negation of v2
   * Goal 93. Weak Mutation 80: cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V:29 - InsertUnaryOp IINC 1 v2
   * Goal 94. Weak Mutation 81: cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V:29 - InsertUnaryOp IINC -1 v2
   * Goal 95. Weak Mutation 84: cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V:29 - InsertUnaryOp Negation of peso
   * Goal 96. Weak Mutation 85: cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V:29 - InsertUnaryOp IINC 1 peso
   * Goal 97. Weak Mutation 86: cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V:29 - InsertUnaryOp IINC -1 peso
   * Goal 98. Weak Mutation 89: cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V:30 - InsertUnaryOp Negation of v1
   * Goal 99. Weak Mutation 90: cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V:30 - InsertUnaryOp IINC 1 v1
   * Goal 100. Weak Mutation 91: cap7.listaadj.autoreferencia.Grafo.insereAresta(III)V:30 - InsertUnaryOp IINC -1 v1
   * Goal 101. Weak Mutation 134: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:52 - InsertUnaryOp Negation of v2
   * Goal 102. Weak Mutation 135: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:52 - InsertUnaryOp IINC 1 v2
   * Goal 103. Weak Mutation 136: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:52 - InsertUnaryOp IINC -1 v2
   * Goal 104. Weak Mutation 137: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:52 - ReplaceConstant - 0 -> 1
   * Goal 105. Weak Mutation 139: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:53 - InsertUnaryOp Negation of v1
   * Goal 106. Weak Mutation 140: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:53 - InsertUnaryOp IINC 1 v1
   * Goal 107. Weak Mutation 141: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:53 - InsertUnaryOp IINC -1 v1
   * Goal 108. Weak Mutation 142: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:54 - ReplaceVariable item -> chave
   * Goal 109. Weak Mutation 143: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:54 - ReplaceComparisonOperator = null -> != null
   * Goal 110. Weak Mutation 145: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:54 - InsertUnaryOp Negation of v1
   * Goal 111. Weak Mutation 146: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:54 - InsertUnaryOp IINC 1 v1
   * Goal 112. Weak Mutation 147: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:54 - InsertUnaryOp IINC -1 v1
   * Goal 113. Weak Mutation 149: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:54 - InsertUnaryOp Negation of v2
   * Goal 114. Weak Mutation 150: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:54 - InsertUnaryOp IINC 1 v2
   * Goal 115. Weak Mutation 151: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:54 - InsertUnaryOp IINC -1 v2
   * Goal 116. Weak Mutation 152: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:54 - ReplaceVariable item -> chave
   * Goal 117. Weak Mutation 153: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:54 - InsertUnaryOp Negation
   * Goal 118. Weak Mutation 154: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:54 - InsertUnaryOp +1
   * Goal 119. Weak Mutation 155: cap7.listaadj.autoreferencia.Grafo.retiraAresta(II)Lcap7/listaadj/autoreferencia/Grafo$Aresta;:54 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Grafo grafo0 = new Grafo();
      grafo0.insereAresta(0, 0, 0);
      Grafo.Aresta grafo_Aresta0 = grafo0.retiraAresta(0, 0);
      assertNotNull(grafo_Aresta0);
      
      int int0 = grafo_Aresta0.v2();
      assertEquals(0, int0);
      assertEquals(100, grafo0.numVertices());
      assertEquals(0, grafo_Aresta0.peso());
      assertEquals(0, grafo_Aresta0.v1());
  }
}
